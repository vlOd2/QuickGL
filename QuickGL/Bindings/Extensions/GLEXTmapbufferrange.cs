// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:41:03.2544636Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLEXTmapbufferrange
{
    #region Constants
    public const int GL_MAP_READ_BIT_EXT = 0x00000001;
    public const int GL_MAP_WRITE_BIT_EXT = 0x00000002;
    public const int GL_MAP_INVALIDATE_RANGE_BIT_EXT = 0x00000004;
    public const int GL_MAP_INVALIDATE_BUFFER_BIT_EXT = 0x00000008;
    public const int GL_MAP_FLUSH_EXPLICIT_BIT_EXT = 0x00000010;
    public const int GL_MAP_UNSYNCHRONIZED_BIT_EXT = 0x00000020;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, nint, nint, uint, void*> _glMapBufferRangeEXT = null;
    internal static delegate* unmanaged<uint, nint, nint, void> _glFlushMappedBufferRangeEXT = null;

    internal static void Load()
    {
        _glMapBufferRangeEXT = (delegate* unmanaged<uint, nint, nint, uint, void*>)QuickGL.GetGLProcAddress("glMapBufferRangeEXT");
        _glFlushMappedBufferRangeEXT = (delegate* unmanaged<uint, nint, nint, void>)QuickGL.GetGLProcAddress("glFlushMappedBufferRangeEXT");
    }

    internal static void Unload()
    {
        _glMapBufferRangeEXT = null;
        _glFlushMappedBufferRangeEXT = null;
    }
    #endregion

    #region Function wrappers
    public static void* glMapBufferRangeEXT(uint target, nint offset, nint length, uint access) { QGLFeature.VerifyFunc((nint)_glMapBufferRangeEXT); return _glMapBufferRangeEXT(target, offset, length, access); }
    public static void glFlushMappedBufferRangeEXT(uint target, nint offset, nint length) { QGLFeature.VerifyFunc((nint)_glFlushMappedBufferRangeEXT); _glFlushMappedBufferRangeEXT(target, offset, length); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_EXT_map_buffer_range", true, true);
}
