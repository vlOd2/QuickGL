// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T20:04:55.8067499Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLEXTblendfuncextended
{
    #region Constants
    public const int GL_SRC1_COLOR_EXT = 0x000088F9;
    public const int GL_SRC1_ALPHA_EXT = 0x00008589;
    public const int GL_ONE_MINUS_SRC1_COLOR_EXT = 0x000088FA;
    public const int GL_ONE_MINUS_SRC1_ALPHA_EXT = 0x000088FB;
    public const int GL_SRC_ALPHA_SATURATE_EXT = 0x00000308;
    public const int GL_LOCATION_INDEX_EXT = 0x0000930F;
    public const int GL_MAX_DUAL_SOURCE_DRAW_BUFFERS_EXT = 0x000088FC;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, uint, uint, byte*, void> _glBindFragDataLocationIndexedEXT = null;
    internal static delegate* unmanaged<uint, uint, byte*, void> _glBindFragDataLocationEXT = null;
    internal static delegate* unmanaged<uint, uint, byte*, int> _glGetProgramResourceLocationIndexEXT = null;
    internal static delegate* unmanaged<uint, byte*, int> _glGetFragDataIndexEXT = null;

    internal static void Load()
    {
        _glBindFragDataLocationIndexedEXT = (delegate* unmanaged<uint, uint, uint, byte*, void>)QuickGL.GetGLProcAddress("glBindFragDataLocationIndexedEXT");
        _glBindFragDataLocationEXT = (delegate* unmanaged<uint, uint, byte*, void>)QuickGL.GetGLProcAddress("glBindFragDataLocationEXT");
        _glGetProgramResourceLocationIndexEXT = (delegate* unmanaged<uint, uint, byte*, int>)QuickGL.GetGLProcAddress("glGetProgramResourceLocationIndexEXT");
        _glGetFragDataIndexEXT = (delegate* unmanaged<uint, byte*, int>)QuickGL.GetGLProcAddress("glGetFragDataIndexEXT");
    }

    internal static void Unload()
    {
        _glBindFragDataLocationIndexedEXT = null;
        _glBindFragDataLocationEXT = null;
        _glGetProgramResourceLocationIndexEXT = null;
        _glGetFragDataIndexEXT = null;
    }
    #endregion

    #region Function wrappers
    public static void glBindFragDataLocationIndexedEXT(uint program, uint colorNumber, uint index, byte* name) { QGLFeature.VerifyFunc((nint)_glBindFragDataLocationIndexedEXT); _glBindFragDataLocationIndexedEXT(program, colorNumber, index, name); }
    public static void glBindFragDataLocationEXT(uint program, uint color, byte* name) { QGLFeature.VerifyFunc((nint)_glBindFragDataLocationEXT); _glBindFragDataLocationEXT(program, color, name); }
    public static int glGetProgramResourceLocationIndexEXT(uint program, uint programInterface, byte* name) { QGLFeature.VerifyFunc((nint)_glGetProgramResourceLocationIndexEXT); return _glGetProgramResourceLocationIndexEXT(program, programInterface, name); }
    public static int glGetFragDataIndexEXT(uint program, byte* name) { QGLFeature.VerifyFunc((nint)_glGetFragDataIndexEXT); return _glGetFragDataIndexEXT(program, name); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_EXT_blend_func_extended", true, true);
}
