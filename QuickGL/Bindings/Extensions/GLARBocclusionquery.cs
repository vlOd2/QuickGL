// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLARBocclusionquery
{
    #region Constants
    public const int GL_QUERY_COUNTER_BITS_ARB = 0x00008864;
    public const int GL_CURRENT_QUERY_ARB = 0x00008865;
    public const int GL_QUERY_RESULT_ARB = 0x00008866;
    public const int GL_QUERY_RESULT_AVAILABLE_ARB = 0x00008867;
    public const int GL_SAMPLES_PASSED_ARB = 0x00008914;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<int, uint*, void> _glGenQueriesARB = null;
    internal static delegate* unmanaged<int, uint*, void> _glDeleteQueriesARB = null;
    internal static delegate* unmanaged<uint, bool> _glIsQueryARB = null;
    internal static delegate* unmanaged<uint, uint, void> _glBeginQueryARB = null;
    internal static delegate* unmanaged<uint, void> _glEndQueryARB = null;
    internal static delegate* unmanaged<uint, uint, int*, void> _glGetQueryivARB = null;
    internal static delegate* unmanaged<uint, uint, int*, void> _glGetQueryObjectivARB = null;
    internal static delegate* unmanaged<uint, uint, uint*, void> _glGetQueryObjectuivARB = null;

    internal static void Load()
    {
        _glGenQueriesARB = (delegate* unmanaged<int, uint*, void>)QuickGL.GetGLProcAddress("glGenQueriesARB");
        _glDeleteQueriesARB = (delegate* unmanaged<int, uint*, void>)QuickGL.GetGLProcAddress("glDeleteQueriesARB");
        _glIsQueryARB = (delegate* unmanaged<uint, bool>)QuickGL.GetGLProcAddress("glIsQueryARB");
        _glBeginQueryARB = (delegate* unmanaged<uint, uint, void>)QuickGL.GetGLProcAddress("glBeginQueryARB");
        _glEndQueryARB = (delegate* unmanaged<uint, void>)QuickGL.GetGLProcAddress("glEndQueryARB");
        _glGetQueryivARB = (delegate* unmanaged<uint, uint, int*, void>)QuickGL.GetGLProcAddress("glGetQueryivARB");
        _glGetQueryObjectivARB = (delegate* unmanaged<uint, uint, int*, void>)QuickGL.GetGLProcAddress("glGetQueryObjectivARB");
        _glGetQueryObjectuivARB = (delegate* unmanaged<uint, uint, uint*, void>)QuickGL.GetGLProcAddress("glGetQueryObjectuivARB");
    }

    internal static void Unload()
    {
        _glGenQueriesARB = null;
        _glDeleteQueriesARB = null;
        _glIsQueryARB = null;
        _glBeginQueryARB = null;
        _glEndQueryARB = null;
        _glGetQueryivARB = null;
        _glGetQueryObjectivARB = null;
        _glGetQueryObjectuivARB = null;
    }
    #endregion

    #region Function wrappers
    public static void glGenQueriesARB(int n, uint* ids) { QGLFeature.VerifyFunc((nint)_glGenQueriesARB); _glGenQueriesARB(n, ids); }
    public static void glDeleteQueriesARB(int n, uint* ids) { QGLFeature.VerifyFunc((nint)_glDeleteQueriesARB); _glDeleteQueriesARB(n, ids); }
    public static bool glIsQueryARB(uint id) { QGLFeature.VerifyFunc((nint)_glIsQueryARB); return _glIsQueryARB(id); }
    public static void glBeginQueryARB(uint target, uint id) { QGLFeature.VerifyFunc((nint)_glBeginQueryARB); _glBeginQueryARB(target, id); }
    public static void glEndQueryARB(uint target) { QGLFeature.VerifyFunc((nint)_glEndQueryARB); _glEndQueryARB(target); }
    public static void glGetQueryivARB(uint target, uint pname, int* @params) { QGLFeature.VerifyFunc((nint)_glGetQueryivARB); _glGetQueryivARB(target, pname, @params); }
    public static void glGetQueryObjectivARB(uint id, uint pname, int* @params) { QGLFeature.VerifyFunc((nint)_glGetQueryObjectivARB); _glGetQueryObjectivARB(id, pname, @params); }
    public static void glGetQueryObjectuivARB(uint id, uint pname, uint* @params) { QGLFeature.VerifyFunc((nint)_glGetQueryObjectuivARB); _glGetQueryObjectuivARB(id, pname, @params); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_ARB_occlusion_query", true, false);
}
