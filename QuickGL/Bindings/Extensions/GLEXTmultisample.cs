// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLEXTmultisample
{
    #region Constants
    public const int GL_MULTISAMPLE_EXT = 0x0000809D;
    public const int GL_SAMPLE_ALPHA_TO_MASK_EXT = 0x0000809E;
    public const int GL_SAMPLE_ALPHA_TO_ONE_EXT = 0x0000809F;
    public const int GL_SAMPLE_MASK_EXT = 0x000080A0;
    public const int GL_1PASS_EXT = 0x000080A1;
    public const int GL_2PASS_0_EXT = 0x000080A2;
    public const int GL_2PASS_1_EXT = 0x000080A3;
    public const int GL_4PASS_0_EXT = 0x000080A4;
    public const int GL_4PASS_1_EXT = 0x000080A5;
    public const int GL_4PASS_2_EXT = 0x000080A6;
    public const int GL_4PASS_3_EXT = 0x000080A7;
    public const int GL_SAMPLE_BUFFERS_EXT = 0x000080A8;
    public const int GL_SAMPLES_EXT = 0x000080A9;
    public const int GL_SAMPLE_MASK_VALUE_EXT = 0x000080AA;
    public const int GL_SAMPLE_MASK_INVERT_EXT = 0x000080AB;
    public const int GL_SAMPLE_PATTERN_EXT = 0x000080AC;
    public const int GL_MULTISAMPLE_BIT_EXT = 0x20000000;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<float, bool, void> _glSampleMaskEXT = null;
    internal static delegate* unmanaged<uint, void> _glSamplePatternEXT = null;

    internal static void Load()
    {
        _glSampleMaskEXT = (delegate* unmanaged<float, bool, void>)QuickGL.GetGLProcAddress("glSampleMaskEXT");
        _glSamplePatternEXT = (delegate* unmanaged<uint, void>)QuickGL.GetGLProcAddress("glSamplePatternEXT");
    }

    internal static void Unload()
    {
        _glSampleMaskEXT = null;
        _glSamplePatternEXT = null;
    }
    #endregion

    #region Function wrappers
    public static void glSampleMaskEXT(float value, bool invert) { QGLFeature.VerifyFunc((nint)_glSampleMaskEXT); _glSampleMaskEXT(value, invert); }
    public static void glSamplePatternEXT(uint pattern) { QGLFeature.VerifyFunc((nint)_glSamplePatternEXT); _glSamplePatternEXT(pattern); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_EXT_multisample", true, false);
}
