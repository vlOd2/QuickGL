// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:43:43.7800776Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLARBindirectparameters
{
    #region Constants
    public const int GL_PARAMETER_BUFFER_ARB = 0x000080EE;
    public const int GL_PARAMETER_BUFFER_BINDING_ARB = 0x000080EF;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, void*, nint, int, int, void> _glMultiDrawArraysIndirectCountARB = null;
    internal static delegate* unmanaged<uint, uint, void*, nint, int, int, void> _glMultiDrawElementsIndirectCountARB = null;

    internal static void Load()
    {
        _glMultiDrawArraysIndirectCountARB = (delegate* unmanaged<uint, void*, nint, int, int, void>)QuickGL.GetGLProcAddress("glMultiDrawArraysIndirectCountARB");
        _glMultiDrawElementsIndirectCountARB = (delegate* unmanaged<uint, uint, void*, nint, int, int, void>)QuickGL.GetGLProcAddress("glMultiDrawElementsIndirectCountARB");
    }

    internal static void Unload()
    {
        _glMultiDrawArraysIndirectCountARB = null;
        _glMultiDrawElementsIndirectCountARB = null;
    }
    #endregion

    #region Function wrappers
    public static void glMultiDrawArraysIndirectCountARB(uint mode, void* indirect, nint drawcount, int maxdrawcount, int stride) { QGLFeature.VerifyFunc((nint)_glMultiDrawArraysIndirectCountARB); _glMultiDrawArraysIndirectCountARB(mode, indirect, drawcount, maxdrawcount, stride); }
    public static void glMultiDrawElementsIndirectCountARB(uint mode, uint type, void* indirect, nint drawcount, int maxdrawcount, int stride) { QGLFeature.VerifyFunc((nint)_glMultiDrawElementsIndirectCountARB); _glMultiDrawElementsIndirectCountARB(mode, type, indirect, drawcount, maxdrawcount, stride); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_ARB_indirect_parameters", true, false);
}
