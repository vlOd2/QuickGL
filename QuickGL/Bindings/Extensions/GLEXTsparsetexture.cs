// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLEXTsparsetexture
{
    #region Constants
    public const int GL_TEXTURE_SPARSE_EXT = 0x000091A6;
    public const int GL_VIRTUAL_PAGE_SIZE_INDEX_EXT = 0x000091A7;
    public const int GL_NUM_SPARSE_LEVELS_EXT = 0x000091AA;
    public const int GL_NUM_VIRTUAL_PAGE_SIZES_EXT = 0x000091A8;
    public const int GL_VIRTUAL_PAGE_SIZE_X_EXT = 0x00009195;
    public const int GL_VIRTUAL_PAGE_SIZE_Y_EXT = 0x00009196;
    public const int GL_VIRTUAL_PAGE_SIZE_Z_EXT = 0x00009197;
    public const int GL_TEXTURE_2D = 0x00000DE1;
    public const int GL_TEXTURE_2D_ARRAY = 0x00008C1A;
    public const int GL_TEXTURE_CUBE_MAP = 0x00008513;
    public const int GL_TEXTURE_CUBE_MAP_ARRAY_OES = 0x00009009;
    public const int GL_TEXTURE_3D = 0x0000806F;
    public const int GL_MAX_SPARSE_TEXTURE_SIZE_EXT = 0x00009198;
    public const int GL_MAX_SPARSE_3D_TEXTURE_SIZE_EXT = 0x00009199;
    public const int GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_EXT = 0x0000919A;
    public const int GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_EXT = 0x000091A9;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, int, int, int, int, int, int, int, bool, void> _glTexPageCommitmentEXT = null;

    internal static void Load()
    {
        _glTexPageCommitmentEXT = (delegate* unmanaged<uint, int, int, int, int, int, int, int, bool, void>)QuickGL.GetGLProcAddress("glTexPageCommitmentEXT");
    }

    internal static void Unload()
    {
        _glTexPageCommitmentEXT = null;
    }
    #endregion

    #region Function wrappers
    public static void glTexPageCommitmentEXT(uint target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, bool commit) { QGLFeature.VerifyFunc((nint)_glTexPageCommitmentEXT); _glTexPageCommitmentEXT(target, level, xoffset, yoffset, zoffset, width, height, depth, commit); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_EXT_sparse_texture", true, true);
}
