// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:41:03.0833331Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLARBsampleshading
{
    #region Constants
    public const int GL_SAMPLE_SHADING_ARB = 0x00008C36;
    public const int GL_MIN_SAMPLE_SHADING_VALUE_ARB = 0x00008C37;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<float, void> _glMinSampleShadingARB = null;

    internal static void Load()
    {
        _glMinSampleShadingARB = (delegate* unmanaged<float, void>)QuickGL.GetGLProcAddress("glMinSampleShadingARB");
    }

    internal static void Unload()
    {
        _glMinSampleShadingARB = null;
    }
    #endregion

    #region Function wrappers
    public static void glMinSampleShadingARB(float value) { QGLFeature.VerifyFunc((nint)_glMinSampleShadingARB); _glMinSampleShadingARB(value); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_ARB_sample_shading", true, false);
}
