// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:43:43.7518766Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLARBbufferstorage
{
    #region Constants
    public const int GL_MAP_READ_BIT = 0x00000001;
    public const int GL_MAP_WRITE_BIT = 0x00000002;
    public const int GL_MAP_PERSISTENT_BIT = 0x00000040;
    public const int GL_MAP_COHERENT_BIT = 0x00000080;
    public const int GL_DYNAMIC_STORAGE_BIT = 0x00000100;
    public const int GL_CLIENT_STORAGE_BIT = 0x00000200;
    public const int GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT = 0x00004000;
    public const int GL_BUFFER_IMMUTABLE_STORAGE = 0x0000821F;
    public const int GL_BUFFER_STORAGE_FLAGS = 0x00008220;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, nint, void*, uint, void> _glBufferStorage = null;

    internal static void Load()
    {
        _glBufferStorage = (delegate* unmanaged<uint, nint, void*, uint, void>)QuickGL.GetGLProcAddress("glBufferStorage");
    }

    internal static void Unload()
    {
        _glBufferStorage = null;
    }
    #endregion

    #region Function wrappers
    public static void glBufferStorage(uint target, nint size, void* data, uint flags) { QGLFeature.VerifyFunc((nint)_glBufferStorage); _glBufferStorage(target, size, data, flags); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_ARB_buffer_storage", true, false);
}
