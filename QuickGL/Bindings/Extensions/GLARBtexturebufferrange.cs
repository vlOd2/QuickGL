// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:41:03.1266579Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLARBtexturebufferrange
{
    #region Constants
    public const int GL_TEXTURE_BUFFER_OFFSET = 0x0000919D;
    public const int GL_TEXTURE_BUFFER_SIZE = 0x0000919E;
    public const int GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT = 0x0000919F;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, uint, uint, nint, nint, void> _glTexBufferRange = null;

    internal static void Load()
    {
        _glTexBufferRange = (delegate* unmanaged<uint, uint, uint, nint, nint, void>)QuickGL.GetGLProcAddress("glTexBufferRange");
    }

    internal static void Unload()
    {
        _glTexBufferRange = null;
    }
    #endregion

    #region Function wrappers
    public static void glTexBufferRange(uint target, uint internalformat, uint buffer, nint offset, nint size) { QGLFeature.VerifyFunc((nint)_glTexBufferRange); _glTexBufferRange(target, internalformat, buffer, offset, size); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_ARB_texture_buffer_range", true, false);
}
