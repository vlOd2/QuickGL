// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:00:37.9754602Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLEXTcoordinateframe
{
    #region Constants
    public const int GL_MAP2_BINORMAL_EXT = 0x00008447;
    public const int GL_MAP2_TANGENT_EXT = 0x00008445;
    public const int GL_TANGENT_ARRAY_POINTER_EXT = 0x00008442;
    public const int GL_MAP1_BINORMAL_EXT = 0x00008446;
    public const int GL_BINORMAL_ARRAY_POINTER_EXT = 0x00008443;
    public const int GL_BINORMAL_ARRAY_TYPE_EXT = 0x00008440;
    public const int GL_MAP1_TANGENT_EXT = 0x00008444;
    public const int GL_BINORMAL_ARRAY_STRIDE_EXT = 0x00008441;
    public const int GL_TANGENT_ARRAY_STRIDE_EXT = 0x0000843F;
    public const int GL_TANGENT_ARRAY_TYPE_EXT = 0x0000843E;
    public const int GL_CURRENT_BINORMAL_EXT = 0x0000843C;
    public const int GL_CURRENT_TANGENT_EXT = 0x0000843B;
    public const int GL_BINORMAL_ARRAY_EXT = 0x0000843A;
    public const int GL_TANGENT_ARRAY_EXT = 0x00008439;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, int, void*, void> _glTangentPointerEXT = null;
    internal static delegate* unmanaged<uint, int, void*, void> _glBinormalPointerEXT = null;
    internal static delegate* unmanaged<short*, void> _glBinormal3svEXT = null;
    internal static delegate* unmanaged<short, short, short, void> _glBinormal3sEXT = null;
    internal static delegate* unmanaged<int*, void> _glBinormal3ivEXT = null;
    internal static delegate* unmanaged<int, int, int, void> _glBinormal3iEXT = null;
    internal static delegate* unmanaged<float*, void> _glBinormal3fvEXT = null;
    internal static delegate* unmanaged<float, float, float, void> _glBinormal3fEXT = null;
    internal static delegate* unmanaged<double*, void> _glBinormal3dvEXT = null;
    internal static delegate* unmanaged<double, double, double, void> _glBinormal3dEXT = null;
    internal static delegate* unmanaged<sbyte*, void> _glBinormal3bvEXT = null;
    internal static delegate* unmanaged<sbyte, sbyte, sbyte, void> _glBinormal3bEXT = null;
    internal static delegate* unmanaged<short*, void> _glTangent3svEXT = null;
    internal static delegate* unmanaged<short, short, short, void> _glTangent3sEXT = null;
    internal static delegate* unmanaged<int*, void> _glTangent3ivEXT = null;
    internal static delegate* unmanaged<int, int, int, void> _glTangent3iEXT = null;
    internal static delegate* unmanaged<float*, void> _glTangent3fvEXT = null;
    internal static delegate* unmanaged<float, float, float, void> _glTangent3fEXT = null;
    internal static delegate* unmanaged<double*, void> _glTangent3dvEXT = null;
    internal static delegate* unmanaged<double, double, double, void> _glTangent3dEXT = null;
    internal static delegate* unmanaged<sbyte*, void> _glTangent3bvEXT = null;
    internal static delegate* unmanaged<sbyte, sbyte, sbyte, void> _glTangent3bEXT = null;

    internal static void Load()
    {
        _glTangentPointerEXT = (delegate* unmanaged<uint, int, void*, void>)QuickGL.GetGLProcAddress("glTangentPointerEXT");
        _glBinormalPointerEXT = (delegate* unmanaged<uint, int, void*, void>)QuickGL.GetGLProcAddress("glBinormalPointerEXT");
        _glBinormal3svEXT = (delegate* unmanaged<short*, void>)QuickGL.GetGLProcAddress("glBinormal3svEXT");
        _glBinormal3sEXT = (delegate* unmanaged<short, short, short, void>)QuickGL.GetGLProcAddress("glBinormal3sEXT");
        _glBinormal3ivEXT = (delegate* unmanaged<int*, void>)QuickGL.GetGLProcAddress("glBinormal3ivEXT");
        _glBinormal3iEXT = (delegate* unmanaged<int, int, int, void>)QuickGL.GetGLProcAddress("glBinormal3iEXT");
        _glBinormal3fvEXT = (delegate* unmanaged<float*, void>)QuickGL.GetGLProcAddress("glBinormal3fvEXT");
        _glBinormal3fEXT = (delegate* unmanaged<float, float, float, void>)QuickGL.GetGLProcAddress("glBinormal3fEXT");
        _glBinormal3dvEXT = (delegate* unmanaged<double*, void>)QuickGL.GetGLProcAddress("glBinormal3dvEXT");
        _glBinormal3dEXT = (delegate* unmanaged<double, double, double, void>)QuickGL.GetGLProcAddress("glBinormal3dEXT");
        _glBinormal3bvEXT = (delegate* unmanaged<sbyte*, void>)QuickGL.GetGLProcAddress("glBinormal3bvEXT");
        _glBinormal3bEXT = (delegate* unmanaged<sbyte, sbyte, sbyte, void>)QuickGL.GetGLProcAddress("glBinormal3bEXT");
        _glTangent3svEXT = (delegate* unmanaged<short*, void>)QuickGL.GetGLProcAddress("glTangent3svEXT");
        _glTangent3sEXT = (delegate* unmanaged<short, short, short, void>)QuickGL.GetGLProcAddress("glTangent3sEXT");
        _glTangent3ivEXT = (delegate* unmanaged<int*, void>)QuickGL.GetGLProcAddress("glTangent3ivEXT");
        _glTangent3iEXT = (delegate* unmanaged<int, int, int, void>)QuickGL.GetGLProcAddress("glTangent3iEXT");
        _glTangent3fvEXT = (delegate* unmanaged<float*, void>)QuickGL.GetGLProcAddress("glTangent3fvEXT");
        _glTangent3fEXT = (delegate* unmanaged<float, float, float, void>)QuickGL.GetGLProcAddress("glTangent3fEXT");
        _glTangent3dvEXT = (delegate* unmanaged<double*, void>)QuickGL.GetGLProcAddress("glTangent3dvEXT");
        _glTangent3dEXT = (delegate* unmanaged<double, double, double, void>)QuickGL.GetGLProcAddress("glTangent3dEXT");
        _glTangent3bvEXT = (delegate* unmanaged<sbyte*, void>)QuickGL.GetGLProcAddress("glTangent3bvEXT");
        _glTangent3bEXT = (delegate* unmanaged<sbyte, sbyte, sbyte, void>)QuickGL.GetGLProcAddress("glTangent3bEXT");
    }

    internal static void Unload()
    {
        _glTangentPointerEXT = null;
        _glBinormalPointerEXT = null;
        _glBinormal3svEXT = null;
        _glBinormal3sEXT = null;
        _glBinormal3ivEXT = null;
        _glBinormal3iEXT = null;
        _glBinormal3fvEXT = null;
        _glBinormal3fEXT = null;
        _glBinormal3dvEXT = null;
        _glBinormal3dEXT = null;
        _glBinormal3bvEXT = null;
        _glBinormal3bEXT = null;
        _glTangent3svEXT = null;
        _glTangent3sEXT = null;
        _glTangent3ivEXT = null;
        _glTangent3iEXT = null;
        _glTangent3fvEXT = null;
        _glTangent3fEXT = null;
        _glTangent3dvEXT = null;
        _glTangent3dEXT = null;
        _glTangent3bvEXT = null;
        _glTangent3bEXT = null;
    }
    #endregion

    #region Function wrappers
    public static void glTangentPointerEXT(uint type, int stride, void* pointer) { QGLFeature.VerifyFunc((nint)_glTangentPointerEXT); _glTangentPointerEXT(type, stride, pointer); }
    public static void glBinormalPointerEXT(uint type, int stride, void* pointer) { QGLFeature.VerifyFunc((nint)_glBinormalPointerEXT); _glBinormalPointerEXT(type, stride, pointer); }
    public static void glBinormal3svEXT(short* v) { QGLFeature.VerifyFunc((nint)_glBinormal3svEXT); _glBinormal3svEXT(v); }
    public static void glBinormal3sEXT(short bx, short by, short bz) { QGLFeature.VerifyFunc((nint)_glBinormal3sEXT); _glBinormal3sEXT(bx, by, bz); }
    public static void glBinormal3ivEXT(int* v) { QGLFeature.VerifyFunc((nint)_glBinormal3ivEXT); _glBinormal3ivEXT(v); }
    public static void glBinormal3iEXT(int bx, int by, int bz) { QGLFeature.VerifyFunc((nint)_glBinormal3iEXT); _glBinormal3iEXT(bx, by, bz); }
    public static void glBinormal3fvEXT(float* v) { QGLFeature.VerifyFunc((nint)_glBinormal3fvEXT); _glBinormal3fvEXT(v); }
    public static void glBinormal3fEXT(float bx, float by, float bz) { QGLFeature.VerifyFunc((nint)_glBinormal3fEXT); _glBinormal3fEXT(bx, by, bz); }
    public static void glBinormal3dvEXT(double* v) { QGLFeature.VerifyFunc((nint)_glBinormal3dvEXT); _glBinormal3dvEXT(v); }
    public static void glBinormal3dEXT(double bx, double by, double bz) { QGLFeature.VerifyFunc((nint)_glBinormal3dEXT); _glBinormal3dEXT(bx, by, bz); }
    public static void glBinormal3bvEXT(sbyte* v) { QGLFeature.VerifyFunc((nint)_glBinormal3bvEXT); _glBinormal3bvEXT(v); }
    public static void glBinormal3bEXT(sbyte bx, sbyte by, sbyte bz) { QGLFeature.VerifyFunc((nint)_glBinormal3bEXT); _glBinormal3bEXT(bx, by, bz); }
    public static void glTangent3svEXT(short* v) { QGLFeature.VerifyFunc((nint)_glTangent3svEXT); _glTangent3svEXT(v); }
    public static void glTangent3sEXT(short tx, short ty, short tz) { QGLFeature.VerifyFunc((nint)_glTangent3sEXT); _glTangent3sEXT(tx, ty, tz); }
    public static void glTangent3ivEXT(int* v) { QGLFeature.VerifyFunc((nint)_glTangent3ivEXT); _glTangent3ivEXT(v); }
    public static void glTangent3iEXT(int tx, int ty, int tz) { QGLFeature.VerifyFunc((nint)_glTangent3iEXT); _glTangent3iEXT(tx, ty, tz); }
    public static void glTangent3fvEXT(float* v) { QGLFeature.VerifyFunc((nint)_glTangent3fvEXT); _glTangent3fvEXT(v); }
    public static void glTangent3fEXT(float tx, float ty, float tz) { QGLFeature.VerifyFunc((nint)_glTangent3fEXT); _glTangent3fEXT(tx, ty, tz); }
    public static void glTangent3dvEXT(double* v) { QGLFeature.VerifyFunc((nint)_glTangent3dvEXT); _glTangent3dvEXT(v); }
    public static void glTangent3dEXT(double tx, double ty, double tz) { QGLFeature.VerifyFunc((nint)_glTangent3dEXT); _glTangent3dEXT(tx, ty, tz); }
    public static void glTangent3bvEXT(sbyte* v) { QGLFeature.VerifyFunc((nint)_glTangent3bvEXT); _glTangent3bvEXT(v); }
    public static void glTangent3bEXT(sbyte tx, sbyte ty, sbyte tz) { QGLFeature.VerifyFunc((nint)_glTangent3bEXT); _glTangent3bEXT(tx, ty, tz); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_EXT_coordinate_frame", true, false);
}
