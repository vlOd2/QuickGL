// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:41:03.1611008Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLARBtransposematrix
{
    #region Constants
    public const int GL_TRANSPOSE_MODELVIEW_MATRIX_ARB = 0x000084E3;
    public const int GL_TRANSPOSE_PROJECTION_MATRIX_ARB = 0x000084E4;
    public const int GL_TRANSPOSE_TEXTURE_MATRIX_ARB = 0x000084E5;
    public const int GL_TRANSPOSE_COLOR_MATRIX_ARB = 0x000084E6;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<float*, void> _glLoadTransposeMatrixfARB = null;
    internal static delegate* unmanaged<double*, void> _glLoadTransposeMatrixdARB = null;
    internal static delegate* unmanaged<float*, void> _glMultTransposeMatrixfARB = null;
    internal static delegate* unmanaged<double*, void> _glMultTransposeMatrixdARB = null;

    internal static void Load()
    {
        _glLoadTransposeMatrixfARB = (delegate* unmanaged<float*, void>)QuickGL.GetGLProcAddress("glLoadTransposeMatrixfARB");
        _glLoadTransposeMatrixdARB = (delegate* unmanaged<double*, void>)QuickGL.GetGLProcAddress("glLoadTransposeMatrixdARB");
        _glMultTransposeMatrixfARB = (delegate* unmanaged<float*, void>)QuickGL.GetGLProcAddress("glMultTransposeMatrixfARB");
        _glMultTransposeMatrixdARB = (delegate* unmanaged<double*, void>)QuickGL.GetGLProcAddress("glMultTransposeMatrixdARB");
    }

    internal static void Unload()
    {
        _glLoadTransposeMatrixfARB = null;
        _glLoadTransposeMatrixdARB = null;
        _glMultTransposeMatrixfARB = null;
        _glMultTransposeMatrixdARB = null;
    }
    #endregion

    #region Function wrappers
    public static void glLoadTransposeMatrixfARB(float* m) { QGLFeature.VerifyFunc((nint)_glLoadTransposeMatrixfARB); _glLoadTransposeMatrixfARB(m); }
    public static void glLoadTransposeMatrixdARB(double* m) { QGLFeature.VerifyFunc((nint)_glLoadTransposeMatrixdARB); _glLoadTransposeMatrixdARB(m); }
    public static void glMultTransposeMatrixfARB(float* m) { QGLFeature.VerifyFunc((nint)_glMultTransposeMatrixfARB); _glMultTransposeMatrixfARB(m); }
    public static void glMultTransposeMatrixdARB(double* m) { QGLFeature.VerifyFunc((nint)_glMultTransposeMatrixdARB); _glMultTransposeMatrixdARB(m); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_ARB_transpose_matrix", true, false);
}
