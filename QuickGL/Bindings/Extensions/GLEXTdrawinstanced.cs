// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:00:37.9921344Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLEXTdrawinstanced
{
    #region Constants
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, int, uint, void*, int, void> _glDrawElementsInstancedEXT = null;
    internal static delegate* unmanaged<uint, int, int, int, void> _glDrawArraysInstancedEXT = null;

    internal static void Load()
    {
        _glDrawElementsInstancedEXT = (delegate* unmanaged<uint, int, uint, void*, int, void>)QuickGL.GetGLProcAddress("glDrawElementsInstancedEXT");
        _glDrawArraysInstancedEXT = (delegate* unmanaged<uint, int, int, int, void>)QuickGL.GetGLProcAddress("glDrawArraysInstancedEXT");
    }

    internal static void Unload()
    {
        _glDrawElementsInstancedEXT = null;
        _glDrawArraysInstancedEXT = null;
    }
    #endregion

    #region Function wrappers
    public static void glDrawElementsInstancedEXT(uint mode, int count, uint type, void* indices, int primcount) { QGLFeature.VerifyFunc((nint)_glDrawElementsInstancedEXT); _glDrawElementsInstancedEXT(mode, count, type, indices, primcount); }
    public static void glDrawArraysInstancedEXT(uint mode, int start, int count, int primcount) { QGLFeature.VerifyFunc((nint)_glDrawArraysInstancedEXT); _glDrawArraysInstancedEXT(mode, start, count, primcount); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_EXT_draw_instanced", true, false);
}
