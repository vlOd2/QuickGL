// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:43:43.7897417Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLARBmultidrawindirect
{
    #region Constants
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, void*, int, int, void> _glMultiDrawArraysIndirect = null;
    internal static delegate* unmanaged<uint, uint, void*, int, int, void> _glMultiDrawElementsIndirect = null;

    internal static void Load()
    {
        _glMultiDrawArraysIndirect = (delegate* unmanaged<uint, void*, int, int, void>)QuickGL.GetGLProcAddress("glMultiDrawArraysIndirect");
        _glMultiDrawElementsIndirect = (delegate* unmanaged<uint, uint, void*, int, int, void>)QuickGL.GetGLProcAddress("glMultiDrawElementsIndirect");
    }

    internal static void Unload()
    {
        _glMultiDrawArraysIndirect = null;
        _glMultiDrawElementsIndirect = null;
    }
    #endregion

    #region Function wrappers
    public static void glMultiDrawArraysIndirect(uint mode, void* indirect, int drawcount, int stride) { QGLFeature.VerifyFunc((nint)_glMultiDrawArraysIndirect); _glMultiDrawArraysIndirect(mode, indirect, drawcount, stride); }
    public static void glMultiDrawElementsIndirect(uint mode, uint type, void* indirect, int drawcount, int stride) { QGLFeature.VerifyFunc((nint)_glMultiDrawElementsIndirect); _glMultiDrawElementsIndirect(mode, type, indirect, drawcount, stride); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_ARB_multi_draw_indirect", true, false);
}
