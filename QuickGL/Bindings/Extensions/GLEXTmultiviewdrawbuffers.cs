// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:00:38.0374732Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLEXTmultiviewdrawbuffers
{
    #region Constants
    public const int GL_MAX_MULTIVIEW_BUFFERS_EXT = 0x000090F2;
    public const int GL_READ_BUFFER_EXT = 0x00000C02;
    public const int GL_MULTIVIEW_EXT = 0x000090F1;
    public const int GL_DRAW_BUFFER_EXT = 0x00000C01;
    public const int GL_COLOR_ATTACHMENT_EXT = 0x000090F0;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, uint, int*, void> _glGetIntegeri_vEXT = null;
    internal static delegate* unmanaged<int, uint*, int*, void> _glDrawBuffersIndexedEXT = null;
    internal static delegate* unmanaged<uint, int, void> _glReadBufferIndexedEXT = null;

    internal static void Load()
    {
        _glGetIntegeri_vEXT = (delegate* unmanaged<uint, uint, int*, void>)QuickGL.GetGLProcAddress("glGetIntegeri_vEXT");
        _glDrawBuffersIndexedEXT = (delegate* unmanaged<int, uint*, int*, void>)QuickGL.GetGLProcAddress("glDrawBuffersIndexedEXT");
        _glReadBufferIndexedEXT = (delegate* unmanaged<uint, int, void>)QuickGL.GetGLProcAddress("glReadBufferIndexedEXT");
    }

    internal static void Unload()
    {
        _glGetIntegeri_vEXT = null;
        _glDrawBuffersIndexedEXT = null;
        _glReadBufferIndexedEXT = null;
    }
    #endregion

    #region Function wrappers
    public static void glGetIntegeri_vEXT(uint target, uint index, int* data) { QGLFeature.VerifyFunc((nint)_glGetIntegeri_vEXT); _glGetIntegeri_vEXT(target, index, data); }
    public static void glDrawBuffersIndexedEXT(int n, uint* location, int* indices) { QGLFeature.VerifyFunc((nint)_glDrawBuffersIndexedEXT); _glDrawBuffersIndexedEXT(n, location, indices); }
    public static void glReadBufferIndexedEXT(uint src, int index) { QGLFeature.VerifyFunc((nint)_glReadBufferIndexedEXT); _glReadBufferIndexedEXT(src, index); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_EXT_multiview_draw_buffers", true, true);
}
