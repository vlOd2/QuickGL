// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:00:38.0166455Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLEXThistogram
{
    #region Constants
    public const int GL_MINMAX_SINK_EXT = 0x00008030;
    public const int GL_TABLE_TOO_LARGE_EXT = 0x00008031;
    public const int GL_MINMAX_EXT = 0x0000802E;
    public const int GL_HISTOGRAM_RED_SIZE_EXT = 0x00008028;
    public const int GL_MINMAX_FORMAT_EXT = 0x0000802F;
    public const int GL_HISTOGRAM_SINK_EXT = 0x0000802D;
    public const int GL_HISTOGRAM_LUMINANCE_SIZE_EXT = 0x0000802C;
    public const int GL_HISTOGRAM_ALPHA_SIZE_EXT = 0x0000802B;
    public const int GL_HISTOGRAM_BLUE_SIZE_EXT = 0x0000802A;
    public const int GL_HISTOGRAM_GREEN_SIZE_EXT = 0x00008029;
    public const int GL_HISTOGRAM_FORMAT_EXT = 0x00008027;
    public const int GL_HISTOGRAM_WIDTH_EXT = 0x00008026;
    public const int GL_PROXY_HISTOGRAM_EXT = 0x00008025;
    public const int GL_HISTOGRAM_EXT = 0x00008024;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, void> _glResetHistogramEXT = null;
    internal static delegate* unmanaged<uint, int, uint, bool, void> _glHistogramEXT = null;
    internal static delegate* unmanaged<uint, uint, int*, void> _glGetMinmaxParameterivEXT = null;
    internal static delegate* unmanaged<uint, bool, uint, uint, void*, void> _glGetMinmaxEXT = null;
    internal static delegate* unmanaged<uint, uint, float*, void> _glGetHistogramParameterfvEXT = null;
    internal static delegate* unmanaged<uint, void> _glResetMinmaxEXT = null;
    internal static delegate* unmanaged<uint, uint, bool, void> _glMinmaxEXT = null;
    internal static delegate* unmanaged<uint, uint, float*, void> _glGetMinmaxParameterfvEXT = null;
    internal static delegate* unmanaged<uint, uint, int*, void> _glGetHistogramParameterivEXT = null;
    internal static delegate* unmanaged<uint, bool, uint, uint, void*, void> _glGetHistogramEXT = null;

    internal static void Load()
    {
        _glResetHistogramEXT = (delegate* unmanaged<uint, void>)QuickGL.GetGLProcAddress("glResetHistogramEXT");
        _glHistogramEXT = (delegate* unmanaged<uint, int, uint, bool, void>)QuickGL.GetGLProcAddress("glHistogramEXT");
        _glGetMinmaxParameterivEXT = (delegate* unmanaged<uint, uint, int*, void>)QuickGL.GetGLProcAddress("glGetMinmaxParameterivEXT");
        _glGetMinmaxEXT = (delegate* unmanaged<uint, bool, uint, uint, void*, void>)QuickGL.GetGLProcAddress("glGetMinmaxEXT");
        _glGetHistogramParameterfvEXT = (delegate* unmanaged<uint, uint, float*, void>)QuickGL.GetGLProcAddress("glGetHistogramParameterfvEXT");
        _glResetMinmaxEXT = (delegate* unmanaged<uint, void>)QuickGL.GetGLProcAddress("glResetMinmaxEXT");
        _glMinmaxEXT = (delegate* unmanaged<uint, uint, bool, void>)QuickGL.GetGLProcAddress("glMinmaxEXT");
        _glGetMinmaxParameterfvEXT = (delegate* unmanaged<uint, uint, float*, void>)QuickGL.GetGLProcAddress("glGetMinmaxParameterfvEXT");
        _glGetHistogramParameterivEXT = (delegate* unmanaged<uint, uint, int*, void>)QuickGL.GetGLProcAddress("glGetHistogramParameterivEXT");
        _glGetHistogramEXT = (delegate* unmanaged<uint, bool, uint, uint, void*, void>)QuickGL.GetGLProcAddress("glGetHistogramEXT");
    }

    internal static void Unload()
    {
        _glResetHistogramEXT = null;
        _glHistogramEXT = null;
        _glGetMinmaxParameterivEXT = null;
        _glGetMinmaxEXT = null;
        _glGetHistogramParameterfvEXT = null;
        _glResetMinmaxEXT = null;
        _glMinmaxEXT = null;
        _glGetMinmaxParameterfvEXT = null;
        _glGetHistogramParameterivEXT = null;
        _glGetHistogramEXT = null;
    }
    #endregion

    #region Function wrappers
    public static void glResetHistogramEXT(uint target) { QGLFeature.VerifyFunc((nint)_glResetHistogramEXT); _glResetHistogramEXT(target); }
    public static void glHistogramEXT(uint target, int width, uint internalformat, bool sink) { QGLFeature.VerifyFunc((nint)_glHistogramEXT); _glHistogramEXT(target, width, internalformat, sink); }
    public static void glGetMinmaxParameterivEXT(uint target, uint pname, int* @params) { QGLFeature.VerifyFunc((nint)_glGetMinmaxParameterivEXT); _glGetMinmaxParameterivEXT(target, pname, @params); }
    public static void glGetMinmaxEXT(uint target, bool reset, uint format, uint type, void* values) { QGLFeature.VerifyFunc((nint)_glGetMinmaxEXT); _glGetMinmaxEXT(target, reset, format, type, values); }
    public static void glGetHistogramParameterfvEXT(uint target, uint pname, float* @params) { QGLFeature.VerifyFunc((nint)_glGetHistogramParameterfvEXT); _glGetHistogramParameterfvEXT(target, pname, @params); }
    public static void glResetMinmaxEXT(uint target) { QGLFeature.VerifyFunc((nint)_glResetMinmaxEXT); _glResetMinmaxEXT(target); }
    public static void glMinmaxEXT(uint target, uint internalformat, bool sink) { QGLFeature.VerifyFunc((nint)_glMinmaxEXT); _glMinmaxEXT(target, internalformat, sink); }
    public static void glGetMinmaxParameterfvEXT(uint target, uint pname, float* @params) { QGLFeature.VerifyFunc((nint)_glGetMinmaxParameterfvEXT); _glGetMinmaxParameterfvEXT(target, pname, @params); }
    public static void glGetHistogramParameterivEXT(uint target, uint pname, int* @params) { QGLFeature.VerifyFunc((nint)_glGetHistogramParameterivEXT); _glGetHistogramParameterivEXT(target, pname, @params); }
    public static void glGetHistogramEXT(uint target, bool reset, uint format, uint type, void* values) { QGLFeature.VerifyFunc((nint)_glGetHistogramEXT); _glGetHistogramEXT(target, reset, format, type, values); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_EXT_histogram", true, false);
}
