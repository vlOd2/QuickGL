// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:00:37.8271323Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLARBmultibind
{
    #region Constants
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, int, uint*, nint*, int*, void> _glBindVertexBuffers = null;
    internal static delegate* unmanaged<uint, int, uint*, void> _glBindImageTextures = null;
    internal static delegate* unmanaged<uint, int, uint*, void> _glBindSamplers = null;
    internal static delegate* unmanaged<uint, int, uint*, void> _glBindTextures = null;
    internal static delegate* unmanaged<uint, uint, int, uint*, nint*, nint*, void> _glBindBuffersRange = null;
    internal static delegate* unmanaged<uint, uint, int, uint*, void> _glBindBuffersBase = null;

    internal static void Load()
    {
        _glBindVertexBuffers = (delegate* unmanaged<uint, int, uint*, nint*, int*, void>)QuickGL.GetGLProcAddress("glBindVertexBuffers");
        _glBindImageTextures = (delegate* unmanaged<uint, int, uint*, void>)QuickGL.GetGLProcAddress("glBindImageTextures");
        _glBindSamplers = (delegate* unmanaged<uint, int, uint*, void>)QuickGL.GetGLProcAddress("glBindSamplers");
        _glBindTextures = (delegate* unmanaged<uint, int, uint*, void>)QuickGL.GetGLProcAddress("glBindTextures");
        _glBindBuffersRange = (delegate* unmanaged<uint, uint, int, uint*, nint*, nint*, void>)QuickGL.GetGLProcAddress("glBindBuffersRange");
        _glBindBuffersBase = (delegate* unmanaged<uint, uint, int, uint*, void>)QuickGL.GetGLProcAddress("glBindBuffersBase");
    }

    internal static void Unload()
    {
        _glBindVertexBuffers = null;
        _glBindImageTextures = null;
        _glBindSamplers = null;
        _glBindTextures = null;
        _glBindBuffersRange = null;
        _glBindBuffersBase = null;
    }
    #endregion

    #region Function wrappers
    public static void glBindVertexBuffers(uint first, int count, uint* buffers, nint* offsets, int* strides) { QGLFeature.VerifyFunc((nint)_glBindVertexBuffers); _glBindVertexBuffers(first, count, buffers, offsets, strides); }
    public static void glBindImageTextures(uint first, int count, uint* textures) { QGLFeature.VerifyFunc((nint)_glBindImageTextures); _glBindImageTextures(first, count, textures); }
    public static void glBindSamplers(uint first, int count, uint* samplers) { QGLFeature.VerifyFunc((nint)_glBindSamplers); _glBindSamplers(first, count, samplers); }
    public static void glBindTextures(uint first, int count, uint* textures) { QGLFeature.VerifyFunc((nint)_glBindTextures); _glBindTextures(first, count, textures); }
    public static void glBindBuffersRange(uint target, uint first, int count, uint* buffers, nint* offsets, nint* sizes) { QGLFeature.VerifyFunc((nint)_glBindBuffersRange); _glBindBuffersRange(target, first, count, buffers, offsets, sizes); }
    public static void glBindBuffersBase(uint target, uint first, int count, uint* buffers) { QGLFeature.VerifyFunc((nint)_glBindBuffersBase); _glBindBuffersBase(target, first, count, buffers); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_ARB_multi_bind", true, false);
}
