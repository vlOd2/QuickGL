// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T20:04:55.6907317Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLARBdrawelementsbasevertex
{
    #region Constants
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, int, uint, void*, int, void> _glDrawElementsBaseVertex = null;
    internal static delegate* unmanaged<uint, uint, uint, int, uint, void*, int, void> _glDrawRangeElementsBaseVertex = null;
    internal static delegate* unmanaged<uint, int, uint, void*, int, int, void> _glDrawElementsInstancedBaseVertex = null;
    internal static delegate* unmanaged<uint, int*, uint, nint, int, int*, void> _glMultiDrawElementsBaseVertex = null;

    internal static void Load()
    {
        _glDrawElementsBaseVertex = (delegate* unmanaged<uint, int, uint, void*, int, void>)QuickGL.GetGLProcAddress("glDrawElementsBaseVertex");
        _glDrawRangeElementsBaseVertex = (delegate* unmanaged<uint, uint, uint, int, uint, void*, int, void>)QuickGL.GetGLProcAddress("glDrawRangeElementsBaseVertex");
        _glDrawElementsInstancedBaseVertex = (delegate* unmanaged<uint, int, uint, void*, int, int, void>)QuickGL.GetGLProcAddress("glDrawElementsInstancedBaseVertex");
        _glMultiDrawElementsBaseVertex = (delegate* unmanaged<uint, int*, uint, nint, int, int*, void>)QuickGL.GetGLProcAddress("glMultiDrawElementsBaseVertex");
    }

    internal static void Unload()
    {
        _glDrawElementsBaseVertex = null;
        _glDrawRangeElementsBaseVertex = null;
        _glDrawElementsInstancedBaseVertex = null;
        _glMultiDrawElementsBaseVertex = null;
    }
    #endregion

    #region Function wrappers
    public static void glDrawElementsBaseVertex(uint mode, int count, uint type, void* indices, int basevertex) { QGLFeature.VerifyFunc((nint)_glDrawElementsBaseVertex); _glDrawElementsBaseVertex(mode, count, type, indices, basevertex); }
    public static void glDrawRangeElementsBaseVertex(uint mode, uint start, uint end, int count, uint type, void* indices, int basevertex) { QGLFeature.VerifyFunc((nint)_glDrawRangeElementsBaseVertex); _glDrawRangeElementsBaseVertex(mode, start, end, count, type, indices, basevertex); }
    public static void glDrawElementsInstancedBaseVertex(uint mode, int count, uint type, void* indices, int instancecount, int basevertex) { QGLFeature.VerifyFunc((nint)_glDrawElementsInstancedBaseVertex); _glDrawElementsInstancedBaseVertex(mode, count, type, indices, instancecount, basevertex); }
    public static void glMultiDrawElementsBaseVertex(uint mode, int* count, uint type, nint indices, int drawcount, int* basevertex) { QGLFeature.VerifyFunc((nint)_glMultiDrawElementsBaseVertex); _glMultiDrawElementsBaseVertex(mode, count, type, indices, drawcount, basevertex); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_ARB_draw_elements_base_vertex", true, false);
}
