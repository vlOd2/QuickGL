// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:43:43.7739196Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLARBgeometryshader4
{
    #region Constants
    public const int GL_LINES_ADJACENCY_ARB = 0x0000000A;
    public const int GL_LINE_STRIP_ADJACENCY_ARB = 0x0000000B;
    public const int GL_TRIANGLES_ADJACENCY_ARB = 0x0000000C;
    public const int GL_TRIANGLE_STRIP_ADJACENCY_ARB = 0x0000000D;
    public const int GL_PROGRAM_POINT_SIZE_ARB = 0x00008642;
    public const int GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB = 0x00008C29;
    public const int GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB = 0x00008DA7;
    public const int GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB = 0x00008DA8;
    public const int GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB = 0x00008DA9;
    public const int GL_GEOMETRY_SHADER_ARB = 0x00008DD9;
    public const int GL_GEOMETRY_VERTICES_OUT_ARB = 0x00008DDA;
    public const int GL_GEOMETRY_INPUT_TYPE_ARB = 0x00008DDB;
    public const int GL_GEOMETRY_OUTPUT_TYPE_ARB = 0x00008DDC;
    public const int GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB = 0x00008DDD;
    public const int GL_MAX_VERTEX_VARYING_COMPONENTS_ARB = 0x00008DDE;
    public const int GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB = 0x00008DDF;
    public const int GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB = 0x00008DE0;
    public const int GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB = 0x00008DE1;
    public const int GL_MAX_VARYING_COMPONENTS = 0x00008B4B;
    public const int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 0x00008CD4;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, uint, int, void> _glProgramParameteriARB = null;
    internal static delegate* unmanaged<uint, uint, uint, int, void> _glFramebufferTextureARB = null;
    internal static delegate* unmanaged<uint, uint, uint, int, int, void> _glFramebufferTextureLayerARB = null;
    internal static delegate* unmanaged<uint, uint, uint, int, uint, void> _glFramebufferTextureFaceARB = null;

    internal static void Load()
    {
        _glProgramParameteriARB = (delegate* unmanaged<uint, uint, int, void>)QuickGL.GetGLProcAddress("glProgramParameteriARB");
        _glFramebufferTextureARB = (delegate* unmanaged<uint, uint, uint, int, void>)QuickGL.GetGLProcAddress("glFramebufferTextureARB");
        _glFramebufferTextureLayerARB = (delegate* unmanaged<uint, uint, uint, int, int, void>)QuickGL.GetGLProcAddress("glFramebufferTextureLayerARB");
        _glFramebufferTextureFaceARB = (delegate* unmanaged<uint, uint, uint, int, uint, void>)QuickGL.GetGLProcAddress("glFramebufferTextureFaceARB");
    }

    internal static void Unload()
    {
        _glProgramParameteriARB = null;
        _glFramebufferTextureARB = null;
        _glFramebufferTextureLayerARB = null;
        _glFramebufferTextureFaceARB = null;
    }
    #endregion

    #region Function wrappers
    public static void glProgramParameteriARB(uint program, uint pname, int value) { QGLFeature.VerifyFunc((nint)_glProgramParameteriARB); _glProgramParameteriARB(program, pname, value); }
    public static void glFramebufferTextureARB(uint target, uint attachment, uint texture, int level) { QGLFeature.VerifyFunc((nint)_glFramebufferTextureARB); _glFramebufferTextureARB(target, attachment, texture, level); }
    public static void glFramebufferTextureLayerARB(uint target, uint attachment, uint texture, int level, int layer) { QGLFeature.VerifyFunc((nint)_glFramebufferTextureLayerARB); _glFramebufferTextureLayerARB(target, attachment, texture, level, layer); }
    public static void glFramebufferTextureFaceARB(uint target, uint attachment, uint texture, int level, uint face) { QGLFeature.VerifyFunc((nint)_glFramebufferTextureFaceARB); _glFramebufferTextureFaceARB(target, attachment, texture, level, face); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_ARB_geometry_shader4", true, false);
}
