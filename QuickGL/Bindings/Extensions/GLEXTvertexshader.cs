// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T20:04:55.9107234Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLEXTvertexshader
{
    #region Constants
    public const int GL_VERTEX_SHADER_EXT = 0x00008780;
    public const int GL_VERTEX_SHADER_BINDING_EXT = 0x00008781;
    public const int GL_OP_INDEX_EXT = 0x00008782;
    public const int GL_OP_NEGATE_EXT = 0x00008783;
    public const int GL_OP_DOT3_EXT = 0x00008784;
    public const int GL_OP_DOT4_EXT = 0x00008785;
    public const int GL_OP_MUL_EXT = 0x00008786;
    public const int GL_OP_ADD_EXT = 0x00008787;
    public const int GL_OP_MADD_EXT = 0x00008788;
    public const int GL_OP_FRAC_EXT = 0x00008789;
    public const int GL_OP_MAX_EXT = 0x0000878A;
    public const int GL_OP_MIN_EXT = 0x0000878B;
    public const int GL_OP_SET_GE_EXT = 0x0000878C;
    public const int GL_OP_SET_LT_EXT = 0x0000878D;
    public const int GL_OP_CLAMP_EXT = 0x0000878E;
    public const int GL_OP_FLOOR_EXT = 0x0000878F;
    public const int GL_OP_ROUND_EXT = 0x00008790;
    public const int GL_OP_EXP_BASE_2_EXT = 0x00008791;
    public const int GL_OP_LOG_BASE_2_EXT = 0x00008792;
    public const int GL_OP_POWER_EXT = 0x00008793;
    public const int GL_OP_RECIP_EXT = 0x00008794;
    public const int GL_OP_RECIP_SQRT_EXT = 0x00008795;
    public const int GL_OP_SUB_EXT = 0x00008796;
    public const int GL_OP_CROSS_PRODUCT_EXT = 0x00008797;
    public const int GL_OP_MULTIPLY_MATRIX_EXT = 0x00008798;
    public const int GL_OP_MOV_EXT = 0x00008799;
    public const int GL_OUTPUT_VERTEX_EXT = 0x0000879A;
    public const int GL_OUTPUT_COLOR0_EXT = 0x0000879B;
    public const int GL_OUTPUT_COLOR1_EXT = 0x0000879C;
    public const int GL_OUTPUT_TEXTURE_COORD0_EXT = 0x0000879D;
    public const int GL_OUTPUT_TEXTURE_COORD1_EXT = 0x0000879E;
    public const int GL_OUTPUT_TEXTURE_COORD2_EXT = 0x0000879F;
    public const int GL_OUTPUT_TEXTURE_COORD3_EXT = 0x000087A0;
    public const int GL_OUTPUT_TEXTURE_COORD4_EXT = 0x000087A1;
    public const int GL_OUTPUT_TEXTURE_COORD5_EXT = 0x000087A2;
    public const int GL_OUTPUT_TEXTURE_COORD6_EXT = 0x000087A3;
    public const int GL_OUTPUT_TEXTURE_COORD7_EXT = 0x000087A4;
    public const int GL_OUTPUT_TEXTURE_COORD8_EXT = 0x000087A5;
    public const int GL_OUTPUT_TEXTURE_COORD9_EXT = 0x000087A6;
    public const int GL_OUTPUT_TEXTURE_COORD10_EXT = 0x000087A7;
    public const int GL_OUTPUT_TEXTURE_COORD11_EXT = 0x000087A8;
    public const int GL_OUTPUT_TEXTURE_COORD12_EXT = 0x000087A9;
    public const int GL_OUTPUT_TEXTURE_COORD13_EXT = 0x000087AA;
    public const int GL_OUTPUT_TEXTURE_COORD14_EXT = 0x000087AB;
    public const int GL_OUTPUT_TEXTURE_COORD15_EXT = 0x000087AC;
    public const int GL_OUTPUT_TEXTURE_COORD16_EXT = 0x000087AD;
    public const int GL_OUTPUT_TEXTURE_COORD17_EXT = 0x000087AE;
    public const int GL_OUTPUT_TEXTURE_COORD18_EXT = 0x000087AF;
    public const int GL_OUTPUT_TEXTURE_COORD19_EXT = 0x000087B0;
    public const int GL_OUTPUT_TEXTURE_COORD20_EXT = 0x000087B1;
    public const int GL_OUTPUT_TEXTURE_COORD21_EXT = 0x000087B2;
    public const int GL_OUTPUT_TEXTURE_COORD22_EXT = 0x000087B3;
    public const int GL_OUTPUT_TEXTURE_COORD23_EXT = 0x000087B4;
    public const int GL_OUTPUT_TEXTURE_COORD24_EXT = 0x000087B5;
    public const int GL_OUTPUT_TEXTURE_COORD25_EXT = 0x000087B6;
    public const int GL_OUTPUT_TEXTURE_COORD26_EXT = 0x000087B7;
    public const int GL_OUTPUT_TEXTURE_COORD27_EXT = 0x000087B8;
    public const int GL_OUTPUT_TEXTURE_COORD28_EXT = 0x000087B9;
    public const int GL_OUTPUT_TEXTURE_COORD29_EXT = 0x000087BA;
    public const int GL_OUTPUT_TEXTURE_COORD30_EXT = 0x000087BB;
    public const int GL_OUTPUT_TEXTURE_COORD31_EXT = 0x000087BC;
    public const int GL_OUTPUT_FOG_EXT = 0x000087BD;
    public const int GL_SCALAR_EXT = 0x000087BE;
    public const int GL_VECTOR_EXT = 0x000087BF;
    public const int GL_MATRIX_EXT = 0x000087C0;
    public const int GL_VARIANT_EXT = 0x000087C1;
    public const int GL_INVARIANT_EXT = 0x000087C2;
    public const int GL_LOCAL_CONSTANT_EXT = 0x000087C3;
    public const int GL_LOCAL_EXT = 0x000087C4;
    public const int GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x000087C5;
    public const int GL_MAX_VERTEX_SHADER_VARIANTS_EXT = 0x000087C6;
    public const int GL_MAX_VERTEX_SHADER_INVARIANTS_EXT = 0x000087C7;
    public const int GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x000087C8;
    public const int GL_MAX_VERTEX_SHADER_LOCALS_EXT = 0x000087C9;
    public const int GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x000087CA;
    public const int GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT = 0x000087CB;
    public const int GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x000087CC;
    public const int GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT = 0x000087CD;
    public const int GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT = 0x000087CE;
    public const int GL_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x000087CF;
    public const int GL_VERTEX_SHADER_VARIANTS_EXT = 0x000087D0;
    public const int GL_VERTEX_SHADER_INVARIANTS_EXT = 0x000087D1;
    public const int GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x000087D2;
    public const int GL_VERTEX_SHADER_LOCALS_EXT = 0x000087D3;
    public const int GL_VERTEX_SHADER_OPTIMIZED_EXT = 0x000087D4;
    public const int GL_X_EXT = 0x000087D5;
    public const int GL_Y_EXT = 0x000087D6;
    public const int GL_Z_EXT = 0x000087D7;
    public const int GL_W_EXT = 0x000087D8;
    public const int GL_NEGATIVE_X_EXT = 0x000087D9;
    public const int GL_NEGATIVE_Y_EXT = 0x000087DA;
    public const int GL_NEGATIVE_Z_EXT = 0x000087DB;
    public const int GL_NEGATIVE_W_EXT = 0x000087DC;
    public const int GL_ZERO_EXT = 0x000087DD;
    public const int GL_ONE_EXT = 0x000087DE;
    public const int GL_NEGATIVE_ONE_EXT = 0x000087DF;
    public const int GL_NORMALIZED_RANGE_EXT = 0x000087E0;
    public const int GL_FULL_RANGE_EXT = 0x000087E1;
    public const int GL_CURRENT_VERTEX_EXT = 0x000087E2;
    public const int GL_MVP_MATRIX_EXT = 0x000087E3;
    public const int GL_VARIANT_VALUE_EXT = 0x000087E4;
    public const int GL_VARIANT_DATATYPE_EXT = 0x000087E5;
    public const int GL_VARIANT_ARRAY_STRIDE_EXT = 0x000087E6;
    public const int GL_VARIANT_ARRAY_TYPE_EXT = 0x000087E7;
    public const int GL_VARIANT_ARRAY_EXT = 0x000087E8;
    public const int GL_VARIANT_ARRAY_POINTER_EXT = 0x000087E9;
    public const int GL_INVARIANT_VALUE_EXT = 0x000087EA;
    public const int GL_INVARIANT_DATATYPE_EXT = 0x000087EB;
    public const int GL_LOCAL_CONSTANT_VALUE_EXT = 0x000087EC;
    public const int GL_LOCAL_CONSTANT_DATATYPE_EXT = 0x000087ED;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<void> _glBeginVertexShaderEXT = null;
    internal static delegate* unmanaged<void> _glEndVertexShaderEXT = null;
    internal static delegate* unmanaged<uint, void> _glBindVertexShaderEXT = null;
    internal static delegate* unmanaged<uint, uint> _glGenVertexShadersEXT = null;
    internal static delegate* unmanaged<uint, void> _glDeleteVertexShaderEXT = null;
    internal static delegate* unmanaged<uint, uint, uint, void> _glShaderOp1EXT = null;
    internal static delegate* unmanaged<uint, uint, uint, uint, void> _glShaderOp2EXT = null;
    internal static delegate* unmanaged<uint, uint, uint, uint, uint, void> _glShaderOp3EXT = null;
    internal static delegate* unmanaged<uint, uint, uint, uint, uint, uint, void> _glSwizzleEXT = null;
    internal static delegate* unmanaged<uint, uint, uint, uint, uint, uint, void> _glWriteMaskEXT = null;
    internal static delegate* unmanaged<uint, uint, uint, void> _glInsertComponentEXT = null;
    internal static delegate* unmanaged<uint, uint, uint, void> _glExtractComponentEXT = null;
    internal static delegate* unmanaged<uint, uint, uint, uint, uint> _glGenSymbolsEXT = null;
    internal static delegate* unmanaged<uint, uint, void*, void> _glSetInvariantEXT = null;
    internal static delegate* unmanaged<uint, uint, void*, void> _glSetLocalConstantEXT = null;
    internal static delegate* unmanaged<uint, sbyte*, void> _glVariantbvEXT = null;
    internal static delegate* unmanaged<uint, short*, void> _glVariantsvEXT = null;
    internal static delegate* unmanaged<uint, int*, void> _glVariantivEXT = null;
    internal static delegate* unmanaged<uint, float*, void> _glVariantfvEXT = null;
    internal static delegate* unmanaged<uint, double*, void> _glVariantdvEXT = null;
    internal static delegate* unmanaged<uint, byte*, void> _glVariantubvEXT = null;
    internal static delegate* unmanaged<uint, ushort*, void> _glVariantusvEXT = null;
    internal static delegate* unmanaged<uint, uint*, void> _glVariantuivEXT = null;
    internal static delegate* unmanaged<uint, uint, uint, void*, void> _glVariantPointerEXT = null;
    internal static delegate* unmanaged<uint, void> _glEnableVariantClientStateEXT = null;
    internal static delegate* unmanaged<uint, void> _glDisableVariantClientStateEXT = null;
    internal static delegate* unmanaged<uint, uint, uint> _glBindLightParameterEXT = null;
    internal static delegate* unmanaged<uint, uint, uint> _glBindMaterialParameterEXT = null;
    internal static delegate* unmanaged<uint, uint, uint, uint> _glBindTexGenParameterEXT = null;
    internal static delegate* unmanaged<uint, uint, uint> _glBindTextureUnitParameterEXT = null;
    internal static delegate* unmanaged<uint, uint> _glBindParameterEXT = null;
    internal static delegate* unmanaged<uint, uint, bool> _glIsVariantEnabledEXT = null;
    internal static delegate* unmanaged<uint, uint, bool*, void> _glGetVariantBooleanvEXT = null;
    internal static delegate* unmanaged<uint, uint, int*, void> _glGetVariantIntegervEXT = null;
    internal static delegate* unmanaged<uint, uint, float*, void> _glGetVariantFloatvEXT = null;
    internal static delegate* unmanaged<uint, uint, void**, void> _glGetVariantPointervEXT = null;
    internal static delegate* unmanaged<uint, uint, bool*, void> _glGetInvariantBooleanvEXT = null;
    internal static delegate* unmanaged<uint, uint, int*, void> _glGetInvariantIntegervEXT = null;
    internal static delegate* unmanaged<uint, uint, float*, void> _glGetInvariantFloatvEXT = null;
    internal static delegate* unmanaged<uint, uint, bool*, void> _glGetLocalConstantBooleanvEXT = null;
    internal static delegate* unmanaged<uint, uint, int*, void> _glGetLocalConstantIntegervEXT = null;
    internal static delegate* unmanaged<uint, uint, float*, void> _glGetLocalConstantFloatvEXT = null;

    internal static void Load()
    {
        _glBeginVertexShaderEXT = (delegate* unmanaged<void>)QuickGL.GetGLProcAddress("glBeginVertexShaderEXT");
        _glEndVertexShaderEXT = (delegate* unmanaged<void>)QuickGL.GetGLProcAddress("glEndVertexShaderEXT");
        _glBindVertexShaderEXT = (delegate* unmanaged<uint, void>)QuickGL.GetGLProcAddress("glBindVertexShaderEXT");
        _glGenVertexShadersEXT = (delegate* unmanaged<uint, uint>)QuickGL.GetGLProcAddress("glGenVertexShadersEXT");
        _glDeleteVertexShaderEXT = (delegate* unmanaged<uint, void>)QuickGL.GetGLProcAddress("glDeleteVertexShaderEXT");
        _glShaderOp1EXT = (delegate* unmanaged<uint, uint, uint, void>)QuickGL.GetGLProcAddress("glShaderOp1EXT");
        _glShaderOp2EXT = (delegate* unmanaged<uint, uint, uint, uint, void>)QuickGL.GetGLProcAddress("glShaderOp2EXT");
        _glShaderOp3EXT = (delegate* unmanaged<uint, uint, uint, uint, uint, void>)QuickGL.GetGLProcAddress("glShaderOp3EXT");
        _glSwizzleEXT = (delegate* unmanaged<uint, uint, uint, uint, uint, uint, void>)QuickGL.GetGLProcAddress("glSwizzleEXT");
        _glWriteMaskEXT = (delegate* unmanaged<uint, uint, uint, uint, uint, uint, void>)QuickGL.GetGLProcAddress("glWriteMaskEXT");
        _glInsertComponentEXT = (delegate* unmanaged<uint, uint, uint, void>)QuickGL.GetGLProcAddress("glInsertComponentEXT");
        _glExtractComponentEXT = (delegate* unmanaged<uint, uint, uint, void>)QuickGL.GetGLProcAddress("glExtractComponentEXT");
        _glGenSymbolsEXT = (delegate* unmanaged<uint, uint, uint, uint, uint>)QuickGL.GetGLProcAddress("glGenSymbolsEXT");
        _glSetInvariantEXT = (delegate* unmanaged<uint, uint, void*, void>)QuickGL.GetGLProcAddress("glSetInvariantEXT");
        _glSetLocalConstantEXT = (delegate* unmanaged<uint, uint, void*, void>)QuickGL.GetGLProcAddress("glSetLocalConstantEXT");
        _glVariantbvEXT = (delegate* unmanaged<uint, sbyte*, void>)QuickGL.GetGLProcAddress("glVariantbvEXT");
        _glVariantsvEXT = (delegate* unmanaged<uint, short*, void>)QuickGL.GetGLProcAddress("glVariantsvEXT");
        _glVariantivEXT = (delegate* unmanaged<uint, int*, void>)QuickGL.GetGLProcAddress("glVariantivEXT");
        _glVariantfvEXT = (delegate* unmanaged<uint, float*, void>)QuickGL.GetGLProcAddress("glVariantfvEXT");
        _glVariantdvEXT = (delegate* unmanaged<uint, double*, void>)QuickGL.GetGLProcAddress("glVariantdvEXT");
        _glVariantubvEXT = (delegate* unmanaged<uint, byte*, void>)QuickGL.GetGLProcAddress("glVariantubvEXT");
        _glVariantusvEXT = (delegate* unmanaged<uint, ushort*, void>)QuickGL.GetGLProcAddress("glVariantusvEXT");
        _glVariantuivEXT = (delegate* unmanaged<uint, uint*, void>)QuickGL.GetGLProcAddress("glVariantuivEXT");
        _glVariantPointerEXT = (delegate* unmanaged<uint, uint, uint, void*, void>)QuickGL.GetGLProcAddress("glVariantPointerEXT");
        _glEnableVariantClientStateEXT = (delegate* unmanaged<uint, void>)QuickGL.GetGLProcAddress("glEnableVariantClientStateEXT");
        _glDisableVariantClientStateEXT = (delegate* unmanaged<uint, void>)QuickGL.GetGLProcAddress("glDisableVariantClientStateEXT");
        _glBindLightParameterEXT = (delegate* unmanaged<uint, uint, uint>)QuickGL.GetGLProcAddress("glBindLightParameterEXT");
        _glBindMaterialParameterEXT = (delegate* unmanaged<uint, uint, uint>)QuickGL.GetGLProcAddress("glBindMaterialParameterEXT");
        _glBindTexGenParameterEXT = (delegate* unmanaged<uint, uint, uint, uint>)QuickGL.GetGLProcAddress("glBindTexGenParameterEXT");
        _glBindTextureUnitParameterEXT = (delegate* unmanaged<uint, uint, uint>)QuickGL.GetGLProcAddress("glBindTextureUnitParameterEXT");
        _glBindParameterEXT = (delegate* unmanaged<uint, uint>)QuickGL.GetGLProcAddress("glBindParameterEXT");
        _glIsVariantEnabledEXT = (delegate* unmanaged<uint, uint, bool>)QuickGL.GetGLProcAddress("glIsVariantEnabledEXT");
        _glGetVariantBooleanvEXT = (delegate* unmanaged<uint, uint, bool*, void>)QuickGL.GetGLProcAddress("glGetVariantBooleanvEXT");
        _glGetVariantIntegervEXT = (delegate* unmanaged<uint, uint, int*, void>)QuickGL.GetGLProcAddress("glGetVariantIntegervEXT");
        _glGetVariantFloatvEXT = (delegate* unmanaged<uint, uint, float*, void>)QuickGL.GetGLProcAddress("glGetVariantFloatvEXT");
        _glGetVariantPointervEXT = (delegate* unmanaged<uint, uint, void**, void>)QuickGL.GetGLProcAddress("glGetVariantPointervEXT");
        _glGetInvariantBooleanvEXT = (delegate* unmanaged<uint, uint, bool*, void>)QuickGL.GetGLProcAddress("glGetInvariantBooleanvEXT");
        _glGetInvariantIntegervEXT = (delegate* unmanaged<uint, uint, int*, void>)QuickGL.GetGLProcAddress("glGetInvariantIntegervEXT");
        _glGetInvariantFloatvEXT = (delegate* unmanaged<uint, uint, float*, void>)QuickGL.GetGLProcAddress("glGetInvariantFloatvEXT");
        _glGetLocalConstantBooleanvEXT = (delegate* unmanaged<uint, uint, bool*, void>)QuickGL.GetGLProcAddress("glGetLocalConstantBooleanvEXT");
        _glGetLocalConstantIntegervEXT = (delegate* unmanaged<uint, uint, int*, void>)QuickGL.GetGLProcAddress("glGetLocalConstantIntegervEXT");
        _glGetLocalConstantFloatvEXT = (delegate* unmanaged<uint, uint, float*, void>)QuickGL.GetGLProcAddress("glGetLocalConstantFloatvEXT");
    }

    internal static void Unload()
    {
        _glBeginVertexShaderEXT = null;
        _glEndVertexShaderEXT = null;
        _glBindVertexShaderEXT = null;
        _glGenVertexShadersEXT = null;
        _glDeleteVertexShaderEXT = null;
        _glShaderOp1EXT = null;
        _glShaderOp2EXT = null;
        _glShaderOp3EXT = null;
        _glSwizzleEXT = null;
        _glWriteMaskEXT = null;
        _glInsertComponentEXT = null;
        _glExtractComponentEXT = null;
        _glGenSymbolsEXT = null;
        _glSetInvariantEXT = null;
        _glSetLocalConstantEXT = null;
        _glVariantbvEXT = null;
        _glVariantsvEXT = null;
        _glVariantivEXT = null;
        _glVariantfvEXT = null;
        _glVariantdvEXT = null;
        _glVariantubvEXT = null;
        _glVariantusvEXT = null;
        _glVariantuivEXT = null;
        _glVariantPointerEXT = null;
        _glEnableVariantClientStateEXT = null;
        _glDisableVariantClientStateEXT = null;
        _glBindLightParameterEXT = null;
        _glBindMaterialParameterEXT = null;
        _glBindTexGenParameterEXT = null;
        _glBindTextureUnitParameterEXT = null;
        _glBindParameterEXT = null;
        _glIsVariantEnabledEXT = null;
        _glGetVariantBooleanvEXT = null;
        _glGetVariantIntegervEXT = null;
        _glGetVariantFloatvEXT = null;
        _glGetVariantPointervEXT = null;
        _glGetInvariantBooleanvEXT = null;
        _glGetInvariantIntegervEXT = null;
        _glGetInvariantFloatvEXT = null;
        _glGetLocalConstantBooleanvEXT = null;
        _glGetLocalConstantIntegervEXT = null;
        _glGetLocalConstantFloatvEXT = null;
    }
    #endregion

    #region Function wrappers
    public static void glBeginVertexShaderEXT() { QGLFeature.VerifyFunc((nint)_glBeginVertexShaderEXT); _glBeginVertexShaderEXT(); }
    public static void glEndVertexShaderEXT() { QGLFeature.VerifyFunc((nint)_glEndVertexShaderEXT); _glEndVertexShaderEXT(); }
    public static void glBindVertexShaderEXT(uint id) { QGLFeature.VerifyFunc((nint)_glBindVertexShaderEXT); _glBindVertexShaderEXT(id); }
    public static uint glGenVertexShadersEXT(uint range) { QGLFeature.VerifyFunc((nint)_glGenVertexShadersEXT); return _glGenVertexShadersEXT(range); }
    public static void glDeleteVertexShaderEXT(uint id) { QGLFeature.VerifyFunc((nint)_glDeleteVertexShaderEXT); _glDeleteVertexShaderEXT(id); }
    public static void glShaderOp1EXT(uint op, uint res, uint arg1) { QGLFeature.VerifyFunc((nint)_glShaderOp1EXT); _glShaderOp1EXT(op, res, arg1); }
    public static void glShaderOp2EXT(uint op, uint res, uint arg1, uint arg2) { QGLFeature.VerifyFunc((nint)_glShaderOp2EXT); _glShaderOp2EXT(op, res, arg1, arg2); }
    public static void glShaderOp3EXT(uint op, uint res, uint arg1, uint arg2, uint arg3) { QGLFeature.VerifyFunc((nint)_glShaderOp3EXT); _glShaderOp3EXT(op, res, arg1, arg2, arg3); }
    public static void glSwizzleEXT(uint res, uint @in, uint outX, uint outY, uint outZ, uint outW) { QGLFeature.VerifyFunc((nint)_glSwizzleEXT); _glSwizzleEXT(res, @in, outX, outY, outZ, outW); }
    public static void glWriteMaskEXT(uint res, uint @in, uint outX, uint outY, uint outZ, uint outW) { QGLFeature.VerifyFunc((nint)_glWriteMaskEXT); _glWriteMaskEXT(res, @in, outX, outY, outZ, outW); }
    public static void glInsertComponentEXT(uint res, uint src, uint num) { QGLFeature.VerifyFunc((nint)_glInsertComponentEXT); _glInsertComponentEXT(res, src, num); }
    public static void glExtractComponentEXT(uint res, uint src, uint num) { QGLFeature.VerifyFunc((nint)_glExtractComponentEXT); _glExtractComponentEXT(res, src, num); }
    public static uint glGenSymbolsEXT(uint datatype, uint storagetype, uint range, uint components) { QGLFeature.VerifyFunc((nint)_glGenSymbolsEXT); return _glGenSymbolsEXT(datatype, storagetype, range, components); }
    public static void glSetInvariantEXT(uint id, uint type, void* addr) { QGLFeature.VerifyFunc((nint)_glSetInvariantEXT); _glSetInvariantEXT(id, type, addr); }
    public static void glSetLocalConstantEXT(uint id, uint type, void* addr) { QGLFeature.VerifyFunc((nint)_glSetLocalConstantEXT); _glSetLocalConstantEXT(id, type, addr); }
    public static void glVariantbvEXT(uint id, sbyte* addr) { QGLFeature.VerifyFunc((nint)_glVariantbvEXT); _glVariantbvEXT(id, addr); }
    public static void glVariantsvEXT(uint id, short* addr) { QGLFeature.VerifyFunc((nint)_glVariantsvEXT); _glVariantsvEXT(id, addr); }
    public static void glVariantivEXT(uint id, int* addr) { QGLFeature.VerifyFunc((nint)_glVariantivEXT); _glVariantivEXT(id, addr); }
    public static void glVariantfvEXT(uint id, float* addr) { QGLFeature.VerifyFunc((nint)_glVariantfvEXT); _glVariantfvEXT(id, addr); }
    public static void glVariantdvEXT(uint id, double* addr) { QGLFeature.VerifyFunc((nint)_glVariantdvEXT); _glVariantdvEXT(id, addr); }
    public static void glVariantubvEXT(uint id, byte* addr) { QGLFeature.VerifyFunc((nint)_glVariantubvEXT); _glVariantubvEXT(id, addr); }
    public static void glVariantusvEXT(uint id, ushort* addr) { QGLFeature.VerifyFunc((nint)_glVariantusvEXT); _glVariantusvEXT(id, addr); }
    public static void glVariantuivEXT(uint id, uint* addr) { QGLFeature.VerifyFunc((nint)_glVariantuivEXT); _glVariantuivEXT(id, addr); }
    public static void glVariantPointerEXT(uint id, uint type, uint stride, void* addr) { QGLFeature.VerifyFunc((nint)_glVariantPointerEXT); _glVariantPointerEXT(id, type, stride, addr); }
    public static void glEnableVariantClientStateEXT(uint id) { QGLFeature.VerifyFunc((nint)_glEnableVariantClientStateEXT); _glEnableVariantClientStateEXT(id); }
    public static void glDisableVariantClientStateEXT(uint id) { QGLFeature.VerifyFunc((nint)_glDisableVariantClientStateEXT); _glDisableVariantClientStateEXT(id); }
    public static uint glBindLightParameterEXT(uint light, uint value) { QGLFeature.VerifyFunc((nint)_glBindLightParameterEXT); return _glBindLightParameterEXT(light, value); }
    public static uint glBindMaterialParameterEXT(uint face, uint value) { QGLFeature.VerifyFunc((nint)_glBindMaterialParameterEXT); return _glBindMaterialParameterEXT(face, value); }
    public static uint glBindTexGenParameterEXT(uint unit, uint coord, uint value) { QGLFeature.VerifyFunc((nint)_glBindTexGenParameterEXT); return _glBindTexGenParameterEXT(unit, coord, value); }
    public static uint glBindTextureUnitParameterEXT(uint unit, uint value) { QGLFeature.VerifyFunc((nint)_glBindTextureUnitParameterEXT); return _glBindTextureUnitParameterEXT(unit, value); }
    public static uint glBindParameterEXT(uint value) { QGLFeature.VerifyFunc((nint)_glBindParameterEXT); return _glBindParameterEXT(value); }
    public static bool glIsVariantEnabledEXT(uint id, uint cap) { QGLFeature.VerifyFunc((nint)_glIsVariantEnabledEXT); return _glIsVariantEnabledEXT(id, cap); }
    public static void glGetVariantBooleanvEXT(uint id, uint value, bool* data) { QGLFeature.VerifyFunc((nint)_glGetVariantBooleanvEXT); _glGetVariantBooleanvEXT(id, value, data); }
    public static void glGetVariantIntegervEXT(uint id, uint value, int* data) { QGLFeature.VerifyFunc((nint)_glGetVariantIntegervEXT); _glGetVariantIntegervEXT(id, value, data); }
    public static void glGetVariantFloatvEXT(uint id, uint value, float* data) { QGLFeature.VerifyFunc((nint)_glGetVariantFloatvEXT); _glGetVariantFloatvEXT(id, value, data); }
    public static void glGetVariantPointervEXT(uint id, uint value, void** data) { QGLFeature.VerifyFunc((nint)_glGetVariantPointervEXT); _glGetVariantPointervEXT(id, value, data); }
    public static void glGetInvariantBooleanvEXT(uint id, uint value, bool* data) { QGLFeature.VerifyFunc((nint)_glGetInvariantBooleanvEXT); _glGetInvariantBooleanvEXT(id, value, data); }
    public static void glGetInvariantIntegervEXT(uint id, uint value, int* data) { QGLFeature.VerifyFunc((nint)_glGetInvariantIntegervEXT); _glGetInvariantIntegervEXT(id, value, data); }
    public static void glGetInvariantFloatvEXT(uint id, uint value, float* data) { QGLFeature.VerifyFunc((nint)_glGetInvariantFloatvEXT); _glGetInvariantFloatvEXT(id, value, data); }
    public static void glGetLocalConstantBooleanvEXT(uint id, uint value, bool* data) { QGLFeature.VerifyFunc((nint)_glGetLocalConstantBooleanvEXT); _glGetLocalConstantBooleanvEXT(id, value, data); }
    public static void glGetLocalConstantIntegervEXT(uint id, uint value, int* data) { QGLFeature.VerifyFunc((nint)_glGetLocalConstantIntegervEXT); _glGetLocalConstantIntegervEXT(id, value, data); }
    public static void glGetLocalConstantFloatvEXT(uint id, uint value, float* data) { QGLFeature.VerifyFunc((nint)_glGetLocalConstantFloatvEXT); _glGetLocalConstantFloatvEXT(id, value, data); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_EXT_vertex_shader", true, false);
}
