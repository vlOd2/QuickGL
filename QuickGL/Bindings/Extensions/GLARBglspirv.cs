// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:43:43.7762236Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLARBglspirv
{
    #region Constants
    public const int GL_SHADER_BINARY_FORMAT_SPIR_V_ARB = 0x00009551;
    public const int GL_SPIR_V_BINARY_ARB = 0x00009552;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, byte*, uint, uint*, uint*, void> _glSpecializeShaderARB = null;

    internal static void Load()
    {
        _glSpecializeShaderARB = (delegate* unmanaged<uint, byte*, uint, uint*, uint*, void>)QuickGL.GetGLProcAddress("glSpecializeShaderARB");
    }

    internal static void Unload()
    {
        _glSpecializeShaderARB = null;
    }
    #endregion

    #region Function wrappers
    public static void glSpecializeShaderARB(uint shader, byte* pEntryPoint, uint numSpecializationConstants, uint* pConstantIndex, uint* pConstantValue) { QGLFeature.VerifyFunc((nint)_glSpecializeShaderARB); _glSpecializeShaderARB(shader, pEntryPoint, numSpecializationConstants, pConstantIndex, pConstantValue); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_ARB_gl_spirv", true, false);
}
