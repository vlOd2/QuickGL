// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T20:04:55.7637005Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLARBtransformfeedbackinstanced
{
    #region Constants
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, uint, int, void> _glDrawTransformFeedbackInstanced = null;
    internal static delegate* unmanaged<uint, uint, uint, int, void> _glDrawTransformFeedbackStreamInstanced = null;

    internal static void Load()
    {
        _glDrawTransformFeedbackInstanced = (delegate* unmanaged<uint, uint, int, void>)QuickGL.GetGLProcAddress("glDrawTransformFeedbackInstanced");
        _glDrawTransformFeedbackStreamInstanced = (delegate* unmanaged<uint, uint, uint, int, void>)QuickGL.GetGLProcAddress("glDrawTransformFeedbackStreamInstanced");
    }

    internal static void Unload()
    {
        _glDrawTransformFeedbackInstanced = null;
        _glDrawTransformFeedbackStreamInstanced = null;
    }
    #endregion

    #region Function wrappers
    public static void glDrawTransformFeedbackInstanced(uint mode, uint id, int instancecount) { QGLFeature.VerifyFunc((nint)_glDrawTransformFeedbackInstanced); _glDrawTransformFeedbackInstanced(mode, id, instancecount); }
    public static void glDrawTransformFeedbackStreamInstanced(uint mode, uint id, uint stream, int instancecount) { QGLFeature.VerifyFunc((nint)_glDrawTransformFeedbackStreamInstanced); _glDrawTransformFeedbackStreamInstanced(mode, id, stream, instancecount); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_ARB_transform_feedback_instanced", true, false);
}
