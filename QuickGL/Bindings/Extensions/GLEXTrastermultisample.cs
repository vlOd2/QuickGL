// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T20:04:55.8605207Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLEXTrastermultisample
{
    #region Constants
    public const int GL_RASTER_MULTISAMPLE_EXT = 0x00009327;
    public const int GL_RASTER_SAMPLES_EXT = 0x00009328;
    public const int GL_MAX_RASTER_SAMPLES_EXT = 0x00009329;
    public const int GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT = 0x0000932A;
    public const int GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT = 0x0000932B;
    public const int GL_EFFECTIVE_RASTER_SAMPLES_EXT = 0x0000932C;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, bool, void> _glRasterSamplesEXT = null;

    internal static void Load()
    {
        _glRasterSamplesEXT = (delegate* unmanaged<uint, bool, void>)QuickGL.GetGLProcAddress("glRasterSamplesEXT");
    }

    internal static void Unload()
    {
        _glRasterSamplesEXT = null;
    }
    #endregion

    #region Function wrappers
    public static void glRasterSamplesEXT(uint samples, bool fixedsamplelocations) { QGLFeature.VerifyFunc((nint)_glRasterSamplesEXT); _glRasterSamplesEXT(samples, fixedsamplelocations); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_EXT_raster_multisample", true, false);
}
