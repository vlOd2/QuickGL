// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:00:37.8081905Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLARBgetprogrambinary
{
    #region Constants
    public const int GL_PROGRAM_BINARY_FORMATS = 0x000087FF;
    public const int GL_NUM_PROGRAM_BINARY_FORMATS = 0x000087FE;
    public const int GL_PROGRAM_BINARY_LENGTH = 0x00008741;
    public const int GL_PROGRAM_BINARY_RETRIEVABLE_HINT = 0x00008257;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, uint, int, void> _glProgramParameteri = null;
    internal static delegate* unmanaged<uint, uint, void*, int, void> _glProgramBinary = null;
    internal static delegate* unmanaged<uint, int, int*, uint*, void*, void> _glGetProgramBinary = null;

    internal static void Load()
    {
        _glProgramParameteri = (delegate* unmanaged<uint, uint, int, void>)QuickGL.GetGLProcAddress("glProgramParameteri");
        _glProgramBinary = (delegate* unmanaged<uint, uint, void*, int, void>)QuickGL.GetGLProcAddress("glProgramBinary");
        _glGetProgramBinary = (delegate* unmanaged<uint, int, int*, uint*, void*, void>)QuickGL.GetGLProcAddress("glGetProgramBinary");
    }

    internal static void Unload()
    {
        _glProgramParameteri = null;
        _glProgramBinary = null;
        _glGetProgramBinary = null;
    }
    #endregion

    #region Function wrappers
    public static void glProgramParameteri(uint program, uint pname, int value) { QGLFeature.VerifyFunc((nint)_glProgramParameteri); _glProgramParameteri(program, pname, value); }
    public static void glProgramBinary(uint program, uint binaryFormat, void* binary, int length) { QGLFeature.VerifyFunc((nint)_glProgramBinary); _glProgramBinary(program, binaryFormat, binary, length); }
    public static void glGetProgramBinary(uint program, int bufSize, int* length, uint* binaryFormat, void* binary) { QGLFeature.VerifyFunc((nint)_glGetProgramBinary); _glGetProgramBinary(program, bufSize, length, binaryFormat, binary); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_ARB_get_program_binary", true, false);
}
