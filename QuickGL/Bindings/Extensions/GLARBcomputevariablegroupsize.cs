// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLARBcomputevariablegroupsize
{
    #region Constants
    public const int GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB = 0x00009344;
    public const int GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB = 0x000090EB;
    public const int GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB = 0x00009345;
    public const int GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB = 0x000091BF;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, uint, uint, uint, uint, uint, void> _glDispatchComputeGroupSizeARB = null;

    internal static void Load()
    {
        _glDispatchComputeGroupSizeARB = (delegate* unmanaged<uint, uint, uint, uint, uint, uint, void>)QuickGL.GetGLProcAddress("glDispatchComputeGroupSizeARB");
    }

    internal static void Unload()
    {
        _glDispatchComputeGroupSizeARB = null;
    }
    #endregion

    #region Function wrappers
    public static void glDispatchComputeGroupSizeARB(uint num_groups_x, uint num_groups_y, uint num_groups_z, uint group_size_x, uint group_size_y, uint group_size_z) { QGLFeature.VerifyFunc((nint)_glDispatchComputeGroupSizeARB); _glDispatchComputeGroupSizeARB(num_groups_x, num_groups_y, num_groups_z, group_size_x, group_size_y, group_size_z); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_ARB_compute_variable_group_size", true, false);
}
