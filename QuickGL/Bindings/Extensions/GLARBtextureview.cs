// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLARBtextureview
{
    #region Constants
    public const int GL_TEXTURE_VIEW_MIN_LEVEL = 0x000082DB;
    public const int GL_TEXTURE_VIEW_NUM_LEVELS = 0x000082DC;
    public const int GL_TEXTURE_VIEW_MIN_LAYER = 0x000082DD;
    public const int GL_TEXTURE_VIEW_NUM_LAYERS = 0x000082DE;
    public const int GL_TEXTURE_IMMUTABLE_LEVELS = 0x000082DF;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, uint, uint, uint, uint, uint, uint, uint, void> _glTextureView = null;

    internal static void Load()
    {
        _glTextureView = (delegate* unmanaged<uint, uint, uint, uint, uint, uint, uint, uint, void>)QuickGL.GetGLProcAddress("glTextureView");
    }

    internal static void Unload()
    {
        _glTextureView = null;
    }
    #endregion

    #region Function wrappers
    public static void glTextureView(uint texture, uint target, uint origtexture, uint internalformat, uint minlevel, uint numlevels, uint minlayer, uint numlayers) { QGLFeature.VerifyFunc((nint)_glTextureView); _glTextureView(texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_ARB_texture_view", true, false);
}
