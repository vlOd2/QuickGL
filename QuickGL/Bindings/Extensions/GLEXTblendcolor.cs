// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLEXTblendcolor
{
    #region Constants
    public const int GL_CONSTANT_COLOR_EXT = 0x00008001;
    public const int GL_ONE_MINUS_CONSTANT_COLOR_EXT = 0x00008002;
    public const int GL_CONSTANT_ALPHA_EXT = 0x00008003;
    public const int GL_ONE_MINUS_CONSTANT_ALPHA_EXT = 0x00008004;
    public const int GL_BLEND_COLOR_EXT = 0x00008005;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<float, float, float, float, void> _glBlendColorEXT = null;

    internal static void Load()
    {
        _glBlendColorEXT = (delegate* unmanaged<float, float, float, float, void>)QuickGL.GetGLProcAddress("glBlendColorEXT");
    }

    internal static void Unload()
    {
        _glBlendColorEXT = null;
    }
    #endregion

    #region Function wrappers
    public static void glBlendColorEXT(float red, float green, float blue, float alpha) { QGLFeature.VerifyFunc((nint)_glBlendColorEXT); _glBlendColorEXT(red, green, blue, alpha); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_EXT_blend_color", true, false);
}
