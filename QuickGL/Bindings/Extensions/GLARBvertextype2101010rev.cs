// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:41:03.1755577Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLARBvertextype2101010rev
{
    #region Constants
    public const int GL_UNSIGNED_INT_2_10_10_10_REV = 0x00008368;
    public const int GL_INT_2_10_10_10_REV = 0x00008D9F;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, uint, bool, uint, void> _glVertexAttribP1ui = null;
    internal static delegate* unmanaged<uint, uint, bool, uint*, void> _glVertexAttribP1uiv = null;
    internal static delegate* unmanaged<uint, uint, bool, uint, void> _glVertexAttribP2ui = null;
    internal static delegate* unmanaged<uint, uint, bool, uint*, void> _glVertexAttribP2uiv = null;
    internal static delegate* unmanaged<uint, uint, bool, uint, void> _glVertexAttribP3ui = null;
    internal static delegate* unmanaged<uint, uint, bool, uint*, void> _glVertexAttribP3uiv = null;
    internal static delegate* unmanaged<uint, uint, bool, uint, void> _glVertexAttribP4ui = null;
    internal static delegate* unmanaged<uint, uint, bool, uint*, void> _glVertexAttribP4uiv = null;
    internal static delegate* unmanaged<uint, uint, void> _glVertexP2ui = null;
    internal static delegate* unmanaged<uint, uint*, void> _glVertexP2uiv = null;
    internal static delegate* unmanaged<uint, uint, void> _glVertexP3ui = null;
    internal static delegate* unmanaged<uint, uint*, void> _glVertexP3uiv = null;
    internal static delegate* unmanaged<uint, uint, void> _glVertexP4ui = null;
    internal static delegate* unmanaged<uint, uint*, void> _glVertexP4uiv = null;
    internal static delegate* unmanaged<uint, uint, void> _glTexCoordP1ui = null;
    internal static delegate* unmanaged<uint, uint*, void> _glTexCoordP1uiv = null;
    internal static delegate* unmanaged<uint, uint, void> _glTexCoordP2ui = null;
    internal static delegate* unmanaged<uint, uint*, void> _glTexCoordP2uiv = null;
    internal static delegate* unmanaged<uint, uint, void> _glTexCoordP3ui = null;
    internal static delegate* unmanaged<uint, uint*, void> _glTexCoordP3uiv = null;
    internal static delegate* unmanaged<uint, uint, void> _glTexCoordP4ui = null;
    internal static delegate* unmanaged<uint, uint*, void> _glTexCoordP4uiv = null;
    internal static delegate* unmanaged<uint, uint, uint, void> _glMultiTexCoordP1ui = null;
    internal static delegate* unmanaged<uint, uint, uint*, void> _glMultiTexCoordP1uiv = null;
    internal static delegate* unmanaged<uint, uint, uint, void> _glMultiTexCoordP2ui = null;
    internal static delegate* unmanaged<uint, uint, uint*, void> _glMultiTexCoordP2uiv = null;
    internal static delegate* unmanaged<uint, uint, uint, void> _glMultiTexCoordP3ui = null;
    internal static delegate* unmanaged<uint, uint, uint*, void> _glMultiTexCoordP3uiv = null;
    internal static delegate* unmanaged<uint, uint, uint, void> _glMultiTexCoordP4ui = null;
    internal static delegate* unmanaged<uint, uint, uint*, void> _glMultiTexCoordP4uiv = null;
    internal static delegate* unmanaged<uint, uint, void> _glNormalP3ui = null;
    internal static delegate* unmanaged<uint, uint*, void> _glNormalP3uiv = null;
    internal static delegate* unmanaged<uint, uint, void> _glColorP3ui = null;
    internal static delegate* unmanaged<uint, uint*, void> _glColorP3uiv = null;
    internal static delegate* unmanaged<uint, uint, void> _glColorP4ui = null;
    internal static delegate* unmanaged<uint, uint*, void> _glColorP4uiv = null;
    internal static delegate* unmanaged<uint, uint, void> _glSecondaryColorP3ui = null;
    internal static delegate* unmanaged<uint, uint*, void> _glSecondaryColorP3uiv = null;

    internal static void Load()
    {
        _glVertexAttribP1ui = (delegate* unmanaged<uint, uint, bool, uint, void>)QuickGL.GetGLProcAddress("glVertexAttribP1ui");
        _glVertexAttribP1uiv = (delegate* unmanaged<uint, uint, bool, uint*, void>)QuickGL.GetGLProcAddress("glVertexAttribP1uiv");
        _glVertexAttribP2ui = (delegate* unmanaged<uint, uint, bool, uint, void>)QuickGL.GetGLProcAddress("glVertexAttribP2ui");
        _glVertexAttribP2uiv = (delegate* unmanaged<uint, uint, bool, uint*, void>)QuickGL.GetGLProcAddress("glVertexAttribP2uiv");
        _glVertexAttribP3ui = (delegate* unmanaged<uint, uint, bool, uint, void>)QuickGL.GetGLProcAddress("glVertexAttribP3ui");
        _glVertexAttribP3uiv = (delegate* unmanaged<uint, uint, bool, uint*, void>)QuickGL.GetGLProcAddress("glVertexAttribP3uiv");
        _glVertexAttribP4ui = (delegate* unmanaged<uint, uint, bool, uint, void>)QuickGL.GetGLProcAddress("glVertexAttribP4ui");
        _glVertexAttribP4uiv = (delegate* unmanaged<uint, uint, bool, uint*, void>)QuickGL.GetGLProcAddress("glVertexAttribP4uiv");
        _glVertexP2ui = (delegate* unmanaged<uint, uint, void>)QuickGL.GetGLProcAddress("glVertexP2ui");
        _glVertexP2uiv = (delegate* unmanaged<uint, uint*, void>)QuickGL.GetGLProcAddress("glVertexP2uiv");
        _glVertexP3ui = (delegate* unmanaged<uint, uint, void>)QuickGL.GetGLProcAddress("glVertexP3ui");
        _glVertexP3uiv = (delegate* unmanaged<uint, uint*, void>)QuickGL.GetGLProcAddress("glVertexP3uiv");
        _glVertexP4ui = (delegate* unmanaged<uint, uint, void>)QuickGL.GetGLProcAddress("glVertexP4ui");
        _glVertexP4uiv = (delegate* unmanaged<uint, uint*, void>)QuickGL.GetGLProcAddress("glVertexP4uiv");
        _glTexCoordP1ui = (delegate* unmanaged<uint, uint, void>)QuickGL.GetGLProcAddress("glTexCoordP1ui");
        _glTexCoordP1uiv = (delegate* unmanaged<uint, uint*, void>)QuickGL.GetGLProcAddress("glTexCoordP1uiv");
        _glTexCoordP2ui = (delegate* unmanaged<uint, uint, void>)QuickGL.GetGLProcAddress("glTexCoordP2ui");
        _glTexCoordP2uiv = (delegate* unmanaged<uint, uint*, void>)QuickGL.GetGLProcAddress("glTexCoordP2uiv");
        _glTexCoordP3ui = (delegate* unmanaged<uint, uint, void>)QuickGL.GetGLProcAddress("glTexCoordP3ui");
        _glTexCoordP3uiv = (delegate* unmanaged<uint, uint*, void>)QuickGL.GetGLProcAddress("glTexCoordP3uiv");
        _glTexCoordP4ui = (delegate* unmanaged<uint, uint, void>)QuickGL.GetGLProcAddress("glTexCoordP4ui");
        _glTexCoordP4uiv = (delegate* unmanaged<uint, uint*, void>)QuickGL.GetGLProcAddress("glTexCoordP4uiv");
        _glMultiTexCoordP1ui = (delegate* unmanaged<uint, uint, uint, void>)QuickGL.GetGLProcAddress("glMultiTexCoordP1ui");
        _glMultiTexCoordP1uiv = (delegate* unmanaged<uint, uint, uint*, void>)QuickGL.GetGLProcAddress("glMultiTexCoordP1uiv");
        _glMultiTexCoordP2ui = (delegate* unmanaged<uint, uint, uint, void>)QuickGL.GetGLProcAddress("glMultiTexCoordP2ui");
        _glMultiTexCoordP2uiv = (delegate* unmanaged<uint, uint, uint*, void>)QuickGL.GetGLProcAddress("glMultiTexCoordP2uiv");
        _glMultiTexCoordP3ui = (delegate* unmanaged<uint, uint, uint, void>)QuickGL.GetGLProcAddress("glMultiTexCoordP3ui");
        _glMultiTexCoordP3uiv = (delegate* unmanaged<uint, uint, uint*, void>)QuickGL.GetGLProcAddress("glMultiTexCoordP3uiv");
        _glMultiTexCoordP4ui = (delegate* unmanaged<uint, uint, uint, void>)QuickGL.GetGLProcAddress("glMultiTexCoordP4ui");
        _glMultiTexCoordP4uiv = (delegate* unmanaged<uint, uint, uint*, void>)QuickGL.GetGLProcAddress("glMultiTexCoordP4uiv");
        _glNormalP3ui = (delegate* unmanaged<uint, uint, void>)QuickGL.GetGLProcAddress("glNormalP3ui");
        _glNormalP3uiv = (delegate* unmanaged<uint, uint*, void>)QuickGL.GetGLProcAddress("glNormalP3uiv");
        _glColorP3ui = (delegate* unmanaged<uint, uint, void>)QuickGL.GetGLProcAddress("glColorP3ui");
        _glColorP3uiv = (delegate* unmanaged<uint, uint*, void>)QuickGL.GetGLProcAddress("glColorP3uiv");
        _glColorP4ui = (delegate* unmanaged<uint, uint, void>)QuickGL.GetGLProcAddress("glColorP4ui");
        _glColorP4uiv = (delegate* unmanaged<uint, uint*, void>)QuickGL.GetGLProcAddress("glColorP4uiv");
        _glSecondaryColorP3ui = (delegate* unmanaged<uint, uint, void>)QuickGL.GetGLProcAddress("glSecondaryColorP3ui");
        _glSecondaryColorP3uiv = (delegate* unmanaged<uint, uint*, void>)QuickGL.GetGLProcAddress("glSecondaryColorP3uiv");
    }

    internal static void Unload()
    {
        _glVertexAttribP1ui = null;
        _glVertexAttribP1uiv = null;
        _glVertexAttribP2ui = null;
        _glVertexAttribP2uiv = null;
        _glVertexAttribP3ui = null;
        _glVertexAttribP3uiv = null;
        _glVertexAttribP4ui = null;
        _glVertexAttribP4uiv = null;
        _glVertexP2ui = null;
        _glVertexP2uiv = null;
        _glVertexP3ui = null;
        _glVertexP3uiv = null;
        _glVertexP4ui = null;
        _glVertexP4uiv = null;
        _glTexCoordP1ui = null;
        _glTexCoordP1uiv = null;
        _glTexCoordP2ui = null;
        _glTexCoordP2uiv = null;
        _glTexCoordP3ui = null;
        _glTexCoordP3uiv = null;
        _glTexCoordP4ui = null;
        _glTexCoordP4uiv = null;
        _glMultiTexCoordP1ui = null;
        _glMultiTexCoordP1uiv = null;
        _glMultiTexCoordP2ui = null;
        _glMultiTexCoordP2uiv = null;
        _glMultiTexCoordP3ui = null;
        _glMultiTexCoordP3uiv = null;
        _glMultiTexCoordP4ui = null;
        _glMultiTexCoordP4uiv = null;
        _glNormalP3ui = null;
        _glNormalP3uiv = null;
        _glColorP3ui = null;
        _glColorP3uiv = null;
        _glColorP4ui = null;
        _glColorP4uiv = null;
        _glSecondaryColorP3ui = null;
        _glSecondaryColorP3uiv = null;
    }
    #endregion

    #region Function wrappers
    public static void glVertexAttribP1ui(uint index, uint type, bool normalized, uint value) { QGLFeature.VerifyFunc((nint)_glVertexAttribP1ui); _glVertexAttribP1ui(index, type, normalized, value); }
    public static void glVertexAttribP1uiv(uint index, uint type, bool normalized, uint* value) { QGLFeature.VerifyFunc((nint)_glVertexAttribP1uiv); _glVertexAttribP1uiv(index, type, normalized, value); }
    public static void glVertexAttribP2ui(uint index, uint type, bool normalized, uint value) { QGLFeature.VerifyFunc((nint)_glVertexAttribP2ui); _glVertexAttribP2ui(index, type, normalized, value); }
    public static void glVertexAttribP2uiv(uint index, uint type, bool normalized, uint* value) { QGLFeature.VerifyFunc((nint)_glVertexAttribP2uiv); _glVertexAttribP2uiv(index, type, normalized, value); }
    public static void glVertexAttribP3ui(uint index, uint type, bool normalized, uint value) { QGLFeature.VerifyFunc((nint)_glVertexAttribP3ui); _glVertexAttribP3ui(index, type, normalized, value); }
    public static void glVertexAttribP3uiv(uint index, uint type, bool normalized, uint* value) { QGLFeature.VerifyFunc((nint)_glVertexAttribP3uiv); _glVertexAttribP3uiv(index, type, normalized, value); }
    public static void glVertexAttribP4ui(uint index, uint type, bool normalized, uint value) { QGLFeature.VerifyFunc((nint)_glVertexAttribP4ui); _glVertexAttribP4ui(index, type, normalized, value); }
    public static void glVertexAttribP4uiv(uint index, uint type, bool normalized, uint* value) { QGLFeature.VerifyFunc((nint)_glVertexAttribP4uiv); _glVertexAttribP4uiv(index, type, normalized, value); }
    public static void glVertexP2ui(uint type, uint value) { QGLFeature.VerifyFunc((nint)_glVertexP2ui); _glVertexP2ui(type, value); }
    public static void glVertexP2uiv(uint type, uint* value) { QGLFeature.VerifyFunc((nint)_glVertexP2uiv); _glVertexP2uiv(type, value); }
    public static void glVertexP3ui(uint type, uint value) { QGLFeature.VerifyFunc((nint)_glVertexP3ui); _glVertexP3ui(type, value); }
    public static void glVertexP3uiv(uint type, uint* value) { QGLFeature.VerifyFunc((nint)_glVertexP3uiv); _glVertexP3uiv(type, value); }
    public static void glVertexP4ui(uint type, uint value) { QGLFeature.VerifyFunc((nint)_glVertexP4ui); _glVertexP4ui(type, value); }
    public static void glVertexP4uiv(uint type, uint* value) { QGLFeature.VerifyFunc((nint)_glVertexP4uiv); _glVertexP4uiv(type, value); }
    public static void glTexCoordP1ui(uint type, uint coords) { QGLFeature.VerifyFunc((nint)_glTexCoordP1ui); _glTexCoordP1ui(type, coords); }
    public static void glTexCoordP1uiv(uint type, uint* coords) { QGLFeature.VerifyFunc((nint)_glTexCoordP1uiv); _glTexCoordP1uiv(type, coords); }
    public static void glTexCoordP2ui(uint type, uint coords) { QGLFeature.VerifyFunc((nint)_glTexCoordP2ui); _glTexCoordP2ui(type, coords); }
    public static void glTexCoordP2uiv(uint type, uint* coords) { QGLFeature.VerifyFunc((nint)_glTexCoordP2uiv); _glTexCoordP2uiv(type, coords); }
    public static void glTexCoordP3ui(uint type, uint coords) { QGLFeature.VerifyFunc((nint)_glTexCoordP3ui); _glTexCoordP3ui(type, coords); }
    public static void glTexCoordP3uiv(uint type, uint* coords) { QGLFeature.VerifyFunc((nint)_glTexCoordP3uiv); _glTexCoordP3uiv(type, coords); }
    public static void glTexCoordP4ui(uint type, uint coords) { QGLFeature.VerifyFunc((nint)_glTexCoordP4ui); _glTexCoordP4ui(type, coords); }
    public static void glTexCoordP4uiv(uint type, uint* coords) { QGLFeature.VerifyFunc((nint)_glTexCoordP4uiv); _glTexCoordP4uiv(type, coords); }
    public static void glMultiTexCoordP1ui(uint texture, uint type, uint coords) { QGLFeature.VerifyFunc((nint)_glMultiTexCoordP1ui); _glMultiTexCoordP1ui(texture, type, coords); }
    public static void glMultiTexCoordP1uiv(uint texture, uint type, uint* coords) { QGLFeature.VerifyFunc((nint)_glMultiTexCoordP1uiv); _glMultiTexCoordP1uiv(texture, type, coords); }
    public static void glMultiTexCoordP2ui(uint texture, uint type, uint coords) { QGLFeature.VerifyFunc((nint)_glMultiTexCoordP2ui); _glMultiTexCoordP2ui(texture, type, coords); }
    public static void glMultiTexCoordP2uiv(uint texture, uint type, uint* coords) { QGLFeature.VerifyFunc((nint)_glMultiTexCoordP2uiv); _glMultiTexCoordP2uiv(texture, type, coords); }
    public static void glMultiTexCoordP3ui(uint texture, uint type, uint coords) { QGLFeature.VerifyFunc((nint)_glMultiTexCoordP3ui); _glMultiTexCoordP3ui(texture, type, coords); }
    public static void glMultiTexCoordP3uiv(uint texture, uint type, uint* coords) { QGLFeature.VerifyFunc((nint)_glMultiTexCoordP3uiv); _glMultiTexCoordP3uiv(texture, type, coords); }
    public static void glMultiTexCoordP4ui(uint texture, uint type, uint coords) { QGLFeature.VerifyFunc((nint)_glMultiTexCoordP4ui); _glMultiTexCoordP4ui(texture, type, coords); }
    public static void glMultiTexCoordP4uiv(uint texture, uint type, uint* coords) { QGLFeature.VerifyFunc((nint)_glMultiTexCoordP4uiv); _glMultiTexCoordP4uiv(texture, type, coords); }
    public static void glNormalP3ui(uint type, uint coords) { QGLFeature.VerifyFunc((nint)_glNormalP3ui); _glNormalP3ui(type, coords); }
    public static void glNormalP3uiv(uint type, uint* coords) { QGLFeature.VerifyFunc((nint)_glNormalP3uiv); _glNormalP3uiv(type, coords); }
    public static void glColorP3ui(uint type, uint color) { QGLFeature.VerifyFunc((nint)_glColorP3ui); _glColorP3ui(type, color); }
    public static void glColorP3uiv(uint type, uint* color) { QGLFeature.VerifyFunc((nint)_glColorP3uiv); _glColorP3uiv(type, color); }
    public static void glColorP4ui(uint type, uint color) { QGLFeature.VerifyFunc((nint)_glColorP4ui); _glColorP4ui(type, color); }
    public static void glColorP4uiv(uint type, uint* color) { QGLFeature.VerifyFunc((nint)_glColorP4uiv); _glColorP4uiv(type, color); }
    public static void glSecondaryColorP3ui(uint type, uint color) { QGLFeature.VerifyFunc((nint)_glSecondaryColorP3ui); _glSecondaryColorP3ui(type, color); }
    public static void glSecondaryColorP3uiv(uint type, uint* color) { QGLFeature.VerifyFunc((nint)_glSecondaryColorP3uiv); _glSecondaryColorP3uiv(type, color); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_ARB_vertex_type_2_10_10_10_rev", true, false);
}
