// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLARBcolorbufferfloat
{
    #region Constants
    public const int GL_RGBA_FLOAT_MODE_ARB = 0x00008820;
    public const int GL_CLAMP_VERTEX_COLOR_ARB = 0x0000891A;
    public const int GL_CLAMP_FRAGMENT_COLOR_ARB = 0x0000891B;
    public const int GL_CLAMP_READ_COLOR_ARB = 0x0000891C;
    public const int GL_FIXED_ONLY_ARB = 0x0000891D;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, uint, void> _glClampColorARB = null;

    internal static void Load()
    {
        _glClampColorARB = (delegate* unmanaged<uint, uint, void>)QuickGL.GetGLProcAddress("glClampColorARB");
    }

    internal static void Unload()
    {
        _glClampColorARB = null;
    }
    #endregion

    #region Function wrappers
    public static void glClampColorARB(uint target, uint clamp) { QGLFeature.VerifyFunc((nint)_glClampColorARB); _glClampColorARB(target, clamp); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_ARB_color_buffer_float", true, false);
}
