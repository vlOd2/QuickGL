// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T20:04:55.7139787Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLARBprograminterfacequery
{
    #region Constants
    public const int GL_UNIFORM = 0x000092E1;
    public const int GL_UNIFORM_BLOCK = 0x000092E2;
    public const int GL_PROGRAM_INPUT = 0x000092E3;
    public const int GL_PROGRAM_OUTPUT = 0x000092E4;
    public const int GL_BUFFER_VARIABLE = 0x000092E5;
    public const int GL_SHADER_STORAGE_BLOCK = 0x000092E6;
    public const int GL_ATOMIC_COUNTER_BUFFER = 0x000092C0;
    public const int GL_VERTEX_SUBROUTINE = 0x000092E8;
    public const int GL_TESS_CONTROL_SUBROUTINE = 0x000092E9;
    public const int GL_TESS_EVALUATION_SUBROUTINE = 0x000092EA;
    public const int GL_GEOMETRY_SUBROUTINE = 0x000092EB;
    public const int GL_FRAGMENT_SUBROUTINE = 0x000092EC;
    public const int GL_COMPUTE_SUBROUTINE = 0x000092ED;
    public const int GL_VERTEX_SUBROUTINE_UNIFORM = 0x000092EE;
    public const int GL_TESS_CONTROL_SUBROUTINE_UNIFORM = 0x000092EF;
    public const int GL_TESS_EVALUATION_SUBROUTINE_UNIFORM = 0x000092F0;
    public const int GL_GEOMETRY_SUBROUTINE_UNIFORM = 0x000092F1;
    public const int GL_FRAGMENT_SUBROUTINE_UNIFORM = 0x000092F2;
    public const int GL_COMPUTE_SUBROUTINE_UNIFORM = 0x000092F3;
    public const int GL_TRANSFORM_FEEDBACK_VARYING = 0x000092F4;
    public const int GL_ACTIVE_RESOURCES = 0x000092F5;
    public const int GL_MAX_NAME_LENGTH = 0x000092F6;
    public const int GL_MAX_NUM_ACTIVE_VARIABLES = 0x000092F7;
    public const int GL_MAX_NUM_COMPATIBLE_SUBROUTINES = 0x000092F8;
    public const int GL_NAME_LENGTH = 0x000092F9;
    public const int GL_TYPE = 0x000092FA;
    public const int GL_ARRAY_SIZE = 0x000092FB;
    public const int GL_OFFSET = 0x000092FC;
    public const int GL_BLOCK_INDEX = 0x000092FD;
    public const int GL_ARRAY_STRIDE = 0x000092FE;
    public const int GL_MATRIX_STRIDE = 0x000092FF;
    public const int GL_IS_ROW_MAJOR = 0x00009300;
    public const int GL_ATOMIC_COUNTER_BUFFER_INDEX = 0x00009301;
    public const int GL_BUFFER_BINDING = 0x00009302;
    public const int GL_BUFFER_DATA_SIZE = 0x00009303;
    public const int GL_NUM_ACTIVE_VARIABLES = 0x00009304;
    public const int GL_ACTIVE_VARIABLES = 0x00009305;
    public const int GL_REFERENCED_BY_VERTEX_SHADER = 0x00009306;
    public const int GL_REFERENCED_BY_TESS_CONTROL_SHADER = 0x00009307;
    public const int GL_REFERENCED_BY_TESS_EVALUATION_SHADER = 0x00009308;
    public const int GL_REFERENCED_BY_GEOMETRY_SHADER = 0x00009309;
    public const int GL_REFERENCED_BY_FRAGMENT_SHADER = 0x0000930A;
    public const int GL_REFERENCED_BY_COMPUTE_SHADER = 0x0000930B;
    public const int GL_TOP_LEVEL_ARRAY_SIZE = 0x0000930C;
    public const int GL_TOP_LEVEL_ARRAY_STRIDE = 0x0000930D;
    public const int GL_LOCATION = 0x0000930E;
    public const int GL_LOCATION_INDEX = 0x0000930F;
    public const int GL_IS_PER_PATCH = 0x000092E7;
    public const int GL_NUM_COMPATIBLE_SUBROUTINES = 0x00008E4A;
    public const int GL_COMPATIBLE_SUBROUTINES = 0x00008E4B;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, uint, uint, int*, void> _glGetProgramInterfaceiv = null;
    internal static delegate* unmanaged<uint, uint, byte*, uint> _glGetProgramResourceIndex = null;
    internal static delegate* unmanaged<uint, uint, uint, int, int*, byte*, void> _glGetProgramResourceName = null;
    internal static delegate* unmanaged<uint, uint, uint, int, uint*, int, int*, int*, void> _glGetProgramResourceiv = null;
    internal static delegate* unmanaged<uint, uint, byte*, int> _glGetProgramResourceLocation = null;
    internal static delegate* unmanaged<uint, uint, byte*, int> _glGetProgramResourceLocationIndex = null;

    internal static void Load()
    {
        _glGetProgramInterfaceiv = (delegate* unmanaged<uint, uint, uint, int*, void>)QuickGL.GetGLProcAddress("glGetProgramInterfaceiv");
        _glGetProgramResourceIndex = (delegate* unmanaged<uint, uint, byte*, uint>)QuickGL.GetGLProcAddress("glGetProgramResourceIndex");
        _glGetProgramResourceName = (delegate* unmanaged<uint, uint, uint, int, int*, byte*, void>)QuickGL.GetGLProcAddress("glGetProgramResourceName");
        _glGetProgramResourceiv = (delegate* unmanaged<uint, uint, uint, int, uint*, int, int*, int*, void>)QuickGL.GetGLProcAddress("glGetProgramResourceiv");
        _glGetProgramResourceLocation = (delegate* unmanaged<uint, uint, byte*, int>)QuickGL.GetGLProcAddress("glGetProgramResourceLocation");
        _glGetProgramResourceLocationIndex = (delegate* unmanaged<uint, uint, byte*, int>)QuickGL.GetGLProcAddress("glGetProgramResourceLocationIndex");
    }

    internal static void Unload()
    {
        _glGetProgramInterfaceiv = null;
        _glGetProgramResourceIndex = null;
        _glGetProgramResourceName = null;
        _glGetProgramResourceiv = null;
        _glGetProgramResourceLocation = null;
        _glGetProgramResourceLocationIndex = null;
    }
    #endregion

    #region Function wrappers
    public static void glGetProgramInterfaceiv(uint program, uint programInterface, uint pname, int* @params) { QGLFeature.VerifyFunc((nint)_glGetProgramInterfaceiv); _glGetProgramInterfaceiv(program, programInterface, pname, @params); }
    public static uint glGetProgramResourceIndex(uint program, uint programInterface, byte* name) { QGLFeature.VerifyFunc((nint)_glGetProgramResourceIndex); return _glGetProgramResourceIndex(program, programInterface, name); }
    public static void glGetProgramResourceName(uint program, uint programInterface, uint index, int bufSize, int* length, byte* name) { QGLFeature.VerifyFunc((nint)_glGetProgramResourceName); _glGetProgramResourceName(program, programInterface, index, bufSize, length, name); }
    public static void glGetProgramResourceiv(uint program, uint programInterface, uint index, int propCount, uint* props, int count, int* length, int* @params) { QGLFeature.VerifyFunc((nint)_glGetProgramResourceiv); _glGetProgramResourceiv(program, programInterface, index, propCount, props, count, length, @params); }
    public static int glGetProgramResourceLocation(uint program, uint programInterface, byte* name) { QGLFeature.VerifyFunc((nint)_glGetProgramResourceLocation); return _glGetProgramResourceLocation(program, programInterface, name); }
    public static int glGetProgramResourceLocationIndex(uint program, uint programInterface, byte* name) { QGLFeature.VerifyFunc((nint)_glGetProgramResourceLocationIndex); return _glGetProgramResourceLocationIndex(program, programInterface, name); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_ARB_program_interface_query", true, false);
}
