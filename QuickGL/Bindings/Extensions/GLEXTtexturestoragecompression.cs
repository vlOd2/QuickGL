// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T20:04:55.9033801Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLEXTtexturestoragecompression
{
    #region Constants
    public const int GL_SURFACE_COMPRESSION_EXT = 0x000096C0;
    public const int GL_NUM_SURFACE_COMPRESSION_FIXED_RATES_EXT = 0x00008F6E;
    public const int GL_SURFACE_COMPRESSION_FIXED_RATE_NONE_EXT = 0x000096C1;
    public const int GL_SURFACE_COMPRESSION_FIXED_RATE_DEFAULT_EXT = 0x000096C2;
    public const int GL_SURFACE_COMPRESSION_FIXED_RATE_1BPC_EXT = 0x000096C4;
    public const int GL_SURFACE_COMPRESSION_FIXED_RATE_2BPC_EXT = 0x000096C5;
    public const int GL_SURFACE_COMPRESSION_FIXED_RATE_3BPC_EXT = 0x000096C6;
    public const int GL_SURFACE_COMPRESSION_FIXED_RATE_4BPC_EXT = 0x000096C7;
    public const int GL_SURFACE_COMPRESSION_FIXED_RATE_5BPC_EXT = 0x000096C8;
    public const int GL_SURFACE_COMPRESSION_FIXED_RATE_6BPC_EXT = 0x000096C9;
    public const int GL_SURFACE_COMPRESSION_FIXED_RATE_7BPC_EXT = 0x000096CA;
    public const int GL_SURFACE_COMPRESSION_FIXED_RATE_8BPC_EXT = 0x000096CB;
    public const int GL_SURFACE_COMPRESSION_FIXED_RATE_9BPC_EXT = 0x000096CC;
    public const int GL_SURFACE_COMPRESSION_FIXED_RATE_10BPC_EXT = 0x000096CD;
    public const int GL_SURFACE_COMPRESSION_FIXED_RATE_11BPC_EXT = 0x000096CE;
    public const int GL_SURFACE_COMPRESSION_FIXED_RATE_12BPC_EXT = 0x000096CF;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, int, uint, int, int, int*, void> _glTexStorageAttribs2DEXT = null;
    internal static delegate* unmanaged<uint, int, uint, int, int, int, int*, void> _glTexStorageAttribs3DEXT = null;

    internal static void Load()
    {
        _glTexStorageAttribs2DEXT = (delegate* unmanaged<uint, int, uint, int, int, int*, void>)QuickGL.GetGLProcAddress("glTexStorageAttribs2DEXT");
        _glTexStorageAttribs3DEXT = (delegate* unmanaged<uint, int, uint, int, int, int, int*, void>)QuickGL.GetGLProcAddress("glTexStorageAttribs3DEXT");
    }

    internal static void Unload()
    {
        _glTexStorageAttribs2DEXT = null;
        _glTexStorageAttribs3DEXT = null;
    }
    #endregion

    #region Function wrappers
    public static void glTexStorageAttribs2DEXT(uint target, int levels, uint internalformat, int width, int height, int* attrib_list) { QGLFeature.VerifyFunc((nint)_glTexStorageAttribs2DEXT); _glTexStorageAttribs2DEXT(target, levels, internalformat, width, height, attrib_list); }
    public static void glTexStorageAttribs3DEXT(uint target, int levels, uint internalformat, int width, int height, int depth, int* attrib_list) { QGLFeature.VerifyFunc((nint)_glTexStorageAttribs3DEXT); _glTexStorageAttribs3DEXT(target, levels, internalformat, width, height, depth, attrib_list); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_EXT_texture_storage_compression", true, true);
}
