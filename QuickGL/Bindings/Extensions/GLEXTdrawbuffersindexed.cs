// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLEXTdrawbuffersindexed
{
    #region Constants
    public const int GL_BLEND_EQUATION_RGB = 0x00008009;
    public const int GL_BLEND_EQUATION_ALPHA = 0x0000883D;
    public const int GL_BLEND_SRC_RGB = 0x000080C9;
    public const int GL_BLEND_SRC_ALPHA = 0x000080CB;
    public const int GL_BLEND_DST_RGB = 0x000080C8;
    public const int GL_BLEND_DST_ALPHA = 0x000080CA;
    public const int GL_COLOR_WRITEMASK = 0x00000C23;
    public const int GL_BLEND = 0x00000BE2;
    public const int GL_FUNC_ADD = 0x00008006;
    public const int GL_FUNC_SUBTRACT = 0x0000800A;
    public const int GL_FUNC_REVERSE_SUBTRACT = 0x0000800B;
    public const int GL_MIN = 0x00008007;
    public const int GL_MAX = 0x00008008;
    public const int GL_ZERO = 0x00000000;
    public const int GL_ONE = 0x00000001;
    public const int GL_SRC_COLOR = 0x00000300;
    public const int GL_ONE_MINUS_SRC_COLOR = 0x00000301;
    public const int GL_DST_COLOR = 0x00000306;
    public const int GL_ONE_MINUS_DST_COLOR = 0x00000307;
    public const int GL_SRC_ALPHA = 0x00000302;
    public const int GL_ONE_MINUS_SRC_ALPHA = 0x00000303;
    public const int GL_DST_ALPHA = 0x00000304;
    public const int GL_ONE_MINUS_DST_ALPHA = 0x00000305;
    public const int GL_CONSTANT_COLOR = 0x00008001;
    public const int GL_ONE_MINUS_CONSTANT_COLOR = 0x00008002;
    public const int GL_CONSTANT_ALPHA = 0x00008003;
    public const int GL_ONE_MINUS_CONSTANT_ALPHA = 0x00008004;
    public const int GL_SRC_ALPHA_SATURATE = 0x00000308;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, uint, void> _glEnableiEXT = null;
    internal static delegate* unmanaged<uint, uint, void> _glDisableiEXT = null;
    internal static delegate* unmanaged<uint, uint, void> _glBlendEquationiEXT = null;
    internal static delegate* unmanaged<uint, uint, uint, void> _glBlendEquationSeparateiEXT = null;
    internal static delegate* unmanaged<uint, uint, uint, void> _glBlendFunciEXT = null;
    internal static delegate* unmanaged<uint, uint, uint, uint, uint, void> _glBlendFuncSeparateiEXT = null;
    internal static delegate* unmanaged<uint, bool, bool, bool, bool, void> _glColorMaskiEXT = null;
    internal static delegate* unmanaged<uint, uint, bool> _glIsEnablediEXT = null;

    internal static void Load()
    {
        _glEnableiEXT = (delegate* unmanaged<uint, uint, void>)QuickGL.GetGLProcAddress("glEnableiEXT");
        _glDisableiEXT = (delegate* unmanaged<uint, uint, void>)QuickGL.GetGLProcAddress("glDisableiEXT");
        _glBlendEquationiEXT = (delegate* unmanaged<uint, uint, void>)QuickGL.GetGLProcAddress("glBlendEquationiEXT");
        _glBlendEquationSeparateiEXT = (delegate* unmanaged<uint, uint, uint, void>)QuickGL.GetGLProcAddress("glBlendEquationSeparateiEXT");
        _glBlendFunciEXT = (delegate* unmanaged<uint, uint, uint, void>)QuickGL.GetGLProcAddress("glBlendFunciEXT");
        _glBlendFuncSeparateiEXT = (delegate* unmanaged<uint, uint, uint, uint, uint, void>)QuickGL.GetGLProcAddress("glBlendFuncSeparateiEXT");
        _glColorMaskiEXT = (delegate* unmanaged<uint, bool, bool, bool, bool, void>)QuickGL.GetGLProcAddress("glColorMaskiEXT");
        _glIsEnablediEXT = (delegate* unmanaged<uint, uint, bool>)QuickGL.GetGLProcAddress("glIsEnablediEXT");
    }

    internal static void Unload()
    {
        _glEnableiEXT = null;
        _glDisableiEXT = null;
        _glBlendEquationiEXT = null;
        _glBlendEquationSeparateiEXT = null;
        _glBlendFunciEXT = null;
        _glBlendFuncSeparateiEXT = null;
        _glColorMaskiEXT = null;
        _glIsEnablediEXT = null;
    }
    #endregion

    #region Function wrappers
    public static void glEnableiEXT(uint target, uint index) { QGLFeature.VerifyFunc((nint)_glEnableiEXT); _glEnableiEXT(target, index); }
    public static void glDisableiEXT(uint target, uint index) { QGLFeature.VerifyFunc((nint)_glDisableiEXT); _glDisableiEXT(target, index); }
    public static void glBlendEquationiEXT(uint buf, uint mode) { QGLFeature.VerifyFunc((nint)_glBlendEquationiEXT); _glBlendEquationiEXT(buf, mode); }
    public static void glBlendEquationSeparateiEXT(uint buf, uint modeRGB, uint modeAlpha) { QGLFeature.VerifyFunc((nint)_glBlendEquationSeparateiEXT); _glBlendEquationSeparateiEXT(buf, modeRGB, modeAlpha); }
    public static void glBlendFunciEXT(uint buf, uint src, uint dst) { QGLFeature.VerifyFunc((nint)_glBlendFunciEXT); _glBlendFunciEXT(buf, src, dst); }
    public static void glBlendFuncSeparateiEXT(uint buf, uint srcRGB, uint dstRGB, uint srcAlpha, uint dstAlpha) { QGLFeature.VerifyFunc((nint)_glBlendFuncSeparateiEXT); _glBlendFuncSeparateiEXT(buf, srcRGB, dstRGB, srcAlpha, dstAlpha); }
    public static void glColorMaskiEXT(uint index, bool r, bool g, bool b, bool a) { QGLFeature.VerifyFunc((nint)_glColorMaskiEXT); _glColorMaskiEXT(index, r, g, b, a); }
    public static bool glIsEnablediEXT(uint target, uint index) { QGLFeature.VerifyFunc((nint)_glIsEnablediEXT); return _glIsEnablediEXT(target, index); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_EXT_draw_buffers_indexed", true, true);
}
