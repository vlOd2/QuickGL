// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:00:37.9894902Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLEXTdrawbuffers2
{
    #region Constants
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, uint, bool> _glIsEnabledIndexedEXT = null;
    internal static delegate* unmanaged<uint, uint, void> _glEnableIndexedEXT = null;
    internal static delegate* unmanaged<uint, uint, bool*, void> _glGetBooleanIndexedvEXT = null;
    internal static delegate* unmanaged<uint, uint, void> _glDisableIndexedEXT = null;
    internal static delegate* unmanaged<uint, uint, int*, void> _glGetIntegerIndexedvEXT = null;
    internal static delegate* unmanaged<uint, bool, bool, bool, bool, void> _glColorMaskIndexedEXT = null;

    internal static void Load()
    {
        _glIsEnabledIndexedEXT = (delegate* unmanaged<uint, uint, bool>)QuickGL.GetGLProcAddress("glIsEnabledIndexedEXT");
        _glEnableIndexedEXT = (delegate* unmanaged<uint, uint, void>)QuickGL.GetGLProcAddress("glEnableIndexedEXT");
        _glGetBooleanIndexedvEXT = (delegate* unmanaged<uint, uint, bool*, void>)QuickGL.GetGLProcAddress("glGetBooleanIndexedvEXT");
        _glDisableIndexedEXT = (delegate* unmanaged<uint, uint, void>)QuickGL.GetGLProcAddress("glDisableIndexedEXT");
        _glGetIntegerIndexedvEXT = (delegate* unmanaged<uint, uint, int*, void>)QuickGL.GetGLProcAddress("glGetIntegerIndexedvEXT");
        _glColorMaskIndexedEXT = (delegate* unmanaged<uint, bool, bool, bool, bool, void>)QuickGL.GetGLProcAddress("glColorMaskIndexedEXT");
    }

    internal static void Unload()
    {
        _glIsEnabledIndexedEXT = null;
        _glEnableIndexedEXT = null;
        _glGetBooleanIndexedvEXT = null;
        _glDisableIndexedEXT = null;
        _glGetIntegerIndexedvEXT = null;
        _glColorMaskIndexedEXT = null;
    }
    #endregion

    #region Function wrappers
    public static bool glIsEnabledIndexedEXT(uint target, uint index) { QGLFeature.VerifyFunc((nint)_glIsEnabledIndexedEXT); return _glIsEnabledIndexedEXT(target, index); }
    public static void glEnableIndexedEXT(uint target, uint index) { QGLFeature.VerifyFunc((nint)_glEnableIndexedEXT); _glEnableIndexedEXT(target, index); }
    public static void glGetBooleanIndexedvEXT(uint target, uint index, bool* data) { QGLFeature.VerifyFunc((nint)_glGetBooleanIndexedvEXT); _glGetBooleanIndexedvEXT(target, index, data); }
    public static void glDisableIndexedEXT(uint target, uint index) { QGLFeature.VerifyFunc((nint)_glDisableIndexedEXT); _glDisableIndexedEXT(target, index); }
    public static void glGetIntegerIndexedvEXT(uint target, uint index, int* data) { QGLFeature.VerifyFunc((nint)_glGetIntegerIndexedvEXT); _glGetIntegerIndexedvEXT(target, index, data); }
    public static void glColorMaskIndexedEXT(uint index, bool r, bool g, bool b, bool a) { QGLFeature.VerifyFunc((nint)_glColorMaskIndexedEXT); _glColorMaskIndexedEXT(index, r, g, b, a); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_EXT_draw_buffers2", true, false);
}
