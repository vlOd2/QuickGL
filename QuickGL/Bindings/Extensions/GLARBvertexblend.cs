// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:43:43.8846376Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLARBvertexblend
{
    #region Constants
    public const int GL_MAX_VERTEX_UNITS_ARB = 0x000086A4;
    public const int GL_ACTIVE_VERTEX_UNITS_ARB = 0x000086A5;
    public const int GL_WEIGHT_SUM_UNITY_ARB = 0x000086A6;
    public const int GL_VERTEX_BLEND_ARB = 0x000086A7;
    public const int GL_CURRENT_WEIGHT_ARB = 0x000086A8;
    public const int GL_WEIGHT_ARRAY_TYPE_ARB = 0x000086A9;
    public const int GL_WEIGHT_ARRAY_STRIDE_ARB = 0x000086AA;
    public const int GL_WEIGHT_ARRAY_SIZE_ARB = 0x000086AB;
    public const int GL_WEIGHT_ARRAY_POINTER_ARB = 0x000086AC;
    public const int GL_WEIGHT_ARRAY_ARB = 0x000086AD;
    public const int GL_MODELVIEW0_ARB = 0x00001700;
    public const int GL_MODELVIEW1_ARB = 0x0000850A;
    public const int GL_MODELVIEW2_ARB = 0x00008722;
    public const int GL_MODELVIEW3_ARB = 0x00008723;
    public const int GL_MODELVIEW4_ARB = 0x00008724;
    public const int GL_MODELVIEW5_ARB = 0x00008725;
    public const int GL_MODELVIEW6_ARB = 0x00008726;
    public const int GL_MODELVIEW7_ARB = 0x00008727;
    public const int GL_MODELVIEW8_ARB = 0x00008728;
    public const int GL_MODELVIEW9_ARB = 0x00008729;
    public const int GL_MODELVIEW10_ARB = 0x0000872A;
    public const int GL_MODELVIEW11_ARB = 0x0000872B;
    public const int GL_MODELVIEW12_ARB = 0x0000872C;
    public const int GL_MODELVIEW13_ARB = 0x0000872D;
    public const int GL_MODELVIEW14_ARB = 0x0000872E;
    public const int GL_MODELVIEW15_ARB = 0x0000872F;
    public const int GL_MODELVIEW16_ARB = 0x00008730;
    public const int GL_MODELVIEW17_ARB = 0x00008731;
    public const int GL_MODELVIEW18_ARB = 0x00008732;
    public const int GL_MODELVIEW19_ARB = 0x00008733;
    public const int GL_MODELVIEW20_ARB = 0x00008734;
    public const int GL_MODELVIEW21_ARB = 0x00008735;
    public const int GL_MODELVIEW22_ARB = 0x00008736;
    public const int GL_MODELVIEW23_ARB = 0x00008737;
    public const int GL_MODELVIEW24_ARB = 0x00008738;
    public const int GL_MODELVIEW25_ARB = 0x00008739;
    public const int GL_MODELVIEW26_ARB = 0x0000873A;
    public const int GL_MODELVIEW27_ARB = 0x0000873B;
    public const int GL_MODELVIEW28_ARB = 0x0000873C;
    public const int GL_MODELVIEW29_ARB = 0x0000873D;
    public const int GL_MODELVIEW30_ARB = 0x0000873E;
    public const int GL_MODELVIEW31_ARB = 0x0000873F;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<int, sbyte*, void> _glWeightbvARB = null;
    internal static delegate* unmanaged<int, short*, void> _glWeightsvARB = null;
    internal static delegate* unmanaged<int, int*, void> _glWeightivARB = null;
    internal static delegate* unmanaged<int, float*, void> _glWeightfvARB = null;
    internal static delegate* unmanaged<int, double*, void> _glWeightdvARB = null;
    internal static delegate* unmanaged<int, byte*, void> _glWeightubvARB = null;
    internal static delegate* unmanaged<int, ushort*, void> _glWeightusvARB = null;
    internal static delegate* unmanaged<int, uint*, void> _glWeightuivARB = null;
    internal static delegate* unmanaged<int, uint, int, void*, void> _glWeightPointerARB = null;
    internal static delegate* unmanaged<int, void> _glVertexBlendARB = null;

    internal static void Load()
    {
        _glWeightbvARB = (delegate* unmanaged<int, sbyte*, void>)QuickGL.GetGLProcAddress("glWeightbvARB");
        _glWeightsvARB = (delegate* unmanaged<int, short*, void>)QuickGL.GetGLProcAddress("glWeightsvARB");
        _glWeightivARB = (delegate* unmanaged<int, int*, void>)QuickGL.GetGLProcAddress("glWeightivARB");
        _glWeightfvARB = (delegate* unmanaged<int, float*, void>)QuickGL.GetGLProcAddress("glWeightfvARB");
        _glWeightdvARB = (delegate* unmanaged<int, double*, void>)QuickGL.GetGLProcAddress("glWeightdvARB");
        _glWeightubvARB = (delegate* unmanaged<int, byte*, void>)QuickGL.GetGLProcAddress("glWeightubvARB");
        _glWeightusvARB = (delegate* unmanaged<int, ushort*, void>)QuickGL.GetGLProcAddress("glWeightusvARB");
        _glWeightuivARB = (delegate* unmanaged<int, uint*, void>)QuickGL.GetGLProcAddress("glWeightuivARB");
        _glWeightPointerARB = (delegate* unmanaged<int, uint, int, void*, void>)QuickGL.GetGLProcAddress("glWeightPointerARB");
        _glVertexBlendARB = (delegate* unmanaged<int, void>)QuickGL.GetGLProcAddress("glVertexBlendARB");
    }

    internal static void Unload()
    {
        _glWeightbvARB = null;
        _glWeightsvARB = null;
        _glWeightivARB = null;
        _glWeightfvARB = null;
        _glWeightdvARB = null;
        _glWeightubvARB = null;
        _glWeightusvARB = null;
        _glWeightuivARB = null;
        _glWeightPointerARB = null;
        _glVertexBlendARB = null;
    }
    #endregion

    #region Function wrappers
    public static void glWeightbvARB(int size, sbyte* weights) { QGLFeature.VerifyFunc((nint)_glWeightbvARB); _glWeightbvARB(size, weights); }
    public static void glWeightsvARB(int size, short* weights) { QGLFeature.VerifyFunc((nint)_glWeightsvARB); _glWeightsvARB(size, weights); }
    public static void glWeightivARB(int size, int* weights) { QGLFeature.VerifyFunc((nint)_glWeightivARB); _glWeightivARB(size, weights); }
    public static void glWeightfvARB(int size, float* weights) { QGLFeature.VerifyFunc((nint)_glWeightfvARB); _glWeightfvARB(size, weights); }
    public static void glWeightdvARB(int size, double* weights) { QGLFeature.VerifyFunc((nint)_glWeightdvARB); _glWeightdvARB(size, weights); }
    public static void glWeightubvARB(int size, byte* weights) { QGLFeature.VerifyFunc((nint)_glWeightubvARB); _glWeightubvARB(size, weights); }
    public static void glWeightusvARB(int size, ushort* weights) { QGLFeature.VerifyFunc((nint)_glWeightusvARB); _glWeightusvARB(size, weights); }
    public static void glWeightuivARB(int size, uint* weights) { QGLFeature.VerifyFunc((nint)_glWeightuivARB); _glWeightuivARB(size, weights); }
    public static void glWeightPointerARB(int size, uint type, int stride, void* pointer) { QGLFeature.VerifyFunc((nint)_glWeightPointerARB); _glWeightPointerARB(size, type, stride, pointer); }
    public static void glVertexBlendARB(int count) { QGLFeature.VerifyFunc((nint)_glVertexBlendARB); _glVertexBlendARB(count); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_ARB_vertex_blend", true, false);
}
