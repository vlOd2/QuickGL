// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:00:38.0281848Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLEXTmultidrawarrays
{
    #region Constants
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, int*, uint, nint, int, void> _glMultiDrawElementsEXT = null;
    internal static delegate* unmanaged<uint, int*, int*, int, void> _glMultiDrawArraysEXT = null;

    internal static void Load()
    {
        _glMultiDrawElementsEXT = (delegate* unmanaged<uint, int*, uint, nint, int, void>)QuickGL.GetGLProcAddress("glMultiDrawElementsEXT");
        _glMultiDrawArraysEXT = (delegate* unmanaged<uint, int*, int*, int, void>)QuickGL.GetGLProcAddress("glMultiDrawArraysEXT");
    }

    internal static void Unload()
    {
        _glMultiDrawElementsEXT = null;
        _glMultiDrawArraysEXT = null;
    }
    #endregion

    #region Function wrappers
    public static void glMultiDrawElementsEXT(uint mode, int* count, uint type, nint indices, int primcount) { QGLFeature.VerifyFunc((nint)_glMultiDrawElementsEXT); _glMultiDrawElementsEXT(mode, count, type, indices, primcount); }
    public static void glMultiDrawArraysEXT(uint mode, int* first, int* count, int primcount) { QGLFeature.VerifyFunc((nint)_glMultiDrawArraysEXT); _glMultiDrawArraysEXT(mode, first, count, primcount); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_EXT_multi_draw_arrays", true, false);
}
