// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T20:04:55.8631489Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLEXTsemaphore
{
    #region Constants
    public const int GL_NUM_DEVICE_UUIDS_EXT = 0x00009596;
    public const int GL_DEVICE_UUID_EXT = 0x00009597;
    public const int GL_DRIVER_UUID_EXT = 0x00009598;
    public const int GL_UUID_SIZE_EXT = 0x00000010;
    public const int GL_LAYOUT_GENERAL_EXT = 0x0000958D;
    public const int GL_LAYOUT_COLOR_ATTACHMENT_EXT = 0x0000958E;
    public const int GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT = 0x0000958F;
    public const int GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT = 0x00009590;
    public const int GL_LAYOUT_SHADER_READ_ONLY_EXT = 0x00009591;
    public const int GL_LAYOUT_TRANSFER_SRC_EXT = 0x00009592;
    public const int GL_LAYOUT_TRANSFER_DST_EXT = 0x00009593;
    public const int GL_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT = 0x00009530;
    public const int GL_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT = 0x00009531;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, byte*, void> _glGetUnsignedBytevEXT = null;
    internal static delegate* unmanaged<uint, uint, byte*, void> _glGetUnsignedBytei_vEXT = null;
    internal static delegate* unmanaged<int, uint*, void> _glGenSemaphoresEXT = null;
    internal static delegate* unmanaged<int, uint*, void> _glDeleteSemaphoresEXT = null;
    internal static delegate* unmanaged<uint, bool> _glIsSemaphoreEXT = null;
    internal static delegate* unmanaged<uint, uint, ulong*, void> _glSemaphoreParameterui64vEXT = null;
    internal static delegate* unmanaged<uint, uint, ulong*, void> _glGetSemaphoreParameterui64vEXT = null;
    internal static delegate* unmanaged<uint, uint, uint*, uint, uint*, uint*, void> _glWaitSemaphoreEXT = null;
    internal static delegate* unmanaged<uint, uint, uint*, uint, uint*, uint*, void> _glSignalSemaphoreEXT = null;

    internal static void Load()
    {
        _glGetUnsignedBytevEXT = (delegate* unmanaged<uint, byte*, void>)QuickGL.GetGLProcAddress("glGetUnsignedBytevEXT");
        _glGetUnsignedBytei_vEXT = (delegate* unmanaged<uint, uint, byte*, void>)QuickGL.GetGLProcAddress("glGetUnsignedBytei_vEXT");
        _glGenSemaphoresEXT = (delegate* unmanaged<int, uint*, void>)QuickGL.GetGLProcAddress("glGenSemaphoresEXT");
        _glDeleteSemaphoresEXT = (delegate* unmanaged<int, uint*, void>)QuickGL.GetGLProcAddress("glDeleteSemaphoresEXT");
        _glIsSemaphoreEXT = (delegate* unmanaged<uint, bool>)QuickGL.GetGLProcAddress("glIsSemaphoreEXT");
        _glSemaphoreParameterui64vEXT = (delegate* unmanaged<uint, uint, ulong*, void>)QuickGL.GetGLProcAddress("glSemaphoreParameterui64vEXT");
        _glGetSemaphoreParameterui64vEXT = (delegate* unmanaged<uint, uint, ulong*, void>)QuickGL.GetGLProcAddress("glGetSemaphoreParameterui64vEXT");
        _glWaitSemaphoreEXT = (delegate* unmanaged<uint, uint, uint*, uint, uint*, uint*, void>)QuickGL.GetGLProcAddress("glWaitSemaphoreEXT");
        _glSignalSemaphoreEXT = (delegate* unmanaged<uint, uint, uint*, uint, uint*, uint*, void>)QuickGL.GetGLProcAddress("glSignalSemaphoreEXT");
    }

    internal static void Unload()
    {
        _glGetUnsignedBytevEXT = null;
        _glGetUnsignedBytei_vEXT = null;
        _glGenSemaphoresEXT = null;
        _glDeleteSemaphoresEXT = null;
        _glIsSemaphoreEXT = null;
        _glSemaphoreParameterui64vEXT = null;
        _glGetSemaphoreParameterui64vEXT = null;
        _glWaitSemaphoreEXT = null;
        _glSignalSemaphoreEXT = null;
    }
    #endregion

    #region Function wrappers
    public static void glGetUnsignedBytevEXT(uint pname, byte* data) { QGLFeature.VerifyFunc((nint)_glGetUnsignedBytevEXT); _glGetUnsignedBytevEXT(pname, data); }
    public static void glGetUnsignedBytei_vEXT(uint target, uint index, byte* data) { QGLFeature.VerifyFunc((nint)_glGetUnsignedBytei_vEXT); _glGetUnsignedBytei_vEXT(target, index, data); }
    public static void glGenSemaphoresEXT(int n, uint* semaphores) { QGLFeature.VerifyFunc((nint)_glGenSemaphoresEXT); _glGenSemaphoresEXT(n, semaphores); }
    public static void glDeleteSemaphoresEXT(int n, uint* semaphores) { QGLFeature.VerifyFunc((nint)_glDeleteSemaphoresEXT); _glDeleteSemaphoresEXT(n, semaphores); }
    public static bool glIsSemaphoreEXT(uint semaphore) { QGLFeature.VerifyFunc((nint)_glIsSemaphoreEXT); return _glIsSemaphoreEXT(semaphore); }
    public static void glSemaphoreParameterui64vEXT(uint semaphore, uint pname, ulong* @params) { QGLFeature.VerifyFunc((nint)_glSemaphoreParameterui64vEXT); _glSemaphoreParameterui64vEXT(semaphore, pname, @params); }
    public static void glGetSemaphoreParameterui64vEXT(uint semaphore, uint pname, ulong* @params) { QGLFeature.VerifyFunc((nint)_glGetSemaphoreParameterui64vEXT); _glGetSemaphoreParameterui64vEXT(semaphore, pname, @params); }
    public static void glWaitSemaphoreEXT(uint semaphore, uint numBufferBarriers, uint* buffers, uint numTextureBarriers, uint* textures, uint* srcLayouts) { QGLFeature.VerifyFunc((nint)_glWaitSemaphoreEXT); _glWaitSemaphoreEXT(semaphore, numBufferBarriers, buffers, numTextureBarriers, textures, srcLayouts); }
    public static void glSignalSemaphoreEXT(uint semaphore, uint numBufferBarriers, uint* buffers, uint numTextureBarriers, uint* textures, uint* dstLayouts) { QGLFeature.VerifyFunc((nint)_glSignalSemaphoreEXT); _glSignalSemaphoreEXT(semaphore, numBufferBarriers, buffers, numTextureBarriers, textures, dstLayouts); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_EXT_semaphore", true, false);
}
