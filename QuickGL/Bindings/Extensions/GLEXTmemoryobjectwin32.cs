// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:41:03.2592124Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLEXTmemoryobjectwin32
{
    #region Constants
    public const int GL_HANDLE_TYPE_OPAQUE_WIN32_EXT = 0x00009587;
    public const int GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT = 0x00009588;
    public const int GL_DEVICE_LUID_EXT = 0x00009599;
    public const int GL_DEVICE_NODE_MASK_EXT = 0x0000959A;
    public const int GL_LUID_SIZE_EXT = 0x00000008;
    public const int GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT = 0x00009589;
    public const int GL_HANDLE_TYPE_D3D12_RESOURCE_EXT = 0x0000958A;
    public const int GL_HANDLE_TYPE_D3D11_IMAGE_EXT = 0x0000958B;
    public const int GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT = 0x0000958C;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, ulong, uint, void*, void> _glImportMemoryWin32HandleEXT = null;
    internal static delegate* unmanaged<uint, ulong, uint, void*, void> _glImportMemoryWin32NameEXT = null;

    internal static void Load()
    {
        _glImportMemoryWin32HandleEXT = (delegate* unmanaged<uint, ulong, uint, void*, void>)QuickGL.GetGLProcAddress("glImportMemoryWin32HandleEXT");
        _glImportMemoryWin32NameEXT = (delegate* unmanaged<uint, ulong, uint, void*, void>)QuickGL.GetGLProcAddress("glImportMemoryWin32NameEXT");
    }

    internal static void Unload()
    {
        _glImportMemoryWin32HandleEXT = null;
        _glImportMemoryWin32NameEXT = null;
    }
    #endregion

    #region Function wrappers
    public static void glImportMemoryWin32HandleEXT(uint memory, ulong size, uint handleType, void* handle) { QGLFeature.VerifyFunc((nint)_glImportMemoryWin32HandleEXT); _glImportMemoryWin32HandleEXT(memory, size, handleType, handle); }
    public static void glImportMemoryWin32NameEXT(uint memory, ulong size, uint handleType, void* name) { QGLFeature.VerifyFunc((nint)_glImportMemoryWin32NameEXT); _glImportMemoryWin32NameEXT(memory, size, handleType, name); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_EXT_memory_object_win32", true, false);
}
