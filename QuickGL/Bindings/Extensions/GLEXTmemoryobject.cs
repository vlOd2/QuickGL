// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLEXTmemoryobject
{
    #region Constants
    public const int GL_TEXTURE_TILING_EXT = 0x00009580;
    public const int GL_DEDICATED_MEMORY_OBJECT_EXT = 0x00009581;
    public const int GL_PROTECTED_MEMORY_OBJECT_EXT = 0x0000959B;
    public const int GL_NUM_TILING_TYPES_EXT = 0x00009582;
    public const int GL_TILING_TYPES_EXT = 0x00009583;
    public const int GL_OPTIMAL_TILING_EXT = 0x00009584;
    public const int GL_LINEAR_TILING_EXT = 0x00009585;
    public const int GL_NUM_DEVICE_UUIDS_EXT = 0x00009596;
    public const int GL_DEVICE_UUID_EXT = 0x00009597;
    public const int GL_DRIVER_UUID_EXT = 0x00009598;
    public const int GL_UUID_SIZE_EXT = 0x00000010;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, byte*, void> _glGetUnsignedBytevEXT = null;
    internal static delegate* unmanaged<uint, uint, byte*, void> _glGetUnsignedBytei_vEXT = null;
    internal static delegate* unmanaged<int, uint*, void> _glDeleteMemoryObjectsEXT = null;
    internal static delegate* unmanaged<uint, bool> _glIsMemoryObjectEXT = null;
    internal static delegate* unmanaged<int, uint*, void> _glCreateMemoryObjectsEXT = null;
    internal static delegate* unmanaged<uint, uint, int*, void> _glMemoryObjectParameterivEXT = null;
    internal static delegate* unmanaged<uint, uint, int*, void> _glGetMemoryObjectParameterivEXT = null;
    internal static delegate* unmanaged<uint, int, uint, int, int, uint, ulong, void> _glTexStorageMem2DEXT = null;
    internal static delegate* unmanaged<uint, int, uint, int, int, bool, uint, ulong, void> _glTexStorageMem2DMultisampleEXT = null;
    internal static delegate* unmanaged<uint, int, uint, int, int, int, uint, ulong, void> _glTexStorageMem3DEXT = null;
    internal static delegate* unmanaged<uint, int, uint, int, int, int, bool, uint, ulong, void> _glTexStorageMem3DMultisampleEXT = null;
    internal static delegate* unmanaged<uint, nint, uint, ulong, void> _glBufferStorageMemEXT = null;
    internal static delegate* unmanaged<uint, int, uint, int, int, uint, ulong, void> _glTextureStorageMem2DEXT = null;
    internal static delegate* unmanaged<uint, int, uint, int, int, bool, uint, ulong, void> _glTextureStorageMem2DMultisampleEXT = null;
    internal static delegate* unmanaged<uint, int, uint, int, int, int, uint, ulong, void> _glTextureStorageMem3DEXT = null;
    internal static delegate* unmanaged<uint, int, uint, int, int, int, bool, uint, ulong, void> _glTextureStorageMem3DMultisampleEXT = null;
    internal static delegate* unmanaged<uint, nint, uint, ulong, void> _glNamedBufferStorageMemEXT = null;
    internal static delegate* unmanaged<uint, int, uint, int, uint, ulong, void> _glTexStorageMem1DEXT = null;
    internal static delegate* unmanaged<uint, int, uint, int, uint, ulong, void> _glTextureStorageMem1DEXT = null;

    internal static void Load()
    {
        _glGetUnsignedBytevEXT = (delegate* unmanaged<uint, byte*, void>)QuickGL.GetGLProcAddress("glGetUnsignedBytevEXT");
        _glGetUnsignedBytei_vEXT = (delegate* unmanaged<uint, uint, byte*, void>)QuickGL.GetGLProcAddress("glGetUnsignedBytei_vEXT");
        _glDeleteMemoryObjectsEXT = (delegate* unmanaged<int, uint*, void>)QuickGL.GetGLProcAddress("glDeleteMemoryObjectsEXT");
        _glIsMemoryObjectEXT = (delegate* unmanaged<uint, bool>)QuickGL.GetGLProcAddress("glIsMemoryObjectEXT");
        _glCreateMemoryObjectsEXT = (delegate* unmanaged<int, uint*, void>)QuickGL.GetGLProcAddress("glCreateMemoryObjectsEXT");
        _glMemoryObjectParameterivEXT = (delegate* unmanaged<uint, uint, int*, void>)QuickGL.GetGLProcAddress("glMemoryObjectParameterivEXT");
        _glGetMemoryObjectParameterivEXT = (delegate* unmanaged<uint, uint, int*, void>)QuickGL.GetGLProcAddress("glGetMemoryObjectParameterivEXT");
        _glTexStorageMem2DEXT = (delegate* unmanaged<uint, int, uint, int, int, uint, ulong, void>)QuickGL.GetGLProcAddress("glTexStorageMem2DEXT");
        _glTexStorageMem2DMultisampleEXT = (delegate* unmanaged<uint, int, uint, int, int, bool, uint, ulong, void>)QuickGL.GetGLProcAddress("glTexStorageMem2DMultisampleEXT");
        _glTexStorageMem3DEXT = (delegate* unmanaged<uint, int, uint, int, int, int, uint, ulong, void>)QuickGL.GetGLProcAddress("glTexStorageMem3DEXT");
        _glTexStorageMem3DMultisampleEXT = (delegate* unmanaged<uint, int, uint, int, int, int, bool, uint, ulong, void>)QuickGL.GetGLProcAddress("glTexStorageMem3DMultisampleEXT");
        _glBufferStorageMemEXT = (delegate* unmanaged<uint, nint, uint, ulong, void>)QuickGL.GetGLProcAddress("glBufferStorageMemEXT");
        _glTextureStorageMem2DEXT = (delegate* unmanaged<uint, int, uint, int, int, uint, ulong, void>)QuickGL.GetGLProcAddress("glTextureStorageMem2DEXT");
        _glTextureStorageMem2DMultisampleEXT = (delegate* unmanaged<uint, int, uint, int, int, bool, uint, ulong, void>)QuickGL.GetGLProcAddress("glTextureStorageMem2DMultisampleEXT");
        _glTextureStorageMem3DEXT = (delegate* unmanaged<uint, int, uint, int, int, int, uint, ulong, void>)QuickGL.GetGLProcAddress("glTextureStorageMem3DEXT");
        _glTextureStorageMem3DMultisampleEXT = (delegate* unmanaged<uint, int, uint, int, int, int, bool, uint, ulong, void>)QuickGL.GetGLProcAddress("glTextureStorageMem3DMultisampleEXT");
        _glNamedBufferStorageMemEXT = (delegate* unmanaged<uint, nint, uint, ulong, void>)QuickGL.GetGLProcAddress("glNamedBufferStorageMemEXT");
        _glTexStorageMem1DEXT = (delegate* unmanaged<uint, int, uint, int, uint, ulong, void>)QuickGL.GetGLProcAddress("glTexStorageMem1DEXT");
        _glTextureStorageMem1DEXT = (delegate* unmanaged<uint, int, uint, int, uint, ulong, void>)QuickGL.GetGLProcAddress("glTextureStorageMem1DEXT");
    }

    internal static void Unload()
    {
        _glGetUnsignedBytevEXT = null;
        _glGetUnsignedBytei_vEXT = null;
        _glDeleteMemoryObjectsEXT = null;
        _glIsMemoryObjectEXT = null;
        _glCreateMemoryObjectsEXT = null;
        _glMemoryObjectParameterivEXT = null;
        _glGetMemoryObjectParameterivEXT = null;
        _glTexStorageMem2DEXT = null;
        _glTexStorageMem2DMultisampleEXT = null;
        _glTexStorageMem3DEXT = null;
        _glTexStorageMem3DMultisampleEXT = null;
        _glBufferStorageMemEXT = null;
        _glTextureStorageMem2DEXT = null;
        _glTextureStorageMem2DMultisampleEXT = null;
        _glTextureStorageMem3DEXT = null;
        _glTextureStorageMem3DMultisampleEXT = null;
        _glNamedBufferStorageMemEXT = null;
        _glTexStorageMem1DEXT = null;
        _glTextureStorageMem1DEXT = null;
    }
    #endregion

    #region Function wrappers
    public static void glGetUnsignedBytevEXT(uint pname, byte* data) { QGLFeature.VerifyFunc((nint)_glGetUnsignedBytevEXT); _glGetUnsignedBytevEXT(pname, data); }
    public static void glGetUnsignedBytei_vEXT(uint target, uint index, byte* data) { QGLFeature.VerifyFunc((nint)_glGetUnsignedBytei_vEXT); _glGetUnsignedBytei_vEXT(target, index, data); }
    public static void glDeleteMemoryObjectsEXT(int n, uint* memoryObjects) { QGLFeature.VerifyFunc((nint)_glDeleteMemoryObjectsEXT); _glDeleteMemoryObjectsEXT(n, memoryObjects); }
    public static bool glIsMemoryObjectEXT(uint memoryObject) { QGLFeature.VerifyFunc((nint)_glIsMemoryObjectEXT); return _glIsMemoryObjectEXT(memoryObject); }
    public static void glCreateMemoryObjectsEXT(int n, uint* memoryObjects) { QGLFeature.VerifyFunc((nint)_glCreateMemoryObjectsEXT); _glCreateMemoryObjectsEXT(n, memoryObjects); }
    public static void glMemoryObjectParameterivEXT(uint memoryObject, uint pname, int* @params) { QGLFeature.VerifyFunc((nint)_glMemoryObjectParameterivEXT); _glMemoryObjectParameterivEXT(memoryObject, pname, @params); }
    public static void glGetMemoryObjectParameterivEXT(uint memoryObject, uint pname, int* @params) { QGLFeature.VerifyFunc((nint)_glGetMemoryObjectParameterivEXT); _glGetMemoryObjectParameterivEXT(memoryObject, pname, @params); }
    public static void glTexStorageMem2DEXT(uint target, int levels, uint internalFormat, int width, int height, uint memory, ulong offset) { QGLFeature.VerifyFunc((nint)_glTexStorageMem2DEXT); _glTexStorageMem2DEXT(target, levels, internalFormat, width, height, memory, offset); }
    public static void glTexStorageMem2DMultisampleEXT(uint target, int samples, uint internalFormat, int width, int height, bool fixedSampleLocations, uint memory, ulong offset) { QGLFeature.VerifyFunc((nint)_glTexStorageMem2DMultisampleEXT); _glTexStorageMem2DMultisampleEXT(target, samples, internalFormat, width, height, fixedSampleLocations, memory, offset); }
    public static void glTexStorageMem3DEXT(uint target, int levels, uint internalFormat, int width, int height, int depth, uint memory, ulong offset) { QGLFeature.VerifyFunc((nint)_glTexStorageMem3DEXT); _glTexStorageMem3DEXT(target, levels, internalFormat, width, height, depth, memory, offset); }
    public static void glTexStorageMem3DMultisampleEXT(uint target, int samples, uint internalFormat, int width, int height, int depth, bool fixedSampleLocations, uint memory, ulong offset) { QGLFeature.VerifyFunc((nint)_glTexStorageMem3DMultisampleEXT); _glTexStorageMem3DMultisampleEXT(target, samples, internalFormat, width, height, depth, fixedSampleLocations, memory, offset); }
    public static void glBufferStorageMemEXT(uint target, nint size, uint memory, ulong offset) { QGLFeature.VerifyFunc((nint)_glBufferStorageMemEXT); _glBufferStorageMemEXT(target, size, memory, offset); }
    public static void glTextureStorageMem2DEXT(uint texture, int levels, uint internalFormat, int width, int height, uint memory, ulong offset) { QGLFeature.VerifyFunc((nint)_glTextureStorageMem2DEXT); _glTextureStorageMem2DEXT(texture, levels, internalFormat, width, height, memory, offset); }
    public static void glTextureStorageMem2DMultisampleEXT(uint texture, int samples, uint internalFormat, int width, int height, bool fixedSampleLocations, uint memory, ulong offset) { QGLFeature.VerifyFunc((nint)_glTextureStorageMem2DMultisampleEXT); _glTextureStorageMem2DMultisampleEXT(texture, samples, internalFormat, width, height, fixedSampleLocations, memory, offset); }
    public static void glTextureStorageMem3DEXT(uint texture, int levels, uint internalFormat, int width, int height, int depth, uint memory, ulong offset) { QGLFeature.VerifyFunc((nint)_glTextureStorageMem3DEXT); _glTextureStorageMem3DEXT(texture, levels, internalFormat, width, height, depth, memory, offset); }
    public static void glTextureStorageMem3DMultisampleEXT(uint texture, int samples, uint internalFormat, int width, int height, int depth, bool fixedSampleLocations, uint memory, ulong offset) { QGLFeature.VerifyFunc((nint)_glTextureStorageMem3DMultisampleEXT); _glTextureStorageMem3DMultisampleEXT(texture, samples, internalFormat, width, height, depth, fixedSampleLocations, memory, offset); }
    public static void glNamedBufferStorageMemEXT(uint buffer, nint size, uint memory, ulong offset) { QGLFeature.VerifyFunc((nint)_glNamedBufferStorageMemEXT); _glNamedBufferStorageMemEXT(buffer, size, memory, offset); }
    public static void glTexStorageMem1DEXT(uint target, int levels, uint internalFormat, int width, uint memory, ulong offset) { QGLFeature.VerifyFunc((nint)_glTexStorageMem1DEXT); _glTexStorageMem1DEXT(target, levels, internalFormat, width, memory, offset); }
    public static void glTextureStorageMem1DEXT(uint texture, int levels, uint internalFormat, int width, uint memory, ulong offset) { QGLFeature.VerifyFunc((nint)_glTextureStorageMem1DEXT); _glTextureStorageMem1DEXT(texture, levels, internalFormat, width, memory, offset); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_EXT_memory_object", true, false);
}
