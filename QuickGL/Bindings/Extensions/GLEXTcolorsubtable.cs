// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:00:37.9650300Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLEXTcolorsubtable
{
    #region Constants
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, int, int, int, int, void> _glCopyColorSubTableEXT = null;
    internal static delegate* unmanaged<uint, int, int, uint, uint, void*, void> _glColorSubTableEXT = null;

    internal static void Load()
    {
        _glCopyColorSubTableEXT = (delegate* unmanaged<uint, int, int, int, int, void>)QuickGL.GetGLProcAddress("glCopyColorSubTableEXT");
        _glColorSubTableEXT = (delegate* unmanaged<uint, int, int, uint, uint, void*, void>)QuickGL.GetGLProcAddress("glColorSubTableEXT");
    }

    internal static void Unload()
    {
        _glCopyColorSubTableEXT = null;
        _glColorSubTableEXT = null;
    }
    #endregion

    #region Function wrappers
    public static void glCopyColorSubTableEXT(uint target, int start, int x, int y, int width) { QGLFeature.VerifyFunc((nint)_glCopyColorSubTableEXT); _glCopyColorSubTableEXT(target, start, x, y, width); }
    public static void glColorSubTableEXT(uint target, int start, int count, uint format, uint type, void* data) { QGLFeature.VerifyFunc((nint)_glColorSubTableEXT); _glColorSubTableEXT(target, start, count, format, type, data); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_EXT_color_subtable", true, false);
}
