// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:43:44.0174583Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLEXTtexturebuffer
{
    #region Constants
    public const int GL_TEXTURE_BUFFER_EXT = 0x00008C2A;
    public const int GL_TEXTURE_BUFFER_BINDING_EXT = 0x00008C2A;
    public const int GL_MAX_TEXTURE_BUFFER_SIZE_EXT = 0x00008C2B;
    public const int GL_TEXTURE_BINDING_BUFFER_EXT = 0x00008C2C;
    public const int GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT = 0x00008C2D;
    public const int GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT = 0x0000919F;
    public const int GL_SAMPLER_BUFFER_EXT = 0x00008DC2;
    public const int GL_INT_SAMPLER_BUFFER_EXT = 0x00008DD0;
    public const int GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT = 0x00008DD8;
    public const int GL_IMAGE_BUFFER_EXT = 0x00009051;
    public const int GL_INT_IMAGE_BUFFER_EXT = 0x0000905C;
    public const int GL_UNSIGNED_INT_IMAGE_BUFFER_EXT = 0x00009067;
    public const int GL_TEXTURE_BUFFER_OFFSET_EXT = 0x0000919D;
    public const int GL_TEXTURE_BUFFER_SIZE_EXT = 0x0000919E;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, uint, uint, void> _glTexBufferEXT = null;
    internal static delegate* unmanaged<uint, uint, uint, nint, nint, void> _glTexBufferRangeEXT = null;

    internal static void Load()
    {
        _glTexBufferEXT = (delegate* unmanaged<uint, uint, uint, void>)QuickGL.GetGLProcAddress("glTexBufferEXT");
        _glTexBufferRangeEXT = (delegate* unmanaged<uint, uint, uint, nint, nint, void>)QuickGL.GetGLProcAddress("glTexBufferRangeEXT");
    }

    internal static void Unload()
    {
        _glTexBufferEXT = null;
        _glTexBufferRangeEXT = null;
    }
    #endregion

    #region Function wrappers
    public static void glTexBufferEXT(uint target, uint internalformat, uint buffer) { QGLFeature.VerifyFunc((nint)_glTexBufferEXT); _glTexBufferEXT(target, internalformat, buffer); }
    public static void glTexBufferRangeEXT(uint target, uint internalformat, uint buffer, nint offset, nint size) { QGLFeature.VerifyFunc((nint)_glTexBufferRangeEXT); _glTexBufferRangeEXT(target, internalformat, buffer, offset, size); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_EXT_texture_buffer", true, true);
}
