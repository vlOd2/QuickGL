// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLEXTframebufferobject
{
    #region Constants
    public const int GL_INVALID_FRAMEBUFFER_OPERATION_EXT = 0x00000506;
    public const int GL_MAX_RENDERBUFFER_SIZE_EXT = 0x000084E8;
    public const int GL_FRAMEBUFFER_BINDING_EXT = 0x00008CA6;
    public const int GL_RENDERBUFFER_BINDING_EXT = 0x00008CA7;
    public const int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT = 0x00008CD0;
    public const int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT = 0x00008CD1;
    public const int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT = 0x00008CD2;
    public const int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT = 0x00008CD3;
    public const int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT = 0x00008CD4;
    public const int GL_FRAMEBUFFER_COMPLETE_EXT = 0x00008CD5;
    public const int GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT = 0x00008CD6;
    public const int GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT = 0x00008CD7;
    public const int GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT = 0x00008CD9;
    public const int GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT = 0x00008CDA;
    public const int GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT = 0x00008CDB;
    public const int GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT = 0x00008CDC;
    public const int GL_FRAMEBUFFER_UNSUPPORTED_EXT = 0x00008CDD;
    public const int GL_MAX_COLOR_ATTACHMENTS_EXT = 0x00008CDF;
    public const int GL_COLOR_ATTACHMENT0_EXT = 0x00008CE0;
    public const int GL_COLOR_ATTACHMENT1_EXT = 0x00008CE1;
    public const int GL_COLOR_ATTACHMENT2_EXT = 0x00008CE2;
    public const int GL_COLOR_ATTACHMENT3_EXT = 0x00008CE3;
    public const int GL_COLOR_ATTACHMENT4_EXT = 0x00008CE4;
    public const int GL_COLOR_ATTACHMENT5_EXT = 0x00008CE5;
    public const int GL_COLOR_ATTACHMENT6_EXT = 0x00008CE6;
    public const int GL_COLOR_ATTACHMENT7_EXT = 0x00008CE7;
    public const int GL_COLOR_ATTACHMENT8_EXT = 0x00008CE8;
    public const int GL_COLOR_ATTACHMENT9_EXT = 0x00008CE9;
    public const int GL_COLOR_ATTACHMENT10_EXT = 0x00008CEA;
    public const int GL_COLOR_ATTACHMENT11_EXT = 0x00008CEB;
    public const int GL_COLOR_ATTACHMENT12_EXT = 0x00008CEC;
    public const int GL_COLOR_ATTACHMENT13_EXT = 0x00008CED;
    public const int GL_COLOR_ATTACHMENT14_EXT = 0x00008CEE;
    public const int GL_COLOR_ATTACHMENT15_EXT = 0x00008CEF;
    public const int GL_DEPTH_ATTACHMENT_EXT = 0x00008D00;
    public const int GL_STENCIL_ATTACHMENT_EXT = 0x00008D20;
    public const int GL_FRAMEBUFFER_EXT = 0x00008D40;
    public const int GL_RENDERBUFFER_EXT = 0x00008D41;
    public const int GL_RENDERBUFFER_WIDTH_EXT = 0x00008D42;
    public const int GL_RENDERBUFFER_HEIGHT_EXT = 0x00008D43;
    public const int GL_RENDERBUFFER_INTERNAL_FORMAT_EXT = 0x00008D44;
    public const int GL_STENCIL_INDEX1_EXT = 0x00008D46;
    public const int GL_STENCIL_INDEX4_EXT = 0x00008D47;
    public const int GL_STENCIL_INDEX8_EXT = 0x00008D48;
    public const int GL_STENCIL_INDEX16_EXT = 0x00008D49;
    public const int GL_RENDERBUFFER_RED_SIZE_EXT = 0x00008D50;
    public const int GL_RENDERBUFFER_GREEN_SIZE_EXT = 0x00008D51;
    public const int GL_RENDERBUFFER_BLUE_SIZE_EXT = 0x00008D52;
    public const int GL_RENDERBUFFER_ALPHA_SIZE_EXT = 0x00008D53;
    public const int GL_RENDERBUFFER_DEPTH_SIZE_EXT = 0x00008D54;
    public const int GL_RENDERBUFFER_STENCIL_SIZE_EXT = 0x00008D55;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, bool> _glIsRenderbufferEXT = null;
    internal static delegate* unmanaged<uint, uint, void> _glBindRenderbufferEXT = null;
    internal static delegate* unmanaged<int, uint*, void> _glDeleteRenderbuffersEXT = null;
    internal static delegate* unmanaged<int, uint*, void> _glGenRenderbuffersEXT = null;
    internal static delegate* unmanaged<uint, uint, int, int, void> _glRenderbufferStorageEXT = null;
    internal static delegate* unmanaged<uint, uint, int*, void> _glGetRenderbufferParameterivEXT = null;
    internal static delegate* unmanaged<uint, bool> _glIsFramebufferEXT = null;
    internal static delegate* unmanaged<uint, uint, void> _glBindFramebufferEXT = null;
    internal static delegate* unmanaged<int, uint*, void> _glDeleteFramebuffersEXT = null;
    internal static delegate* unmanaged<int, uint*, void> _glGenFramebuffersEXT = null;
    internal static delegate* unmanaged<uint, uint> _glCheckFramebufferStatusEXT = null;
    internal static delegate* unmanaged<uint, uint, uint, uint, int, void> _glFramebufferTexture1DEXT = null;
    internal static delegate* unmanaged<uint, uint, uint, uint, int, void> _glFramebufferTexture2DEXT = null;
    internal static delegate* unmanaged<uint, uint, uint, uint, int, int, void> _glFramebufferTexture3DEXT = null;
    internal static delegate* unmanaged<uint, uint, uint, uint, void> _glFramebufferRenderbufferEXT = null;
    internal static delegate* unmanaged<uint, uint, uint, int*, void> _glGetFramebufferAttachmentParameterivEXT = null;
    internal static delegate* unmanaged<uint, void> _glGenerateMipmapEXT = null;

    internal static void Load()
    {
        _glIsRenderbufferEXT = (delegate* unmanaged<uint, bool>)QuickGL.GetGLProcAddress("glIsRenderbufferEXT");
        _glBindRenderbufferEXT = (delegate* unmanaged<uint, uint, void>)QuickGL.GetGLProcAddress("glBindRenderbufferEXT");
        _glDeleteRenderbuffersEXT = (delegate* unmanaged<int, uint*, void>)QuickGL.GetGLProcAddress("glDeleteRenderbuffersEXT");
        _glGenRenderbuffersEXT = (delegate* unmanaged<int, uint*, void>)QuickGL.GetGLProcAddress("glGenRenderbuffersEXT");
        _glRenderbufferStorageEXT = (delegate* unmanaged<uint, uint, int, int, void>)QuickGL.GetGLProcAddress("glRenderbufferStorageEXT");
        _glGetRenderbufferParameterivEXT = (delegate* unmanaged<uint, uint, int*, void>)QuickGL.GetGLProcAddress("glGetRenderbufferParameterivEXT");
        _glIsFramebufferEXT = (delegate* unmanaged<uint, bool>)QuickGL.GetGLProcAddress("glIsFramebufferEXT");
        _glBindFramebufferEXT = (delegate* unmanaged<uint, uint, void>)QuickGL.GetGLProcAddress("glBindFramebufferEXT");
        _glDeleteFramebuffersEXT = (delegate* unmanaged<int, uint*, void>)QuickGL.GetGLProcAddress("glDeleteFramebuffersEXT");
        _glGenFramebuffersEXT = (delegate* unmanaged<int, uint*, void>)QuickGL.GetGLProcAddress("glGenFramebuffersEXT");
        _glCheckFramebufferStatusEXT = (delegate* unmanaged<uint, uint>)QuickGL.GetGLProcAddress("glCheckFramebufferStatusEXT");
        _glFramebufferTexture1DEXT = (delegate* unmanaged<uint, uint, uint, uint, int, void>)QuickGL.GetGLProcAddress("glFramebufferTexture1DEXT");
        _glFramebufferTexture2DEXT = (delegate* unmanaged<uint, uint, uint, uint, int, void>)QuickGL.GetGLProcAddress("glFramebufferTexture2DEXT");
        _glFramebufferTexture3DEXT = (delegate* unmanaged<uint, uint, uint, uint, int, int, void>)QuickGL.GetGLProcAddress("glFramebufferTexture3DEXT");
        _glFramebufferRenderbufferEXT = (delegate* unmanaged<uint, uint, uint, uint, void>)QuickGL.GetGLProcAddress("glFramebufferRenderbufferEXT");
        _glGetFramebufferAttachmentParameterivEXT = (delegate* unmanaged<uint, uint, uint, int*, void>)QuickGL.GetGLProcAddress("glGetFramebufferAttachmentParameterivEXT");
        _glGenerateMipmapEXT = (delegate* unmanaged<uint, void>)QuickGL.GetGLProcAddress("glGenerateMipmapEXT");
    }

    internal static void Unload()
    {
        _glIsRenderbufferEXT = null;
        _glBindRenderbufferEXT = null;
        _glDeleteRenderbuffersEXT = null;
        _glGenRenderbuffersEXT = null;
        _glRenderbufferStorageEXT = null;
        _glGetRenderbufferParameterivEXT = null;
        _glIsFramebufferEXT = null;
        _glBindFramebufferEXT = null;
        _glDeleteFramebuffersEXT = null;
        _glGenFramebuffersEXT = null;
        _glCheckFramebufferStatusEXT = null;
        _glFramebufferTexture1DEXT = null;
        _glFramebufferTexture2DEXT = null;
        _glFramebufferTexture3DEXT = null;
        _glFramebufferRenderbufferEXT = null;
        _glGetFramebufferAttachmentParameterivEXT = null;
        _glGenerateMipmapEXT = null;
    }
    #endregion

    #region Function wrappers
    public static bool glIsRenderbufferEXT(uint renderbuffer) { QGLFeature.VerifyFunc((nint)_glIsRenderbufferEXT); return _glIsRenderbufferEXT(renderbuffer); }
    public static void glBindRenderbufferEXT(uint target, uint renderbuffer) { QGLFeature.VerifyFunc((nint)_glBindRenderbufferEXT); _glBindRenderbufferEXT(target, renderbuffer); }
    public static void glDeleteRenderbuffersEXT(int n, uint* renderbuffers) { QGLFeature.VerifyFunc((nint)_glDeleteRenderbuffersEXT); _glDeleteRenderbuffersEXT(n, renderbuffers); }
    public static void glGenRenderbuffersEXT(int n, uint* renderbuffers) { QGLFeature.VerifyFunc((nint)_glGenRenderbuffersEXT); _glGenRenderbuffersEXT(n, renderbuffers); }
    public static void glRenderbufferStorageEXT(uint target, uint internalformat, int width, int height) { QGLFeature.VerifyFunc((nint)_glRenderbufferStorageEXT); _glRenderbufferStorageEXT(target, internalformat, width, height); }
    public static void glGetRenderbufferParameterivEXT(uint target, uint pname, int* @params) { QGLFeature.VerifyFunc((nint)_glGetRenderbufferParameterivEXT); _glGetRenderbufferParameterivEXT(target, pname, @params); }
    public static bool glIsFramebufferEXT(uint framebuffer) { QGLFeature.VerifyFunc((nint)_glIsFramebufferEXT); return _glIsFramebufferEXT(framebuffer); }
    public static void glBindFramebufferEXT(uint target, uint framebuffer) { QGLFeature.VerifyFunc((nint)_glBindFramebufferEXT); _glBindFramebufferEXT(target, framebuffer); }
    public static void glDeleteFramebuffersEXT(int n, uint* framebuffers) { QGLFeature.VerifyFunc((nint)_glDeleteFramebuffersEXT); _glDeleteFramebuffersEXT(n, framebuffers); }
    public static void glGenFramebuffersEXT(int n, uint* framebuffers) { QGLFeature.VerifyFunc((nint)_glGenFramebuffersEXT); _glGenFramebuffersEXT(n, framebuffers); }
    public static uint glCheckFramebufferStatusEXT(uint target) { QGLFeature.VerifyFunc((nint)_glCheckFramebufferStatusEXT); return _glCheckFramebufferStatusEXT(target); }
    public static void glFramebufferTexture1DEXT(uint target, uint attachment, uint textarget, uint texture, int level) { QGLFeature.VerifyFunc((nint)_glFramebufferTexture1DEXT); _glFramebufferTexture1DEXT(target, attachment, textarget, texture, level); }
    public static void glFramebufferTexture2DEXT(uint target, uint attachment, uint textarget, uint texture, int level) { QGLFeature.VerifyFunc((nint)_glFramebufferTexture2DEXT); _glFramebufferTexture2DEXT(target, attachment, textarget, texture, level); }
    public static void glFramebufferTexture3DEXT(uint target, uint attachment, uint textarget, uint texture, int level, int zoffset) { QGLFeature.VerifyFunc((nint)_glFramebufferTexture3DEXT); _glFramebufferTexture3DEXT(target, attachment, textarget, texture, level, zoffset); }
    public static void glFramebufferRenderbufferEXT(uint target, uint attachment, uint renderbuffertarget, uint renderbuffer) { QGLFeature.VerifyFunc((nint)_glFramebufferRenderbufferEXT); _glFramebufferRenderbufferEXT(target, attachment, renderbuffertarget, renderbuffer); }
    public static void glGetFramebufferAttachmentParameterivEXT(uint target, uint attachment, uint pname, int* @params) { QGLFeature.VerifyFunc((nint)_glGetFramebufferAttachmentParameterivEXT); _glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, @params); }
    public static void glGenerateMipmapEXT(uint target) { QGLFeature.VerifyFunc((nint)_glGenerateMipmapEXT); _glGenerateMipmapEXT(target); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_EXT_framebuffer_object", true, false);
}
