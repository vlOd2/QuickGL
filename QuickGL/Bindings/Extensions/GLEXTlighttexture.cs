// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:41:03.2542212Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLEXTlighttexture
{
    #region Constants
    public const int GL_FRAGMENT_MATERIAL_EXT = 0x00008349;
    public const int GL_FRAGMENT_NORMAL_EXT = 0x0000834A;
    public const int GL_FRAGMENT_COLOR_EXT = 0x0000834C;
    public const int GL_ATTENUATION_EXT = 0x0000834D;
    public const int GL_SHADOW_ATTENUATION_EXT = 0x0000834E;
    public const int GL_TEXTURE_APPLICATION_MODE_EXT = 0x0000834F;
    public const int GL_TEXTURE_LIGHT_EXT = 0x00008350;
    public const int GL_TEXTURE_MATERIAL_FACE_EXT = 0x00008351;
    public const int GL_TEXTURE_MATERIAL_PARAMETER_EXT = 0x00008352;
    public const int GL_FRAGMENT_DEPTH_EXT = 0x00008452;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, void> _glApplyTextureEXT = null;
    internal static delegate* unmanaged<uint, void> _glTextureLightEXT = null;
    internal static delegate* unmanaged<uint, uint, void> _glTextureMaterialEXT = null;

    internal static void Load()
    {
        _glApplyTextureEXT = (delegate* unmanaged<uint, void>)QuickGL.GetGLProcAddress("glApplyTextureEXT");
        _glTextureLightEXT = (delegate* unmanaged<uint, void>)QuickGL.GetGLProcAddress("glTextureLightEXT");
        _glTextureMaterialEXT = (delegate* unmanaged<uint, uint, void>)QuickGL.GetGLProcAddress("glTextureMaterialEXT");
    }

    internal static void Unload()
    {
        _glApplyTextureEXT = null;
        _glTextureLightEXT = null;
        _glTextureMaterialEXT = null;
    }
    #endregion

    #region Function wrappers
    public static void glApplyTextureEXT(uint mode) { QGLFeature.VerifyFunc((nint)_glApplyTextureEXT); _glApplyTextureEXT(mode); }
    public static void glTextureLightEXT(uint pname) { QGLFeature.VerifyFunc((nint)_glTextureLightEXT); _glTextureLightEXT(pname); }
    public static void glTextureMaterialEXT(uint face, uint mode) { QGLFeature.VerifyFunc((nint)_glTextureMaterialEXT); _glTextureMaterialEXT(face, mode); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_EXT_light_texture", true, false);
}
