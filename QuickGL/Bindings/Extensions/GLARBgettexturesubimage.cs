// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLARBgettexturesubimage
{
    #region Constants
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, int, int, int, int, int, int, int, uint, uint, int, void*, void> _glGetTextureSubImage = null;
    internal static delegate* unmanaged<uint, int, int, int, int, int, int, int, int, void*, void> _glGetCompressedTextureSubImage = null;

    internal static void Load()
    {
        _glGetTextureSubImage = (delegate* unmanaged<uint, int, int, int, int, int, int, int, uint, uint, int, void*, void>)QuickGL.GetGLProcAddress("glGetTextureSubImage");
        _glGetCompressedTextureSubImage = (delegate* unmanaged<uint, int, int, int, int, int, int, int, int, void*, void>)QuickGL.GetGLProcAddress("glGetCompressedTextureSubImage");
    }

    internal static void Unload()
    {
        _glGetTextureSubImage = null;
        _glGetCompressedTextureSubImage = null;
    }
    #endregion

    #region Function wrappers
    public static void glGetTextureSubImage(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, uint format, uint type, int bufSize, void* pixels) { QGLFeature.VerifyFunc((nint)_glGetTextureSubImage); _glGetTextureSubImage(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, bufSize, pixels); }
    public static void glGetCompressedTextureSubImage(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int bufSize, void* pixels) { QGLFeature.VerifyFunc((nint)_glGetCompressedTextureSubImage); _glGetCompressedTextureSubImage(texture, level, xoffset, yoffset, zoffset, width, height, depth, bufSize, pixels); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_ARB_get_texture_sub_image", true, false);
}
