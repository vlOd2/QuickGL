// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLARBcleartexture
{
    #region Constants
    public const int GL_CLEAR_TEXTURE = 0x00009365;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, int, uint, uint, void*, void> _glClearTexImage = null;
    internal static delegate* unmanaged<uint, int, int, int, int, int, int, int, uint, uint, void*, void> _glClearTexSubImage = null;

    internal static void Load()
    {
        _glClearTexImage = (delegate* unmanaged<uint, int, uint, uint, void*, void>)QuickGL.GetGLProcAddress("glClearTexImage");
        _glClearTexSubImage = (delegate* unmanaged<uint, int, int, int, int, int, int, int, uint, uint, void*, void>)QuickGL.GetGLProcAddress("glClearTexSubImage");
    }

    internal static void Unload()
    {
        _glClearTexImage = null;
        _glClearTexSubImage = null;
    }
    #endregion

    #region Function wrappers
    public static void glClearTexImage(uint texture, int level, uint format, uint type, void* data) { QGLFeature.VerifyFunc((nint)_glClearTexImage); _glClearTexImage(texture, level, format, type, data); }
    public static void glClearTexSubImage(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, uint format, uint type, void* data) { QGLFeature.VerifyFunc((nint)_glClearTexSubImage); _glClearTexSubImage(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, data); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_ARB_clear_texture", true, false);
}
