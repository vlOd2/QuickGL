// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:43:43.7627912Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLARBdrawbuffersblend
{
    #region Constants
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, uint, void> _glBlendEquationiARB = null;
    internal static delegate* unmanaged<uint, uint, uint, void> _glBlendEquationSeparateiARB = null;
    internal static delegate* unmanaged<uint, uint, uint, void> _glBlendFunciARB = null;
    internal static delegate* unmanaged<uint, uint, uint, uint, uint, void> _glBlendFuncSeparateiARB = null;

    internal static void Load()
    {
        _glBlendEquationiARB = (delegate* unmanaged<uint, uint, void>)QuickGL.GetGLProcAddress("glBlendEquationiARB");
        _glBlendEquationSeparateiARB = (delegate* unmanaged<uint, uint, uint, void>)QuickGL.GetGLProcAddress("glBlendEquationSeparateiARB");
        _glBlendFunciARB = (delegate* unmanaged<uint, uint, uint, void>)QuickGL.GetGLProcAddress("glBlendFunciARB");
        _glBlendFuncSeparateiARB = (delegate* unmanaged<uint, uint, uint, uint, uint, void>)QuickGL.GetGLProcAddress("glBlendFuncSeparateiARB");
    }

    internal static void Unload()
    {
        _glBlendEquationiARB = null;
        _glBlendEquationSeparateiARB = null;
        _glBlendFunciARB = null;
        _glBlendFuncSeparateiARB = null;
    }
    #endregion

    #region Function wrappers
    public static void glBlendEquationiARB(uint buf, uint mode) { QGLFeature.VerifyFunc((nint)_glBlendEquationiARB); _glBlendEquationiARB(buf, mode); }
    public static void glBlendEquationSeparateiARB(uint buf, uint modeRGB, uint modeAlpha) { QGLFeature.VerifyFunc((nint)_glBlendEquationSeparateiARB); _glBlendEquationSeparateiARB(buf, modeRGB, modeAlpha); }
    public static void glBlendFunciARB(uint buf, uint src, uint dst) { QGLFeature.VerifyFunc((nint)_glBlendFunciARB); _glBlendFunciARB(buf, src, dst); }
    public static void glBlendFuncSeparateiARB(uint buf, uint srcRGB, uint dstRGB, uint srcAlpha, uint dstAlpha) { QGLFeature.VerifyFunc((nint)_glBlendFuncSeparateiARB); _glBlendFuncSeparateiARB(buf, srcRGB, dstRGB, srcAlpha, dstAlpha); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_ARB_draw_buffers_blend", true, false);
}
