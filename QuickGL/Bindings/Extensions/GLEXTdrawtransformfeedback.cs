// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:00:37.9943294Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLEXTdrawtransformfeedback
{
    #region Constants
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, uint, int, void> _glDrawTransformFeedbackInstancedEXT = null;
    internal static delegate* unmanaged<uint, uint, void> _glDrawTransformFeedbackEXT = null;

    internal static void Load()
    {
        _glDrawTransformFeedbackInstancedEXT = (delegate* unmanaged<uint, uint, int, void>)QuickGL.GetGLProcAddress("glDrawTransformFeedbackInstancedEXT");
        _glDrawTransformFeedbackEXT = (delegate* unmanaged<uint, uint, void>)QuickGL.GetGLProcAddress("glDrawTransformFeedbackEXT");
    }

    internal static void Unload()
    {
        _glDrawTransformFeedbackInstancedEXT = null;
        _glDrawTransformFeedbackEXT = null;
    }
    #endregion

    #region Function wrappers
    public static void glDrawTransformFeedbackInstancedEXT(uint mode, uint id, int instancecount) { QGLFeature.VerifyFunc((nint)_glDrawTransformFeedbackInstancedEXT); _glDrawTransformFeedbackInstancedEXT(mode, id, instancecount); }
    public static void glDrawTransformFeedbackEXT(uint mode, uint id) { QGLFeature.VerifyFunc((nint)_glDrawTransformFeedbackEXT); _glDrawTransformFeedbackEXT(mode, id); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_EXT_draw_transform_feedback", true, true);
}
