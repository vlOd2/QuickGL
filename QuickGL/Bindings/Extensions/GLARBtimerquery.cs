// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:41:03.1552652Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLARBtimerquery
{
    #region Constants
    public const int GL_TIME_ELAPSED = 0x000088BF;
    public const int GL_TIMESTAMP = 0x00008E28;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, uint, void> _glQueryCounter = null;
    internal static delegate* unmanaged<uint, uint, long*, void> _glGetQueryObjecti64v = null;
    internal static delegate* unmanaged<uint, uint, ulong*, void> _glGetQueryObjectui64v = null;

    internal static void Load()
    {
        _glQueryCounter = (delegate* unmanaged<uint, uint, void>)QuickGL.GetGLProcAddress("glQueryCounter");
        _glGetQueryObjecti64v = (delegate* unmanaged<uint, uint, long*, void>)QuickGL.GetGLProcAddress("glGetQueryObjecti64v");
        _glGetQueryObjectui64v = (delegate* unmanaged<uint, uint, ulong*, void>)QuickGL.GetGLProcAddress("glGetQueryObjectui64v");
    }

    internal static void Unload()
    {
        _glQueryCounter = null;
        _glGetQueryObjecti64v = null;
        _glGetQueryObjectui64v = null;
    }
    #endregion

    #region Function wrappers
    public static void glQueryCounter(uint id, uint target) { QGLFeature.VerifyFunc((nint)_glQueryCounter); _glQueryCounter(id, target); }
    public static void glGetQueryObjecti64v(uint id, uint pname, long* @params) { QGLFeature.VerifyFunc((nint)_glGetQueryObjecti64v); _glGetQueryObjecti64v(id, pname, @params); }
    public static void glGetQueryObjectui64v(uint id, uint pname, ulong* @params) { QGLFeature.VerifyFunc((nint)_glGetQueryObjectui64v); _glGetQueryObjectui64v(id, pname, @params); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_ARB_timer_query", true, false);
}
