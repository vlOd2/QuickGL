// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:43:43.8433971Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLARBtexturecompression
{
    #region Constants
    public const int GL_COMPRESSED_ALPHA_ARB = 0x000084E9;
    public const int GL_COMPRESSED_LUMINANCE_ARB = 0x000084EA;
    public const int GL_COMPRESSED_LUMINANCE_ALPHA_ARB = 0x000084EB;
    public const int GL_COMPRESSED_INTENSITY_ARB = 0x000084EC;
    public const int GL_COMPRESSED_RGB_ARB = 0x000084ED;
    public const int GL_COMPRESSED_RGBA_ARB = 0x000084EE;
    public const int GL_TEXTURE_COMPRESSION_HINT_ARB = 0x000084EF;
    public const int GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB = 0x000086A0;
    public const int GL_TEXTURE_COMPRESSED_ARB = 0x000086A1;
    public const int GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB = 0x000086A2;
    public const int GL_COMPRESSED_TEXTURE_FORMATS_ARB = 0x000086A3;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, int, uint, int, int, int, int, int, void*, void> _glCompressedTexImage3DARB = null;
    internal static delegate* unmanaged<uint, int, uint, int, int, int, int, void*, void> _glCompressedTexImage2DARB = null;
    internal static delegate* unmanaged<uint, int, uint, int, int, int, void*, void> _glCompressedTexImage1DARB = null;
    internal static delegate* unmanaged<uint, int, int, int, int, int, int, int, uint, int, void*, void> _glCompressedTexSubImage3DARB = null;
    internal static delegate* unmanaged<uint, int, int, int, int, int, uint, int, void*, void> _glCompressedTexSubImage2DARB = null;
    internal static delegate* unmanaged<uint, int, int, int, uint, int, void*, void> _glCompressedTexSubImage1DARB = null;
    internal static delegate* unmanaged<uint, int, void*, void> _glGetCompressedTexImageARB = null;

    internal static void Load()
    {
        _glCompressedTexImage3DARB = (delegate* unmanaged<uint, int, uint, int, int, int, int, int, void*, void>)QuickGL.GetGLProcAddress("glCompressedTexImage3DARB");
        _glCompressedTexImage2DARB = (delegate* unmanaged<uint, int, uint, int, int, int, int, void*, void>)QuickGL.GetGLProcAddress("glCompressedTexImage2DARB");
        _glCompressedTexImage1DARB = (delegate* unmanaged<uint, int, uint, int, int, int, void*, void>)QuickGL.GetGLProcAddress("glCompressedTexImage1DARB");
        _glCompressedTexSubImage3DARB = (delegate* unmanaged<uint, int, int, int, int, int, int, int, uint, int, void*, void>)QuickGL.GetGLProcAddress("glCompressedTexSubImage3DARB");
        _glCompressedTexSubImage2DARB = (delegate* unmanaged<uint, int, int, int, int, int, uint, int, void*, void>)QuickGL.GetGLProcAddress("glCompressedTexSubImage2DARB");
        _glCompressedTexSubImage1DARB = (delegate* unmanaged<uint, int, int, int, uint, int, void*, void>)QuickGL.GetGLProcAddress("glCompressedTexSubImage1DARB");
        _glGetCompressedTexImageARB = (delegate* unmanaged<uint, int, void*, void>)QuickGL.GetGLProcAddress("glGetCompressedTexImageARB");
    }

    internal static void Unload()
    {
        _glCompressedTexImage3DARB = null;
        _glCompressedTexImage2DARB = null;
        _glCompressedTexImage1DARB = null;
        _glCompressedTexSubImage3DARB = null;
        _glCompressedTexSubImage2DARB = null;
        _glCompressedTexSubImage1DARB = null;
        _glGetCompressedTexImageARB = null;
    }
    #endregion

    #region Function wrappers
    public static void glCompressedTexImage3DARB(uint target, int level, uint internalformat, int width, int height, int depth, int border, int imageSize, void* data) { QGLFeature.VerifyFunc((nint)_glCompressedTexImage3DARB); _glCompressedTexImage3DARB(target, level, internalformat, width, height, depth, border, imageSize, data); }
    public static void glCompressedTexImage2DARB(uint target, int level, uint internalformat, int width, int height, int border, int imageSize, void* data) { QGLFeature.VerifyFunc((nint)_glCompressedTexImage2DARB); _glCompressedTexImage2DARB(target, level, internalformat, width, height, border, imageSize, data); }
    public static void glCompressedTexImage1DARB(uint target, int level, uint internalformat, int width, int border, int imageSize, void* data) { QGLFeature.VerifyFunc((nint)_glCompressedTexImage1DARB); _glCompressedTexImage1DARB(target, level, internalformat, width, border, imageSize, data); }
    public static void glCompressedTexSubImage3DARB(uint target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, uint format, int imageSize, void* data) { QGLFeature.VerifyFunc((nint)_glCompressedTexSubImage3DARB); _glCompressedTexSubImage3DARB(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data); }
    public static void glCompressedTexSubImage2DARB(uint target, int level, int xoffset, int yoffset, int width, int height, uint format, int imageSize, void* data) { QGLFeature.VerifyFunc((nint)_glCompressedTexSubImage2DARB); _glCompressedTexSubImage2DARB(target, level, xoffset, yoffset, width, height, format, imageSize, data); }
    public static void glCompressedTexSubImage1DARB(uint target, int level, int xoffset, int width, uint format, int imageSize, void* data) { QGLFeature.VerifyFunc((nint)_glCompressedTexSubImage1DARB); _glCompressedTexSubImage1DARB(target, level, xoffset, width, format, imageSize, data); }
    public static void glGetCompressedTexImageARB(uint target, int level, void* img) { QGLFeature.VerifyFunc((nint)_glGetCompressedTexImageARB); _glGetCompressedTexImageARB(target, level, img); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_ARB_texture_compression", true, false);
}
