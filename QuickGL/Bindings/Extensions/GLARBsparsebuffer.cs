// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:00:37.8895605Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLARBsparsebuffer
{
    #region Constants
    public const int GL_SPARSE_BUFFER_PAGE_SIZE_ARB = 0x000082F8;
    public const int GL_SPARSE_STORAGE_BIT_ARB = 0x00000400;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, nint, nint, bool, void> _glNamedBufferPageCommitmentARB = null;
    internal static delegate* unmanaged<uint, nint, nint, bool, void> _glBufferPageCommitmentARB = null;
    internal static delegate* unmanaged<uint, nint, nint, bool, void> _glNamedBufferPageCommitmentEXT = null;

    internal static void Load()
    {
        _glNamedBufferPageCommitmentARB = (delegate* unmanaged<uint, nint, nint, bool, void>)QuickGL.GetGLProcAddress("glNamedBufferPageCommitmentARB");
        _glBufferPageCommitmentARB = (delegate* unmanaged<uint, nint, nint, bool, void>)QuickGL.GetGLProcAddress("glBufferPageCommitmentARB");
        _glNamedBufferPageCommitmentEXT = (delegate* unmanaged<uint, nint, nint, bool, void>)QuickGL.GetGLProcAddress("glNamedBufferPageCommitmentEXT");
    }

    internal static void Unload()
    {
        _glNamedBufferPageCommitmentARB = null;
        _glBufferPageCommitmentARB = null;
        _glNamedBufferPageCommitmentEXT = null;
    }
    #endregion

    #region Function wrappers
    public static void glNamedBufferPageCommitmentARB(uint buffer, nint offset, nint size, bool commit) { QGLFeature.VerifyFunc((nint)_glNamedBufferPageCommitmentARB); _glNamedBufferPageCommitmentARB(buffer, offset, size, commit); }
    public static void glBufferPageCommitmentARB(uint target, nint offset, nint size, bool commit) { QGLFeature.VerifyFunc((nint)_glBufferPageCommitmentARB); _glBufferPageCommitmentARB(target, offset, size, commit); }
    public static void glNamedBufferPageCommitmentEXT(uint buffer, nint offset, nint size, bool commit) { QGLFeature.VerifyFunc((nint)_glNamedBufferPageCommitmentEXT); _glNamedBufferPageCommitmentEXT(buffer, offset, size, commit); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_ARB_sparse_buffer", true, false);
}
