// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:00:38.0425565Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLEXTocclusionqueryboolean
{
    #region Constants
    public const int GL_QUERY_RESULT_EXT = 0x00008866;
    public const int GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT = 0x00008D6A;
    public const int GL_QUERY_RESULT_AVAILABLE_EXT = 0x00008867;
    public const int GL_CURRENT_QUERY_EXT = 0x00008865;
    public const int GL_ANY_SAMPLES_PASSED_EXT = 0x00008C2F;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, uint, int*, void> _glGetQueryivEXT = null;
    internal static delegate* unmanaged<uint, void> _glEndQueryEXT = null;
    internal static delegate* unmanaged<uint, bool> _glIsQueryEXT = null;
    internal static delegate* unmanaged<uint, uint, uint*, void> _glGetQueryObjectuivEXT = null;
    internal static delegate* unmanaged<uint, uint, void> _glBeginQueryEXT = null;
    internal static delegate* unmanaged<int, uint*, void> _glDeleteQueriesEXT = null;
    internal static delegate* unmanaged<int, uint*, void> _glGenQueriesEXT = null;

    internal static void Load()
    {
        _glGetQueryivEXT = (delegate* unmanaged<uint, uint, int*, void>)QuickGL.GetGLProcAddress("glGetQueryivEXT");
        _glEndQueryEXT = (delegate* unmanaged<uint, void>)QuickGL.GetGLProcAddress("glEndQueryEXT");
        _glIsQueryEXT = (delegate* unmanaged<uint, bool>)QuickGL.GetGLProcAddress("glIsQueryEXT");
        _glGetQueryObjectuivEXT = (delegate* unmanaged<uint, uint, uint*, void>)QuickGL.GetGLProcAddress("glGetQueryObjectuivEXT");
        _glBeginQueryEXT = (delegate* unmanaged<uint, uint, void>)QuickGL.GetGLProcAddress("glBeginQueryEXT");
        _glDeleteQueriesEXT = (delegate* unmanaged<int, uint*, void>)QuickGL.GetGLProcAddress("glDeleteQueriesEXT");
        _glGenQueriesEXT = (delegate* unmanaged<int, uint*, void>)QuickGL.GetGLProcAddress("glGenQueriesEXT");
    }

    internal static void Unload()
    {
        _glGetQueryivEXT = null;
        _glEndQueryEXT = null;
        _glIsQueryEXT = null;
        _glGetQueryObjectuivEXT = null;
        _glBeginQueryEXT = null;
        _glDeleteQueriesEXT = null;
        _glGenQueriesEXT = null;
    }
    #endregion

    #region Function wrappers
    public static void glGetQueryivEXT(uint target, uint pname, int* @params) { QGLFeature.VerifyFunc((nint)_glGetQueryivEXT); _glGetQueryivEXT(target, pname, @params); }
    public static void glEndQueryEXT(uint target) { QGLFeature.VerifyFunc((nint)_glEndQueryEXT); _glEndQueryEXT(target); }
    public static bool glIsQueryEXT(uint id) { QGLFeature.VerifyFunc((nint)_glIsQueryEXT); return _glIsQueryEXT(id); }
    public static void glGetQueryObjectuivEXT(uint id, uint pname, uint* @params) { QGLFeature.VerifyFunc((nint)_glGetQueryObjectuivEXT); _glGetQueryObjectuivEXT(id, pname, @params); }
    public static void glBeginQueryEXT(uint target, uint id) { QGLFeature.VerifyFunc((nint)_glBeginQueryEXT); _glBeginQueryEXT(target, id); }
    public static void glDeleteQueriesEXT(int n, uint* ids) { QGLFeature.VerifyFunc((nint)_glDeleteQueriesEXT); _glDeleteQueriesEXT(n, ids); }
    public static void glGenQueriesEXT(int n, uint* ids) { QGLFeature.VerifyFunc((nint)_glGenQueriesEXT); _glGenQueriesEXT(n, ids); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_EXT_occlusion_query_boolean", true, true);
}
