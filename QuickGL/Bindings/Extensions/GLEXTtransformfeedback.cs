// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLEXTtransformfeedback
{
    #region Constants
    public const int GL_TRANSFORM_FEEDBACK_BUFFER_EXT = 0x00008C8E;
    public const int GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT = 0x00008C84;
    public const int GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT = 0x00008C85;
    public const int GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT = 0x00008C8F;
    public const int GL_INTERLEAVED_ATTRIBS_EXT = 0x00008C8C;
    public const int GL_SEPARATE_ATTRIBS_EXT = 0x00008C8D;
    public const int GL_PRIMITIVES_GENERATED_EXT = 0x00008C87;
    public const int GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT = 0x00008C88;
    public const int GL_RASTERIZER_DISCARD_EXT = 0x00008C89;
    public const int GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT = 0x00008C8A;
    public const int GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT = 0x00008C8B;
    public const int GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT = 0x00008C80;
    public const int GL_TRANSFORM_FEEDBACK_VARYINGS_EXT = 0x00008C83;
    public const int GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT = 0x00008C7F;
    public const int GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT = 0x00008C76;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, void> _glBeginTransformFeedbackEXT = null;
    internal static delegate* unmanaged<void> _glEndTransformFeedbackEXT = null;
    internal static delegate* unmanaged<uint, uint, uint, nint, nint, void> _glBindBufferRangeEXT = null;
    internal static delegate* unmanaged<uint, uint, uint, nint, void> _glBindBufferOffsetEXT = null;
    internal static delegate* unmanaged<uint, uint, uint, void> _glBindBufferBaseEXT = null;
    internal static delegate* unmanaged<uint, int, byte**, uint, void> _glTransformFeedbackVaryingsEXT = null;
    internal static delegate* unmanaged<uint, uint, int, int*, int*, uint*, byte*, void> _glGetTransformFeedbackVaryingEXT = null;

    internal static void Load()
    {
        _glBeginTransformFeedbackEXT = (delegate* unmanaged<uint, void>)QuickGL.GetGLProcAddress("glBeginTransformFeedbackEXT");
        _glEndTransformFeedbackEXT = (delegate* unmanaged<void>)QuickGL.GetGLProcAddress("glEndTransformFeedbackEXT");
        _glBindBufferRangeEXT = (delegate* unmanaged<uint, uint, uint, nint, nint, void>)QuickGL.GetGLProcAddress("glBindBufferRangeEXT");
        _glBindBufferOffsetEXT = (delegate* unmanaged<uint, uint, uint, nint, void>)QuickGL.GetGLProcAddress("glBindBufferOffsetEXT");
        _glBindBufferBaseEXT = (delegate* unmanaged<uint, uint, uint, void>)QuickGL.GetGLProcAddress("glBindBufferBaseEXT");
        _glTransformFeedbackVaryingsEXT = (delegate* unmanaged<uint, int, byte**, uint, void>)QuickGL.GetGLProcAddress("glTransformFeedbackVaryingsEXT");
        _glGetTransformFeedbackVaryingEXT = (delegate* unmanaged<uint, uint, int, int*, int*, uint*, byte*, void>)QuickGL.GetGLProcAddress("glGetTransformFeedbackVaryingEXT");
    }

    internal static void Unload()
    {
        _glBeginTransformFeedbackEXT = null;
        _glEndTransformFeedbackEXT = null;
        _glBindBufferRangeEXT = null;
        _glBindBufferOffsetEXT = null;
        _glBindBufferBaseEXT = null;
        _glTransformFeedbackVaryingsEXT = null;
        _glGetTransformFeedbackVaryingEXT = null;
    }
    #endregion

    #region Function wrappers
    public static void glBeginTransformFeedbackEXT(uint primitiveMode) { QGLFeature.VerifyFunc((nint)_glBeginTransformFeedbackEXT); _glBeginTransformFeedbackEXT(primitiveMode); }
    public static void glEndTransformFeedbackEXT() { QGLFeature.VerifyFunc((nint)_glEndTransformFeedbackEXT); _glEndTransformFeedbackEXT(); }
    public static void glBindBufferRangeEXT(uint target, uint index, uint buffer, nint offset, nint size) { QGLFeature.VerifyFunc((nint)_glBindBufferRangeEXT); _glBindBufferRangeEXT(target, index, buffer, offset, size); }
    public static void glBindBufferOffsetEXT(uint target, uint index, uint buffer, nint offset) { QGLFeature.VerifyFunc((nint)_glBindBufferOffsetEXT); _glBindBufferOffsetEXT(target, index, buffer, offset); }
    public static void glBindBufferBaseEXT(uint target, uint index, uint buffer) { QGLFeature.VerifyFunc((nint)_glBindBufferBaseEXT); _glBindBufferBaseEXT(target, index, buffer); }
    public static void glTransformFeedbackVaryingsEXT(uint program, int count, byte** varyings, uint bufferMode) { QGLFeature.VerifyFunc((nint)_glTransformFeedbackVaryingsEXT); _glTransformFeedbackVaryingsEXT(program, count, varyings, bufferMode); }
    public static void glGetTransformFeedbackVaryingEXT(uint program, uint index, int bufSize, int* length, int* size, uint* type, byte* name) { QGLFeature.VerifyFunc((nint)_glGetTransformFeedbackVaryingEXT); _glGetTransformFeedbackVaryingEXT(program, index, bufSize, length, size, type, name); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_EXT_transform_feedback", true, false);
}
