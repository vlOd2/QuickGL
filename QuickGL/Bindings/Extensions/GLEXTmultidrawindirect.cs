// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:43:43.9489449Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLEXTmultidrawindirect
{
    #region Constants
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, void*, int, int, void> _glMultiDrawArraysIndirectEXT = null;
    internal static delegate* unmanaged<uint, uint, void*, int, int, void> _glMultiDrawElementsIndirectEXT = null;

    internal static void Load()
    {
        _glMultiDrawArraysIndirectEXT = (delegate* unmanaged<uint, void*, int, int, void>)QuickGL.GetGLProcAddress("glMultiDrawArraysIndirectEXT");
        _glMultiDrawElementsIndirectEXT = (delegate* unmanaged<uint, uint, void*, int, int, void>)QuickGL.GetGLProcAddress("glMultiDrawElementsIndirectEXT");
    }

    internal static void Unload()
    {
        _glMultiDrawArraysIndirectEXT = null;
        _glMultiDrawElementsIndirectEXT = null;
    }
    #endregion

    #region Function wrappers
    public static void glMultiDrawArraysIndirectEXT(uint mode, void* indirect, int drawcount, int stride) { QGLFeature.VerifyFunc((nint)_glMultiDrawArraysIndirectEXT); _glMultiDrawArraysIndirectEXT(mode, indirect, drawcount, stride); }
    public static void glMultiDrawElementsIndirectEXT(uint mode, uint type, void* indirect, int drawcount, int stride) { QGLFeature.VerifyFunc((nint)_glMultiDrawElementsIndirectEXT); _glMultiDrawElementsIndirectEXT(mode, type, indirect, drawcount, stride); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_EXT_multi_draw_indirect", true, true);
}
