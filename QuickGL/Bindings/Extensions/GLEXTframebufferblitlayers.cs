// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:43:43.9311605Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLEXTframebufferblitlayers
{
    #region Constants
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<int, int, int, int, int, int, int, int, uint, uint, void> _glBlitFramebufferLayersEXT = null;
    internal static delegate* unmanaged<int, int, int, int, int, int, int, int, int, int, uint, uint, void> _glBlitFramebufferLayerEXT = null;

    internal static void Load()
    {
        _glBlitFramebufferLayersEXT = (delegate* unmanaged<int, int, int, int, int, int, int, int, uint, uint, void>)QuickGL.GetGLProcAddress("glBlitFramebufferLayersEXT");
        _glBlitFramebufferLayerEXT = (delegate* unmanaged<int, int, int, int, int, int, int, int, int, int, uint, uint, void>)QuickGL.GetGLProcAddress("glBlitFramebufferLayerEXT");
    }

    internal static void Unload()
    {
        _glBlitFramebufferLayersEXT = null;
        _glBlitFramebufferLayerEXT = null;
    }
    #endregion

    #region Function wrappers
    public static void glBlitFramebufferLayersEXT(int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, uint mask, uint filter) { QGLFeature.VerifyFunc((nint)_glBlitFramebufferLayersEXT); _glBlitFramebufferLayersEXT(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter); }
    public static void glBlitFramebufferLayerEXT(int srcX0, int srcY0, int srcX1, int srcY1, int srcLayer, int dstX0, int dstY0, int dstX1, int dstY1, int dstLayer, uint mask, uint filter) { QGLFeature.VerifyFunc((nint)_glBlitFramebufferLayerEXT); _glBlitFramebufferLayerEXT(srcX0, srcY0, srcX1, srcY1, srcLayer, dstX0, dstY0, dstX1, dstY1, dstLayer, mask, filter); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_EXT_framebuffer_blit_layers", true, false);
}
