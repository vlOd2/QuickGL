// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:41:03.1591990Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLARBtransformfeedback3
{
    #region Constants
    public const int GL_MAX_TRANSFORM_FEEDBACK_BUFFERS = 0x00008E70;
    public const int GL_MAX_VERTEX_STREAMS = 0x00008E71;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, uint, uint, void> _glDrawTransformFeedbackStream = null;
    internal static delegate* unmanaged<uint, uint, uint, void> _glBeginQueryIndexed = null;
    internal static delegate* unmanaged<uint, uint, void> _glEndQueryIndexed = null;
    internal static delegate* unmanaged<uint, uint, uint, int*, void> _glGetQueryIndexediv = null;

    internal static void Load()
    {
        _glDrawTransformFeedbackStream = (delegate* unmanaged<uint, uint, uint, void>)QuickGL.GetGLProcAddress("glDrawTransformFeedbackStream");
        _glBeginQueryIndexed = (delegate* unmanaged<uint, uint, uint, void>)QuickGL.GetGLProcAddress("glBeginQueryIndexed");
        _glEndQueryIndexed = (delegate* unmanaged<uint, uint, void>)QuickGL.GetGLProcAddress("glEndQueryIndexed");
        _glGetQueryIndexediv = (delegate* unmanaged<uint, uint, uint, int*, void>)QuickGL.GetGLProcAddress("glGetQueryIndexediv");
    }

    internal static void Unload()
    {
        _glDrawTransformFeedbackStream = null;
        _glBeginQueryIndexed = null;
        _glEndQueryIndexed = null;
        _glGetQueryIndexediv = null;
    }
    #endregion

    #region Function wrappers
    public static void glDrawTransformFeedbackStream(uint mode, uint id, uint stream) { QGLFeature.VerifyFunc((nint)_glDrawTransformFeedbackStream); _glDrawTransformFeedbackStream(mode, id, stream); }
    public static void glBeginQueryIndexed(uint target, uint index, uint id) { QGLFeature.VerifyFunc((nint)_glBeginQueryIndexed); _glBeginQueryIndexed(target, index, id); }
    public static void glEndQueryIndexed(uint target, uint index) { QGLFeature.VerifyFunc((nint)_glEndQueryIndexed); _glEndQueryIndexed(target, index); }
    public static void glGetQueryIndexediv(uint target, uint index, uint pname, int* @params) { QGLFeature.VerifyFunc((nint)_glGetQueryIndexediv); _glGetQueryIndexediv(target, index, pname, @params); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_ARB_transform_feedback3", true, false);
}
