// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:00:37.8943195Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLARBsync
{
    #region Constants
    public const int GL_SYNC_FLUSH_COMMANDS_BIT = 0x00000001;
    public const int GL_CONDITION_SATISFIED = 0x0000911C;
    public const int GL_ALREADY_SIGNALED = 0x0000911A;
    public const int GL_SIGNALED = 0x00009119;
    public const int GL_WAIT_FAILED = 0x0000911D;
    public const int GL_TIMEOUT_EXPIRED = 0x0000911B;
    public const int GL_UNSIGNALED = 0x00009118;
    public const int GL_SYNC_FENCE = 0x00009116;
    public const int GL_SYNC_STATUS = 0x00009114;
    public const int GL_OBJECT_TYPE = 0x00009112;
    public const ulong GL_TIMEOUT_IGNORED = 0xFFFFFFFFFFFFFFFF;
    public const int GL_SYNC_GPU_COMMANDS_COMPLETE = 0x00009117;
    public const int GL_SYNC_FLAGS = 0x00009115;
    public const int GL_SYNC_CONDITION = 0x00009113;
    public const int GL_MAX_SERVER_WAIT_TIMEOUT = 0x00009111;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<nint, uint, int, int*, int*, void> _glGetSynciv = null;
    internal static delegate* unmanaged<uint, long*, void> _glGetInteger64v = null;
    internal static delegate* unmanaged<nint, uint, ulong, uint> _glClientWaitSync = null;
    internal static delegate* unmanaged<nint, bool> _glIsSync = null;
    internal static delegate* unmanaged<nint, uint, ulong, void> _glWaitSync = null;
    internal static delegate* unmanaged<nint, void> _glDeleteSync = null;
    internal static delegate* unmanaged<uint, uint, nint> _glFenceSync = null;

    internal static void Load()
    {
        _glGetSynciv = (delegate* unmanaged<nint, uint, int, int*, int*, void>)QuickGL.GetGLProcAddress("glGetSynciv");
        _glGetInteger64v = (delegate* unmanaged<uint, long*, void>)QuickGL.GetGLProcAddress("glGetInteger64v");
        _glClientWaitSync = (delegate* unmanaged<nint, uint, ulong, uint>)QuickGL.GetGLProcAddress("glClientWaitSync");
        _glIsSync = (delegate* unmanaged<nint, bool>)QuickGL.GetGLProcAddress("glIsSync");
        _glWaitSync = (delegate* unmanaged<nint, uint, ulong, void>)QuickGL.GetGLProcAddress("glWaitSync");
        _glDeleteSync = (delegate* unmanaged<nint, void>)QuickGL.GetGLProcAddress("glDeleteSync");
        _glFenceSync = (delegate* unmanaged<uint, uint, nint>)QuickGL.GetGLProcAddress("glFenceSync");
    }

    internal static void Unload()
    {
        _glGetSynciv = null;
        _glGetInteger64v = null;
        _glClientWaitSync = null;
        _glIsSync = null;
        _glWaitSync = null;
        _glDeleteSync = null;
        _glFenceSync = null;
    }
    #endregion

    #region Function wrappers
    public static void glGetSynciv(nint sync, uint pname, int count, int* length, int* values) { QGLFeature.VerifyFunc((nint)_glGetSynciv); _glGetSynciv(sync, pname, count, length, values); }
    public static void glGetInteger64v(uint pname, long* data) { QGLFeature.VerifyFunc((nint)_glGetInteger64v); _glGetInteger64v(pname, data); }
    public static uint glClientWaitSync(nint sync, uint flags, ulong timeout) { QGLFeature.VerifyFunc((nint)_glClientWaitSync); return _glClientWaitSync(sync, flags, timeout); }
    public static bool glIsSync(nint sync) { QGLFeature.VerifyFunc((nint)_glIsSync); return _glIsSync(sync); }
    public static void glWaitSync(nint sync, uint flags, ulong timeout) { QGLFeature.VerifyFunc((nint)_glWaitSync); _glWaitSync(sync, flags, timeout); }
    public static void glDeleteSync(nint sync) { QGLFeature.VerifyFunc((nint)_glDeleteSync); _glDeleteSync(sync); }
    public static nint glFenceSync(uint condition, uint flags) { QGLFeature.VerifyFunc((nint)_glFenceSync); return _glFenceSync(condition, flags); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_ARB_sync", true, false);
}
