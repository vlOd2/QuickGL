// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:43:43.8800356Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLARBvertexarrayobject
{
    #region Constants
    public const int GL_VERTEX_ARRAY_BINDING = 0x000085B5;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, void> _glBindVertexArray = null;
    internal static delegate* unmanaged<int, uint*, void> _glDeleteVertexArrays = null;
    internal static delegate* unmanaged<int, uint*, void> _glGenVertexArrays = null;
    internal static delegate* unmanaged<uint, bool> _glIsVertexArray = null;

    internal static void Load()
    {
        _glBindVertexArray = (delegate* unmanaged<uint, void>)QuickGL.GetGLProcAddress("glBindVertexArray");
        _glDeleteVertexArrays = (delegate* unmanaged<int, uint*, void>)QuickGL.GetGLProcAddress("glDeleteVertexArrays");
        _glGenVertexArrays = (delegate* unmanaged<int, uint*, void>)QuickGL.GetGLProcAddress("glGenVertexArrays");
        _glIsVertexArray = (delegate* unmanaged<uint, bool>)QuickGL.GetGLProcAddress("glIsVertexArray");
    }

    internal static void Unload()
    {
        _glBindVertexArray = null;
        _glDeleteVertexArrays = null;
        _glGenVertexArrays = null;
        _glIsVertexArray = null;
    }
    #endregion

    #region Function wrappers
    public static void glBindVertexArray(uint array) { QGLFeature.VerifyFunc((nint)_glBindVertexArray); _glBindVertexArray(array); }
    public static void glDeleteVertexArrays(int n, uint* arrays) { QGLFeature.VerifyFunc((nint)_glDeleteVertexArrays); _glDeleteVertexArrays(n, arrays); }
    public static void glGenVertexArrays(int n, uint* arrays) { QGLFeature.VerifyFunc((nint)_glGenVertexArrays); _glGenVertexArrays(n, arrays); }
    public static bool glIsVertexArray(uint array) { QGLFeature.VerifyFunc((nint)_glIsVertexArray); return _glIsVertexArray(array); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_ARB_vertex_array_object", true, false);
}
