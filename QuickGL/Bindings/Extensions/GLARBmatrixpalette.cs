// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:00:37.8326293Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLARBmatrixpalette
{
    #region Constants
    public const int GL_MATRIX_INDEX_ARRAY_STRIDE_ARB = 0x00008848;
    public const int GL_MATRIX_INDEX_ARRAY_POINTER_ARB = 0x00008849;
    public const int GL_MATRIX_INDEX_ARRAY_TYPE_ARB = 0x00008847;
    public const int GL_MATRIX_INDEX_ARRAY_SIZE_ARB = 0x00008846;
    public const int GL_CURRENT_MATRIX_INDEX_ARB = 0x00008845;
    public const int GL_MATRIX_INDEX_ARRAY_ARB = 0x00008844;
    public const int GL_CURRENT_PALETTE_MATRIX_ARB = 0x00008843;
    public const int GL_MAX_PALETTE_MATRICES_ARB = 0x00008842;
    public const int GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB = 0x00008841;
    public const int GL_MATRIX_PALETTE_ARB = 0x00008840;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<int, uint, int, void*, void> _glMatrixIndexPointerARB = null;
    internal static delegate* unmanaged<int, uint*, void> _glMatrixIndexuivARB = null;
    internal static delegate* unmanaged<int, ushort*, void> _glMatrixIndexusvARB = null;
    internal static delegate* unmanaged<int, byte*, void> _glMatrixIndexubvARB = null;
    internal static delegate* unmanaged<int, void> _glCurrentPaletteMatrixARB = null;

    internal static void Load()
    {
        _glMatrixIndexPointerARB = (delegate* unmanaged<int, uint, int, void*, void>)QuickGL.GetGLProcAddress("glMatrixIndexPointerARB");
        _glMatrixIndexuivARB = (delegate* unmanaged<int, uint*, void>)QuickGL.GetGLProcAddress("glMatrixIndexuivARB");
        _glMatrixIndexusvARB = (delegate* unmanaged<int, ushort*, void>)QuickGL.GetGLProcAddress("glMatrixIndexusvARB");
        _glMatrixIndexubvARB = (delegate* unmanaged<int, byte*, void>)QuickGL.GetGLProcAddress("glMatrixIndexubvARB");
        _glCurrentPaletteMatrixARB = (delegate* unmanaged<int, void>)QuickGL.GetGLProcAddress("glCurrentPaletteMatrixARB");
    }

    internal static void Unload()
    {
        _glMatrixIndexPointerARB = null;
        _glMatrixIndexuivARB = null;
        _glMatrixIndexusvARB = null;
        _glMatrixIndexubvARB = null;
        _glCurrentPaletteMatrixARB = null;
    }
    #endregion

    #region Function wrappers
    public static void glMatrixIndexPointerARB(int size, uint type, int stride, void* pointer) { QGLFeature.VerifyFunc((nint)_glMatrixIndexPointerARB); _glMatrixIndexPointerARB(size, type, stride, pointer); }
    public static void glMatrixIndexuivARB(int size, uint* indices) { QGLFeature.VerifyFunc((nint)_glMatrixIndexuivARB); _glMatrixIndexuivARB(size, indices); }
    public static void glMatrixIndexusvARB(int size, ushort* indices) { QGLFeature.VerifyFunc((nint)_glMatrixIndexusvARB); _glMatrixIndexusvARB(size, indices); }
    public static void glMatrixIndexubvARB(int size, byte* indices) { QGLFeature.VerifyFunc((nint)_glMatrixIndexubvARB); _glMatrixIndexubvARB(size, indices); }
    public static void glCurrentPaletteMatrixARB(int index) { QGLFeature.VerifyFunc((nint)_glCurrentPaletteMatrixARB); _glCurrentPaletteMatrixARB(index); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_ARB_matrix_palette", true, false);
}
