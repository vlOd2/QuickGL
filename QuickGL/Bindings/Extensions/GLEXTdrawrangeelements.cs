// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:43:43.9282497Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings.Extensions;

public static unsafe class GLEXTdrawrangeelements
{
    #region Constants
    public const int GL_MAX_ELEMENTS_VERTICES_EXT = 0x000080E8;
    public const int GL_MAX_ELEMENTS_INDICES_EXT = 0x000080E9;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, uint, uint, int, uint, void*, void> _glDrawRangeElementsEXT = null;

    internal static void Load()
    {
        _glDrawRangeElementsEXT = (delegate* unmanaged<uint, uint, uint, int, uint, void*, void>)QuickGL.GetGLProcAddress("glDrawRangeElementsEXT");
    }

    internal static void Unload()
    {
        _glDrawRangeElementsEXT = null;
    }
    #endregion

    #region Function wrappers
    public static void glDrawRangeElementsEXT(uint mode, uint start, uint end, int count, uint type, void* indices) { QGLFeature.VerifyFunc((nint)_glDrawRangeElementsEXT); _glDrawRangeElementsEXT(mode, start, end, count, type, indices); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_EXT_draw_range_elements", true, false);
}
