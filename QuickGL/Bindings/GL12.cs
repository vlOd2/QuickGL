// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T18:55:43.1397549Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings;

public static unsafe class GL12
{
    #region Constants
    public const int GL_ALIASED_POINT_SIZE_RANGE = 0x0000846D;
    public const int GL_SEPARATE_SPECULAR_COLOR = 0x000081FA;
    public const int GL_SINGLE_COLOR = 0x000081F9;
    public const int GL_LIGHT_MODEL_COLOR_CONTROL = 0x000081F8;
    public const int GL_RESCALE_NORMAL = 0x0000803A;
    public const int GL_ALIASED_LINE_WIDTH_RANGE = 0x0000846E;
    public const int GL_SMOOTH_LINE_WIDTH_GRANULARITY = 0x00000B23;
    public const int GL_SMOOTH_LINE_WIDTH_RANGE = 0x00000B22;
    public const int GL_SMOOTH_POINT_SIZE_GRANULARITY = 0x00000B13;
    public const int GL_SMOOTH_POINT_SIZE_RANGE = 0x00000B12;
    public const int GL_TEXTURE_MAX_LEVEL = 0x0000813D;
    public const int GL_TEXTURE_BASE_LEVEL = 0x0000813C;
    public const int GL_TEXTURE_MAX_LOD = 0x0000813B;
    public const int GL_TEXTURE_MIN_LOD = 0x0000813A;
    public const int GL_CLAMP_TO_EDGE = 0x0000812F;
    public const int GL_MAX_ELEMENTS_INDICES = 0x000080E9;
    public const int GL_MAX_ELEMENTS_VERTICES = 0x000080E8;
    public const int GL_BGRA = 0x000080E1;
    public const int GL_BGR = 0x000080E0;
    public const int GL_UNSIGNED_INT_2_10_10_10_REV = 0x00008368;
    public const int GL_UNSIGNED_INT_8_8_8_8_REV = 0x00008367;
    public const int GL_UNSIGNED_SHORT_1_5_5_5_REV = 0x00008366;
    public const int GL_UNSIGNED_SHORT_4_4_4_4_REV = 0x00008365;
    public const int GL_UNSIGNED_SHORT_5_6_5_REV = 0x00008364;
    public const int GL_UNSIGNED_SHORT_5_6_5 = 0x00008363;
    public const int GL_UNSIGNED_BYTE_2_3_3_REV = 0x00008362;
    public const int GL_MAX_3D_TEXTURE_SIZE = 0x00008073;
    public const int GL_TEXTURE_WRAP_R = 0x00008072;
    public const int GL_TEXTURE_DEPTH = 0x00008071;
    public const int GL_PROXY_TEXTURE_3D = 0x00008070;
    public const int GL_TEXTURE_3D = 0x0000806F;
    public const int GL_UNPACK_IMAGE_HEIGHT = 0x0000806E;
    public const int GL_UNPACK_SKIP_IMAGES = 0x0000806D;
    public const int GL_PACK_IMAGE_HEIGHT = 0x0000806C;
    public const int GL_PACK_SKIP_IMAGES = 0x0000806B;
    public const int GL_TEXTURE_BINDING_3D = 0x0000806A;
    public const int GL_UNSIGNED_INT_10_10_10_2 = 0x00008036;
    public const int GL_UNSIGNED_INT_8_8_8_8 = 0x00008035;
    public const int GL_UNSIGNED_SHORT_5_5_5_1 = 0x00008034;
    public const int GL_UNSIGNED_SHORT_4_4_4_4 = 0x00008033;
    public const int GL_UNSIGNED_BYTE_3_3_2 = 0x00008032;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, int, int, int, int, int, int, int, int, void> _glCopyTexSubImage3D = null;
    internal static delegate* unmanaged<uint, int, int, int, int, int, int, int, uint, uint, void*, void> _glTexSubImage3D = null;
    internal static delegate* unmanaged<uint, int, int, int, int, int, int, uint, uint, void*, void> _glTexImage3D = null;
    internal static delegate* unmanaged<uint, uint, uint, int, uint, void*, void> _glDrawRangeElements = null;

    internal static void Load()
    {
        _glCopyTexSubImage3D = (delegate* unmanaged<uint, int, int, int, int, int, int, int, int, void>)QuickGL.GetGLProcAddress("glCopyTexSubImage3D");
        _glTexSubImage3D = (delegate* unmanaged<uint, int, int, int, int, int, int, int, uint, uint, void*, void>)QuickGL.GetGLProcAddress("glTexSubImage3D");
        _glTexImage3D = (delegate* unmanaged<uint, int, int, int, int, int, int, uint, uint, void*, void>)QuickGL.GetGLProcAddress("glTexImage3D");
        _glDrawRangeElements = (delegate* unmanaged<uint, uint, uint, int, uint, void*, void>)QuickGL.GetGLProcAddress("glDrawRangeElements");
    }

    internal static void Unload()
    {
        _glCopyTexSubImage3D = null;
        _glTexSubImage3D = null;
        _glTexImage3D = null;
        _glDrawRangeElements = null;
    }
    #endregion

    #region Function wrappers
    public static void glCopyTexSubImage3D(uint target, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height) { QGLFeature.VerifyFunc((nint)_glCopyTexSubImage3D); _glCopyTexSubImage3D(target, level, xoffset, yoffset, zoffset, x, y, width, height); }
    public static void glTexSubImage3D(uint target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, uint format, uint type, void* pixels) { QGLFeature.VerifyFunc((nint)_glTexSubImage3D); _glTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels); }
    public static void glTexImage3D(uint target, int level, int internalformat, int width, int height, int depth, int border, uint format, uint type, void* pixels) { QGLFeature.VerifyFunc((nint)_glTexImage3D); _glTexImage3D(target, level, internalformat, width, height, depth, border, format, type, pixels); }
    public static void glDrawRangeElements(uint mode, uint start, uint end, int count, uint type, void* indices) { QGLFeature.VerifyFunc((nint)_glDrawRangeElements); _glDrawRangeElements(mode, start, end, count, type, indices); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_VERSION_1_2", false, false);
}
