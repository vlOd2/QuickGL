// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:43:43.7232603Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings;

public static unsafe class GL21
{
    #region Constants
    public const int GL_PIXEL_PACK_BUFFER = 0x000088EB;
    public const int GL_PIXEL_UNPACK_BUFFER = 0x000088EC;
    public const int GL_PIXEL_PACK_BUFFER_BINDING = 0x000088ED;
    public const int GL_PIXEL_UNPACK_BUFFER_BINDING = 0x000088EF;
    public const int GL_FLOAT_MAT2x3 = 0x00008B65;
    public const int GL_FLOAT_MAT2x4 = 0x00008B66;
    public const int GL_FLOAT_MAT3x2 = 0x00008B67;
    public const int GL_FLOAT_MAT3x4 = 0x00008B68;
    public const int GL_FLOAT_MAT4x2 = 0x00008B69;
    public const int GL_FLOAT_MAT4x3 = 0x00008B6A;
    public const int GL_SRGB = 0x00008C40;
    public const int GL_SRGB8 = 0x00008C41;
    public const int GL_SRGB_ALPHA = 0x00008C42;
    public const int GL_SRGB8_ALPHA8 = 0x00008C43;
    public const int GL_COMPRESSED_SRGB = 0x00008C48;
    public const int GL_COMPRESSED_SRGB_ALPHA = 0x00008C49;
    public const int GL_CURRENT_RASTER_SECONDARY_COLOR = 0x0000845F;
    public const int GL_SLUMINANCE_ALPHA = 0x00008C44;
    public const int GL_SLUMINANCE8_ALPHA8 = 0x00008C45;
    public const int GL_SLUMINANCE = 0x00008C46;
    public const int GL_SLUMINANCE8 = 0x00008C47;
    public const int GL_COMPRESSED_SLUMINANCE = 0x00008C4A;
    public const int GL_COMPRESSED_SLUMINANCE_ALPHA = 0x00008C4B;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<int, int, bool, float*, void> _glUniformMatrix2x3fv = null;
    internal static delegate* unmanaged<int, int, bool, float*, void> _glUniformMatrix3x2fv = null;
    internal static delegate* unmanaged<int, int, bool, float*, void> _glUniformMatrix2x4fv = null;
    internal static delegate* unmanaged<int, int, bool, float*, void> _glUniformMatrix4x2fv = null;
    internal static delegate* unmanaged<int, int, bool, float*, void> _glUniformMatrix3x4fv = null;
    internal static delegate* unmanaged<int, int, bool, float*, void> _glUniformMatrix4x3fv = null;

    internal static void Load()
    {
        _glUniformMatrix2x3fv = (delegate* unmanaged<int, int, bool, float*, void>)QuickGL.GetGLProcAddress("glUniformMatrix2x3fv");
        _glUniformMatrix3x2fv = (delegate* unmanaged<int, int, bool, float*, void>)QuickGL.GetGLProcAddress("glUniformMatrix3x2fv");
        _glUniformMatrix2x4fv = (delegate* unmanaged<int, int, bool, float*, void>)QuickGL.GetGLProcAddress("glUniformMatrix2x4fv");
        _glUniformMatrix4x2fv = (delegate* unmanaged<int, int, bool, float*, void>)QuickGL.GetGLProcAddress("glUniformMatrix4x2fv");
        _glUniformMatrix3x4fv = (delegate* unmanaged<int, int, bool, float*, void>)QuickGL.GetGLProcAddress("glUniformMatrix3x4fv");
        _glUniformMatrix4x3fv = (delegate* unmanaged<int, int, bool, float*, void>)QuickGL.GetGLProcAddress("glUniformMatrix4x3fv");
    }

    internal static void Unload()
    {
        _glUniformMatrix2x3fv = null;
        _glUniformMatrix3x2fv = null;
        _glUniformMatrix2x4fv = null;
        _glUniformMatrix4x2fv = null;
        _glUniformMatrix3x4fv = null;
        _glUniformMatrix4x3fv = null;
    }
    #endregion

    #region Function wrappers
    public static void glUniformMatrix2x3fv(int location, int count, bool transpose, float* value) { QGLFeature.VerifyFunc((nint)_glUniformMatrix2x3fv); _glUniformMatrix2x3fv(location, count, transpose, value); }
    public static void glUniformMatrix3x2fv(int location, int count, bool transpose, float* value) { QGLFeature.VerifyFunc((nint)_glUniformMatrix3x2fv); _glUniformMatrix3x2fv(location, count, transpose, value); }
    public static void glUniformMatrix2x4fv(int location, int count, bool transpose, float* value) { QGLFeature.VerifyFunc((nint)_glUniformMatrix2x4fv); _glUniformMatrix2x4fv(location, count, transpose, value); }
    public static void glUniformMatrix4x2fv(int location, int count, bool transpose, float* value) { QGLFeature.VerifyFunc((nint)_glUniformMatrix4x2fv); _glUniformMatrix4x2fv(location, count, transpose, value); }
    public static void glUniformMatrix3x4fv(int location, int count, bool transpose, float* value) { QGLFeature.VerifyFunc((nint)_glUniformMatrix3x4fv); _glUniformMatrix3x4fv(location, count, transpose, value); }
    public static void glUniformMatrix4x3fv(int location, int count, bool transpose, float* value) { QGLFeature.VerifyFunc((nint)_glUniformMatrix4x3fv); _glUniformMatrix4x3fv(location, count, transpose, value); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_VERSION_2_1", false, false);
}
