// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T20:04:55.9167780Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;
using QuickGLNS.Bindings.Extensions;

namespace QuickGLNS.Bindings;

public static unsafe class GLBindingsManager
{
    internal static void Load()
    {
        if (QuickGL.IsFeatureSupported(GL10.FeatureInfo)) GL10.Load();
        if (QuickGL.IsFeatureSupported(GL11.FeatureInfo)) GL11.Load();
        if (QuickGL.IsFeatureSupported(GL12.FeatureInfo)) GL12.Load();
        if (QuickGL.IsFeatureSupported(GL13.FeatureInfo)) GL13.Load();
        if (QuickGL.IsFeatureSupported(GL14.FeatureInfo)) GL14.Load();
        if (QuickGL.IsFeatureSupported(GL15.FeatureInfo)) GL15.Load();
        if (QuickGL.IsFeatureSupported(GL20.FeatureInfo)) GL20.Load();
        if (QuickGL.IsFeatureSupported(GL21.FeatureInfo)) GL21.Load();
        if (QuickGL.IsFeatureSupported(GL30.FeatureInfo)) GL30.Load();
        if (QuickGL.IsFeatureSupported(GL31.FeatureInfo)) GL31.Load();
        if (QuickGL.IsFeatureSupported(GL32.FeatureInfo)) GL32.Load();
        if (QuickGL.IsFeatureSupported(GL33.FeatureInfo)) GL33.Load();
        if (QuickGL.IsFeatureSupported(GL40.FeatureInfo)) GL40.Load();
        if (QuickGL.IsFeatureSupported(GL41.FeatureInfo)) GL41.Load();
        if (QuickGL.IsFeatureSupported(GL42.FeatureInfo)) GL42.Load();
        if (QuickGL.IsFeatureSupported(GL43.FeatureInfo)) GL43.Load();
        if (QuickGL.IsFeatureSupported(GL44.FeatureInfo)) GL44.Load();
        if (QuickGL.IsFeatureSupported(GL45.FeatureInfo)) GL45.Load();
        if (QuickGL.IsFeatureSupported(GL46.FeatureInfo)) GL46.Load();
        if (QuickGL.IsFeatureSupported(GLESCM10.FeatureInfo)) GLESCM10.Load();
        if (QuickGL.IsFeatureSupported(GLES20.FeatureInfo)) GLES20.Load();
        if (QuickGL.IsFeatureSupported(GLES30.FeatureInfo)) GLES30.Load();
        if (QuickGL.IsFeatureSupported(GLES31.FeatureInfo)) GLES31.Load();
        if (QuickGL.IsFeatureSupported(GLES32.FeatureInfo)) GLES32.Load();
        if (QuickGL.IsFeatureSupported(GLSC20.FeatureInfo)) GLSC20.Load();
        if (QuickGL.IsFeatureSupported(GLARBES2compatibility.FeatureInfo)) GLARBES2compatibility.Load();
        if (QuickGL.IsFeatureSupported(GLARBES31compatibility.FeatureInfo)) GLARBES31compatibility.Load();
        if (QuickGL.IsFeatureSupported(GLARBES32compatibility.FeatureInfo)) GLARBES32compatibility.Load();
        if (QuickGL.IsFeatureSupported(GLARBES3compatibility.FeatureInfo)) GLARBES3compatibility.Load();
        if (QuickGL.IsFeatureSupported(GLARBarraysofarrays.FeatureInfo)) GLARBarraysofarrays.Load();
        if (QuickGL.IsFeatureSupported(GLARBbaseinstance.FeatureInfo)) GLARBbaseinstance.Load();
        if (QuickGL.IsFeatureSupported(GLARBbindlesstexture.FeatureInfo)) GLARBbindlesstexture.Load();
        if (QuickGL.IsFeatureSupported(GLARBblendfuncextended.FeatureInfo)) GLARBblendfuncextended.Load();
        if (QuickGL.IsFeatureSupported(GLARBbufferstorage.FeatureInfo)) GLARBbufferstorage.Load();
        if (QuickGL.IsFeatureSupported(GLARBclevent.FeatureInfo)) GLARBclevent.Load();
        if (QuickGL.IsFeatureSupported(GLARBclearbufferobject.FeatureInfo)) GLARBclearbufferobject.Load();
        if (QuickGL.IsFeatureSupported(GLARBcleartexture.FeatureInfo)) GLARBcleartexture.Load();
        if (QuickGL.IsFeatureSupported(GLARBclipcontrol.FeatureInfo)) GLARBclipcontrol.Load();
        if (QuickGL.IsFeatureSupported(GLARBcolorbufferfloat.FeatureInfo)) GLARBcolorbufferfloat.Load();
        if (QuickGL.IsFeatureSupported(GLARBcompatibility.FeatureInfo)) GLARBcompatibility.Load();
        if (QuickGL.IsFeatureSupported(GLARBcompressedtexturepixelstorage.FeatureInfo)) GLARBcompressedtexturepixelstorage.Load();
        if (QuickGL.IsFeatureSupported(GLARBcomputeshader.FeatureInfo)) GLARBcomputeshader.Load();
        if (QuickGL.IsFeatureSupported(GLARBcomputevariablegroupsize.FeatureInfo)) GLARBcomputevariablegroupsize.Load();
        if (QuickGL.IsFeatureSupported(GLARBconditionalrenderinverted.FeatureInfo)) GLARBconditionalrenderinverted.Load();
        if (QuickGL.IsFeatureSupported(GLARBconservativedepth.FeatureInfo)) GLARBconservativedepth.Load();
        if (QuickGL.IsFeatureSupported(GLARBcopybuffer.FeatureInfo)) GLARBcopybuffer.Load();
        if (QuickGL.IsFeatureSupported(GLARBcopyimage.FeatureInfo)) GLARBcopyimage.Load();
        if (QuickGL.IsFeatureSupported(GLARBculldistance.FeatureInfo)) GLARBculldistance.Load();
        if (QuickGL.IsFeatureSupported(GLARBdebugoutput.FeatureInfo)) GLARBdebugoutput.Load();
        if (QuickGL.IsFeatureSupported(GLARBdepthbufferfloat.FeatureInfo)) GLARBdepthbufferfloat.Load();
        if (QuickGL.IsFeatureSupported(GLARBdepthclamp.FeatureInfo)) GLARBdepthclamp.Load();
        if (QuickGL.IsFeatureSupported(GLARBdepthtexture.FeatureInfo)) GLARBdepthtexture.Load();
        if (QuickGL.IsFeatureSupported(GLARBderivativecontrol.FeatureInfo)) GLARBderivativecontrol.Load();
        if (QuickGL.IsFeatureSupported(GLARBdirectstateaccess.FeatureInfo)) GLARBdirectstateaccess.Load();
        if (QuickGL.IsFeatureSupported(GLARBdrawbuffers.FeatureInfo)) GLARBdrawbuffers.Load();
        if (QuickGL.IsFeatureSupported(GLARBdrawbuffersblend.FeatureInfo)) GLARBdrawbuffersblend.Load();
        if (QuickGL.IsFeatureSupported(GLARBdrawelementsbasevertex.FeatureInfo)) GLARBdrawelementsbasevertex.Load();
        if (QuickGL.IsFeatureSupported(GLARBdrawindirect.FeatureInfo)) GLARBdrawindirect.Load();
        if (QuickGL.IsFeatureSupported(GLARBdrawinstanced.FeatureInfo)) GLARBdrawinstanced.Load();
        if (QuickGL.IsFeatureSupported(GLARBenhancedlayouts.FeatureInfo)) GLARBenhancedlayouts.Load();
        if (QuickGL.IsFeatureSupported(GLARBexplicitattriblocation.FeatureInfo)) GLARBexplicitattriblocation.Load();
        if (QuickGL.IsFeatureSupported(GLARBexplicituniformlocation.FeatureInfo)) GLARBexplicituniformlocation.Load();
        if (QuickGL.IsFeatureSupported(GLARBfragmentcoordconventions.FeatureInfo)) GLARBfragmentcoordconventions.Load();
        if (QuickGL.IsFeatureSupported(GLARBfragmentlayerviewport.FeatureInfo)) GLARBfragmentlayerviewport.Load();
        if (QuickGL.IsFeatureSupported(GLARBfragmentprogram.FeatureInfo)) GLARBfragmentprogram.Load();
        if (QuickGL.IsFeatureSupported(GLARBfragmentprogramshadow.FeatureInfo)) GLARBfragmentprogramshadow.Load();
        if (QuickGL.IsFeatureSupported(GLARBfragmentshader.FeatureInfo)) GLARBfragmentshader.Load();
        if (QuickGL.IsFeatureSupported(GLARBfragmentshaderinterlock.FeatureInfo)) GLARBfragmentshaderinterlock.Load();
        if (QuickGL.IsFeatureSupported(GLARBframebuffernoattachments.FeatureInfo)) GLARBframebuffernoattachments.Load();
        if (QuickGL.IsFeatureSupported(GLARBframebufferobject.FeatureInfo)) GLARBframebufferobject.Load();
        if (QuickGL.IsFeatureSupported(GLARBframebuffersRGB.FeatureInfo)) GLARBframebuffersRGB.Load();
        if (QuickGL.IsFeatureSupported(GLARBgeometryshader4.FeatureInfo)) GLARBgeometryshader4.Load();
        if (QuickGL.IsFeatureSupported(GLARBgetprogrambinary.FeatureInfo)) GLARBgetprogrambinary.Load();
        if (QuickGL.IsFeatureSupported(GLARBgettexturesubimage.FeatureInfo)) GLARBgettexturesubimage.Load();
        if (QuickGL.IsFeatureSupported(GLARBglspirv.FeatureInfo)) GLARBglspirv.Load();
        if (QuickGL.IsFeatureSupported(GLARBgpushader5.FeatureInfo)) GLARBgpushader5.Load();
        if (QuickGL.IsFeatureSupported(GLARBgpushaderfp64.FeatureInfo)) GLARBgpushaderfp64.Load();
        if (QuickGL.IsFeatureSupported(GLARBgpushaderint64.FeatureInfo)) GLARBgpushaderint64.Load();
        if (QuickGL.IsFeatureSupported(GLARBhalffloatpixel.FeatureInfo)) GLARBhalffloatpixel.Load();
        if (QuickGL.IsFeatureSupported(GLARBhalffloatvertex.FeatureInfo)) GLARBhalffloatvertex.Load();
        if (QuickGL.IsFeatureSupported(GLARBimaging.FeatureInfo)) GLARBimaging.Load();
        if (QuickGL.IsFeatureSupported(GLARBindirectparameters.FeatureInfo)) GLARBindirectparameters.Load();
        if (QuickGL.IsFeatureSupported(GLARBinstancedarrays.FeatureInfo)) GLARBinstancedarrays.Load();
        if (QuickGL.IsFeatureSupported(GLARBinternalformatquery.FeatureInfo)) GLARBinternalformatquery.Load();
        if (QuickGL.IsFeatureSupported(GLARBinternalformatquery2.FeatureInfo)) GLARBinternalformatquery2.Load();
        if (QuickGL.IsFeatureSupported(GLARBinvalidatesubdata.FeatureInfo)) GLARBinvalidatesubdata.Load();
        if (QuickGL.IsFeatureSupported(GLARBmapbufferalignment.FeatureInfo)) GLARBmapbufferalignment.Load();
        if (QuickGL.IsFeatureSupported(GLARBmapbufferrange.FeatureInfo)) GLARBmapbufferrange.Load();
        if (QuickGL.IsFeatureSupported(GLARBmatrixpalette.FeatureInfo)) GLARBmatrixpalette.Load();
        if (QuickGL.IsFeatureSupported(GLARBmultibind.FeatureInfo)) GLARBmultibind.Load();
        if (QuickGL.IsFeatureSupported(GLARBmultidrawindirect.FeatureInfo)) GLARBmultidrawindirect.Load();
        if (QuickGL.IsFeatureSupported(GLARBmultisample.FeatureInfo)) GLARBmultisample.Load();
        if (QuickGL.IsFeatureSupported(GLARBmultitexture.FeatureInfo)) GLARBmultitexture.Load();
        if (QuickGL.IsFeatureSupported(GLARBocclusionquery.FeatureInfo)) GLARBocclusionquery.Load();
        if (QuickGL.IsFeatureSupported(GLARBocclusionquery2.FeatureInfo)) GLARBocclusionquery2.Load();
        if (QuickGL.IsFeatureSupported(GLARBparallelshadercompile.FeatureInfo)) GLARBparallelshadercompile.Load();
        if (QuickGL.IsFeatureSupported(GLARBpipelinestatisticsquery.FeatureInfo)) GLARBpipelinestatisticsquery.Load();
        if (QuickGL.IsFeatureSupported(GLARBpixelbufferobject.FeatureInfo)) GLARBpixelbufferobject.Load();
        if (QuickGL.IsFeatureSupported(GLARBpointparameters.FeatureInfo)) GLARBpointparameters.Load();
        if (QuickGL.IsFeatureSupported(GLARBpointsprite.FeatureInfo)) GLARBpointsprite.Load();
        if (QuickGL.IsFeatureSupported(GLARBpolygonoffsetclamp.FeatureInfo)) GLARBpolygonoffsetclamp.Load();
        if (QuickGL.IsFeatureSupported(GLARBpostdepthcoverage.FeatureInfo)) GLARBpostdepthcoverage.Load();
        if (QuickGL.IsFeatureSupported(GLARBprograminterfacequery.FeatureInfo)) GLARBprograminterfacequery.Load();
        if (QuickGL.IsFeatureSupported(GLARBprovokingvertex.FeatureInfo)) GLARBprovokingvertex.Load();
        if (QuickGL.IsFeatureSupported(GLARBquerybufferobject.FeatureInfo)) GLARBquerybufferobject.Load();
        if (QuickGL.IsFeatureSupported(GLARBrobustbufferaccessbehavior.FeatureInfo)) GLARBrobustbufferaccessbehavior.Load();
        if (QuickGL.IsFeatureSupported(GLARBrobustness.FeatureInfo)) GLARBrobustness.Load();
        if (QuickGL.IsFeatureSupported(GLARBrobustnessisolation.FeatureInfo)) GLARBrobustnessisolation.Load();
        if (QuickGL.IsFeatureSupported(GLARBsamplelocations.FeatureInfo)) GLARBsamplelocations.Load();
        if (QuickGL.IsFeatureSupported(GLARBsampleshading.FeatureInfo)) GLARBsampleshading.Load();
        if (QuickGL.IsFeatureSupported(GLARBsamplerobjects.FeatureInfo)) GLARBsamplerobjects.Load();
        if (QuickGL.IsFeatureSupported(GLARBseamlesscubemap.FeatureInfo)) GLARBseamlesscubemap.Load();
        if (QuickGL.IsFeatureSupported(GLARBseamlesscubemappertexture.FeatureInfo)) GLARBseamlesscubemappertexture.Load();
        if (QuickGL.IsFeatureSupported(GLARBseparateshaderobjects.FeatureInfo)) GLARBseparateshaderobjects.Load();
        if (QuickGL.IsFeatureSupported(GLARBshaderatomiccounterops.FeatureInfo)) GLARBshaderatomiccounterops.Load();
        if (QuickGL.IsFeatureSupported(GLARBshaderatomiccounters.FeatureInfo)) GLARBshaderatomiccounters.Load();
        if (QuickGL.IsFeatureSupported(GLARBshaderballot.FeatureInfo)) GLARBshaderballot.Load();
        if (QuickGL.IsFeatureSupported(GLARBshaderbitencoding.FeatureInfo)) GLARBshaderbitencoding.Load();
        if (QuickGL.IsFeatureSupported(GLARBshaderclock.FeatureInfo)) GLARBshaderclock.Load();
        if (QuickGL.IsFeatureSupported(GLARBshaderdrawparameters.FeatureInfo)) GLARBshaderdrawparameters.Load();
        if (QuickGL.IsFeatureSupported(GLARBshadergroupvote.FeatureInfo)) GLARBshadergroupvote.Load();
        if (QuickGL.IsFeatureSupported(GLARBshaderimageloadstore.FeatureInfo)) GLARBshaderimageloadstore.Load();
        if (QuickGL.IsFeatureSupported(GLARBshaderimagesize.FeatureInfo)) GLARBshaderimagesize.Load();
        if (QuickGL.IsFeatureSupported(GLARBshaderobjects.FeatureInfo)) GLARBshaderobjects.Load();
        if (QuickGL.IsFeatureSupported(GLARBshaderprecision.FeatureInfo)) GLARBshaderprecision.Load();
        if (QuickGL.IsFeatureSupported(GLARBshaderstencilexport.FeatureInfo)) GLARBshaderstencilexport.Load();
        if (QuickGL.IsFeatureSupported(GLARBshaderstoragebufferobject.FeatureInfo)) GLARBshaderstoragebufferobject.Load();
        if (QuickGL.IsFeatureSupported(GLARBshadersubroutine.FeatureInfo)) GLARBshadersubroutine.Load();
        if (QuickGL.IsFeatureSupported(GLARBshadertextureimagesamples.FeatureInfo)) GLARBshadertextureimagesamples.Load();
        if (QuickGL.IsFeatureSupported(GLARBshadertexturelod.FeatureInfo)) GLARBshadertexturelod.Load();
        if (QuickGL.IsFeatureSupported(GLARBshaderviewportlayerarray.FeatureInfo)) GLARBshaderviewportlayerarray.Load();
        if (QuickGL.IsFeatureSupported(GLARBshadinglanguage100.FeatureInfo)) GLARBshadinglanguage100.Load();
        if (QuickGL.IsFeatureSupported(GLARBshadinglanguage420pack.FeatureInfo)) GLARBshadinglanguage420pack.Load();
        if (QuickGL.IsFeatureSupported(GLARBshadinglanguageinclude.FeatureInfo)) GLARBshadinglanguageinclude.Load();
        if (QuickGL.IsFeatureSupported(GLARBshadinglanguagepacking.FeatureInfo)) GLARBshadinglanguagepacking.Load();
        if (QuickGL.IsFeatureSupported(GLARBshadow.FeatureInfo)) GLARBshadow.Load();
        if (QuickGL.IsFeatureSupported(GLARBshadowambient.FeatureInfo)) GLARBshadowambient.Load();
        if (QuickGL.IsFeatureSupported(GLARBsparsebuffer.FeatureInfo)) GLARBsparsebuffer.Load();
        if (QuickGL.IsFeatureSupported(GLARBsparsetexture.FeatureInfo)) GLARBsparsetexture.Load();
        if (QuickGL.IsFeatureSupported(GLARBsparsetexture2.FeatureInfo)) GLARBsparsetexture2.Load();
        if (QuickGL.IsFeatureSupported(GLARBsparsetextureclamp.FeatureInfo)) GLARBsparsetextureclamp.Load();
        if (QuickGL.IsFeatureSupported(GLARBspirvextensions.FeatureInfo)) GLARBspirvextensions.Load();
        if (QuickGL.IsFeatureSupported(GLARBstenciltexturing.FeatureInfo)) GLARBstenciltexturing.Load();
        if (QuickGL.IsFeatureSupported(GLARBsync.FeatureInfo)) GLARBsync.Load();
        if (QuickGL.IsFeatureSupported(GLARBtessellationshader.FeatureInfo)) GLARBtessellationshader.Load();
        if (QuickGL.IsFeatureSupported(GLARBtexturebarrier.FeatureInfo)) GLARBtexturebarrier.Load();
        if (QuickGL.IsFeatureSupported(GLARBtextureborderclamp.FeatureInfo)) GLARBtextureborderclamp.Load();
        if (QuickGL.IsFeatureSupported(GLARBtexturebufferobject.FeatureInfo)) GLARBtexturebufferobject.Load();
        if (QuickGL.IsFeatureSupported(GLARBtexturebufferobjectrgb32.FeatureInfo)) GLARBtexturebufferobjectrgb32.Load();
        if (QuickGL.IsFeatureSupported(GLARBtexturebufferrange.FeatureInfo)) GLARBtexturebufferrange.Load();
        if (QuickGL.IsFeatureSupported(GLARBtexturecompression.FeatureInfo)) GLARBtexturecompression.Load();
        if (QuickGL.IsFeatureSupported(GLARBtexturecompressionbptc.FeatureInfo)) GLARBtexturecompressionbptc.Load();
        if (QuickGL.IsFeatureSupported(GLARBtexturecompressionrgtc.FeatureInfo)) GLARBtexturecompressionrgtc.Load();
        if (QuickGL.IsFeatureSupported(GLARBtexturecubemap.FeatureInfo)) GLARBtexturecubemap.Load();
        if (QuickGL.IsFeatureSupported(GLARBtexturecubemaparray.FeatureInfo)) GLARBtexturecubemaparray.Load();
        if (QuickGL.IsFeatureSupported(GLARBtextureenvadd.FeatureInfo)) GLARBtextureenvadd.Load();
        if (QuickGL.IsFeatureSupported(GLARBtextureenvcombine.FeatureInfo)) GLARBtextureenvcombine.Load();
        if (QuickGL.IsFeatureSupported(GLARBtextureenvcrossbar.FeatureInfo)) GLARBtextureenvcrossbar.Load();
        if (QuickGL.IsFeatureSupported(GLARBtextureenvdot3.FeatureInfo)) GLARBtextureenvdot3.Load();
        if (QuickGL.IsFeatureSupported(GLARBtexturefilteranisotropic.FeatureInfo)) GLARBtexturefilteranisotropic.Load();
        if (QuickGL.IsFeatureSupported(GLARBtexturefilterminmax.FeatureInfo)) GLARBtexturefilterminmax.Load();
        if (QuickGL.IsFeatureSupported(GLARBtexturefloat.FeatureInfo)) GLARBtexturefloat.Load();
        if (QuickGL.IsFeatureSupported(GLARBtexturegather.FeatureInfo)) GLARBtexturegather.Load();
        if (QuickGL.IsFeatureSupported(GLARBtexturemirrorclamptoedge.FeatureInfo)) GLARBtexturemirrorclamptoedge.Load();
        if (QuickGL.IsFeatureSupported(GLARBtexturemirroredrepeat.FeatureInfo)) GLARBtexturemirroredrepeat.Load();
        if (QuickGL.IsFeatureSupported(GLARBtexturemultisample.FeatureInfo)) GLARBtexturemultisample.Load();
        if (QuickGL.IsFeatureSupported(GLARBtexturenonpoweroftwo.FeatureInfo)) GLARBtexturenonpoweroftwo.Load();
        if (QuickGL.IsFeatureSupported(GLARBtexturequerylevels.FeatureInfo)) GLARBtexturequerylevels.Load();
        if (QuickGL.IsFeatureSupported(GLARBtexturequerylod.FeatureInfo)) GLARBtexturequerylod.Load();
        if (QuickGL.IsFeatureSupported(GLARBtexturerectangle.FeatureInfo)) GLARBtexturerectangle.Load();
        if (QuickGL.IsFeatureSupported(GLARBtexturerg.FeatureInfo)) GLARBtexturerg.Load();
        if (QuickGL.IsFeatureSupported(GLARBtexturergb10a2ui.FeatureInfo)) GLARBtexturergb10a2ui.Load();
        if (QuickGL.IsFeatureSupported(GLARBtexturestencil8.FeatureInfo)) GLARBtexturestencil8.Load();
        if (QuickGL.IsFeatureSupported(GLARBtexturestorage.FeatureInfo)) GLARBtexturestorage.Load();
        if (QuickGL.IsFeatureSupported(GLARBtexturestoragemultisample.FeatureInfo)) GLARBtexturestoragemultisample.Load();
        if (QuickGL.IsFeatureSupported(GLARBtextureswizzle.FeatureInfo)) GLARBtextureswizzle.Load();
        if (QuickGL.IsFeatureSupported(GLARBtextureview.FeatureInfo)) GLARBtextureview.Load();
        if (QuickGL.IsFeatureSupported(GLARBtimerquery.FeatureInfo)) GLARBtimerquery.Load();
        if (QuickGL.IsFeatureSupported(GLARBtransformfeedback2.FeatureInfo)) GLARBtransformfeedback2.Load();
        if (QuickGL.IsFeatureSupported(GLARBtransformfeedback3.FeatureInfo)) GLARBtransformfeedback3.Load();
        if (QuickGL.IsFeatureSupported(GLARBtransformfeedbackinstanced.FeatureInfo)) GLARBtransformfeedbackinstanced.Load();
        if (QuickGL.IsFeatureSupported(GLARBtransformfeedbackoverflowquery.FeatureInfo)) GLARBtransformfeedbackoverflowquery.Load();
        if (QuickGL.IsFeatureSupported(GLARBtransposematrix.FeatureInfo)) GLARBtransposematrix.Load();
        if (QuickGL.IsFeatureSupported(GLARBuniformbufferobject.FeatureInfo)) GLARBuniformbufferobject.Load();
        if (QuickGL.IsFeatureSupported(GLARBvertexarraybgra.FeatureInfo)) GLARBvertexarraybgra.Load();
        if (QuickGL.IsFeatureSupported(GLARBvertexarrayobject.FeatureInfo)) GLARBvertexarrayobject.Load();
        if (QuickGL.IsFeatureSupported(GLARBvertexattrib64bit.FeatureInfo)) GLARBvertexattrib64bit.Load();
        if (QuickGL.IsFeatureSupported(GLARBvertexattribbinding.FeatureInfo)) GLARBvertexattribbinding.Load();
        if (QuickGL.IsFeatureSupported(GLARBvertexblend.FeatureInfo)) GLARBvertexblend.Load();
        if (QuickGL.IsFeatureSupported(GLARBvertexbufferobject.FeatureInfo)) GLARBvertexbufferobject.Load();
        if (QuickGL.IsFeatureSupported(GLARBvertexprogram.FeatureInfo)) GLARBvertexprogram.Load();
        if (QuickGL.IsFeatureSupported(GLARBvertexshader.FeatureInfo)) GLARBvertexshader.Load();
        if (QuickGL.IsFeatureSupported(GLARBvertextype10f11f11frev.FeatureInfo)) GLARBvertextype10f11f11frev.Load();
        if (QuickGL.IsFeatureSupported(GLARBvertextype2101010rev.FeatureInfo)) GLARBvertextype2101010rev.Load();
        if (QuickGL.IsFeatureSupported(GLARBviewportarray.FeatureInfo)) GLARBviewportarray.Load();
        if (QuickGL.IsFeatureSupported(GLARBwindowpos.FeatureInfo)) GLARBwindowpos.Load();
        if (QuickGL.IsFeatureSupported(GLEXT422pixels.FeatureInfo)) GLEXT422pixels.Load();
        if (QuickGL.IsFeatureSupported(GLEXTEGLimagearray.FeatureInfo)) GLEXTEGLimagearray.Load();
        if (QuickGL.IsFeatureSupported(GLEXTEGLimagestorage.FeatureInfo)) GLEXTEGLimagestorage.Load();
        if (QuickGL.IsFeatureSupported(GLEXTEGLimagestoragecompression.FeatureInfo)) GLEXTEGLimagestoragecompression.Load();
        if (QuickGL.IsFeatureSupported(GLEXTEGLsync.FeatureInfo)) GLEXTEGLsync.Load();
        if (QuickGL.IsFeatureSupported(GLEXTYUVtarget.FeatureInfo)) GLEXTYUVtarget.Load();
        if (QuickGL.IsFeatureSupported(GLEXTabgr.FeatureInfo)) GLEXTabgr.Load();
        if (QuickGL.IsFeatureSupported(GLEXTbaseinstance.FeatureInfo)) GLEXTbaseinstance.Load();
        if (QuickGL.IsFeatureSupported(GLEXTbgra.FeatureInfo)) GLEXTbgra.Load();
        if (QuickGL.IsFeatureSupported(GLEXTbindableuniform.FeatureInfo)) GLEXTbindableuniform.Load();
        if (QuickGL.IsFeatureSupported(GLEXTblendcolor.FeatureInfo)) GLEXTblendcolor.Load();
        if (QuickGL.IsFeatureSupported(GLEXTblendequationseparate.FeatureInfo)) GLEXTblendequationseparate.Load();
        if (QuickGL.IsFeatureSupported(GLEXTblendfuncextended.FeatureInfo)) GLEXTblendfuncextended.Load();
        if (QuickGL.IsFeatureSupported(GLEXTblendfuncseparate.FeatureInfo)) GLEXTblendfuncseparate.Load();
        if (QuickGL.IsFeatureSupported(GLEXTblendlogicop.FeatureInfo)) GLEXTblendlogicop.Load();
        if (QuickGL.IsFeatureSupported(GLEXTblendminmax.FeatureInfo)) GLEXTblendminmax.Load();
        if (QuickGL.IsFeatureSupported(GLEXTblendsubtract.FeatureInfo)) GLEXTblendsubtract.Load();
        if (QuickGL.IsFeatureSupported(GLEXTbufferstorage.FeatureInfo)) GLEXTbufferstorage.Load();
        if (QuickGL.IsFeatureSupported(GLEXTcleartexture.FeatureInfo)) GLEXTcleartexture.Load();
        if (QuickGL.IsFeatureSupported(GLEXTclipcontrol.FeatureInfo)) GLEXTclipcontrol.Load();
        if (QuickGL.IsFeatureSupported(GLEXTclipculldistance.FeatureInfo)) GLEXTclipculldistance.Load();
        if (QuickGL.IsFeatureSupported(GLEXTclipvolumehint.FeatureInfo)) GLEXTclipvolumehint.Load();
        if (QuickGL.IsFeatureSupported(GLEXTcmyka.FeatureInfo)) GLEXTcmyka.Load();
        if (QuickGL.IsFeatureSupported(GLEXTcolorbufferfloat.FeatureInfo)) GLEXTcolorbufferfloat.Load();
        if (QuickGL.IsFeatureSupported(GLEXTcolorbufferhalffloat.FeatureInfo)) GLEXTcolorbufferhalffloat.Load();
        if (QuickGL.IsFeatureSupported(GLEXTcolorsubtable.FeatureInfo)) GLEXTcolorsubtable.Load();
        if (QuickGL.IsFeatureSupported(GLEXTcompiledvertexarray.FeatureInfo)) GLEXTcompiledvertexarray.Load();
        if (QuickGL.IsFeatureSupported(GLEXTconservativedepth.FeatureInfo)) GLEXTconservativedepth.Load();
        if (QuickGL.IsFeatureSupported(GLEXTconvolution.FeatureInfo)) GLEXTconvolution.Load();
        if (QuickGL.IsFeatureSupported(GLEXTcoordinateframe.FeatureInfo)) GLEXTcoordinateframe.Load();
        if (QuickGL.IsFeatureSupported(GLEXTcopyimage.FeatureInfo)) GLEXTcopyimage.Load();
        if (QuickGL.IsFeatureSupported(GLEXTcopytexture.FeatureInfo)) GLEXTcopytexture.Load();
        if (QuickGL.IsFeatureSupported(GLEXTcullvertex.FeatureInfo)) GLEXTcullvertex.Load();
        if (QuickGL.IsFeatureSupported(GLEXTdebuglabel.FeatureInfo)) GLEXTdebuglabel.Load();
        if (QuickGL.IsFeatureSupported(GLEXTdebugmarker.FeatureInfo)) GLEXTdebugmarker.Load();
        if (QuickGL.IsFeatureSupported(GLEXTdepthboundstest.FeatureInfo)) GLEXTdepthboundstest.Load();
        if (QuickGL.IsFeatureSupported(GLEXTdepthclamp.FeatureInfo)) GLEXTdepthclamp.Load();
        if (QuickGL.IsFeatureSupported(GLEXTdirectstateaccess.FeatureInfo)) GLEXTdirectstateaccess.Load();
        if (QuickGL.IsFeatureSupported(GLEXTdiscardframebuffer.FeatureInfo)) GLEXTdiscardframebuffer.Load();
        if (QuickGL.IsFeatureSupported(GLEXTdisjointtimerquery.FeatureInfo)) GLEXTdisjointtimerquery.Load();
        if (QuickGL.IsFeatureSupported(GLEXTdrawbuffers.FeatureInfo)) GLEXTdrawbuffers.Load();
        if (QuickGL.IsFeatureSupported(GLEXTdrawbuffers2.FeatureInfo)) GLEXTdrawbuffers2.Load();
        if (QuickGL.IsFeatureSupported(GLEXTdrawbuffersindexed.FeatureInfo)) GLEXTdrawbuffersindexed.Load();
        if (QuickGL.IsFeatureSupported(GLEXTdrawelementsbasevertex.FeatureInfo)) GLEXTdrawelementsbasevertex.Load();
        if (QuickGL.IsFeatureSupported(GLEXTdrawinstanced.FeatureInfo)) GLEXTdrawinstanced.Load();
        if (QuickGL.IsFeatureSupported(GLEXTdrawrangeelements.FeatureInfo)) GLEXTdrawrangeelements.Load();
        if (QuickGL.IsFeatureSupported(GLEXTdrawtransformfeedback.FeatureInfo)) GLEXTdrawtransformfeedback.Load();
        if (QuickGL.IsFeatureSupported(GLEXTexternalbuffer.FeatureInfo)) GLEXTexternalbuffer.Load();
        if (QuickGL.IsFeatureSupported(GLEXTfloatblend.FeatureInfo)) GLEXTfloatblend.Load();
        if (QuickGL.IsFeatureSupported(GLEXTfogcoord.FeatureInfo)) GLEXTfogcoord.Load();
        if (QuickGL.IsFeatureSupported(GLEXTfragmentshadingrate.FeatureInfo)) GLEXTfragmentshadingrate.Load();
        if (QuickGL.IsFeatureSupported(GLEXTframebufferblit.FeatureInfo)) GLEXTframebufferblit.Load();
        if (QuickGL.IsFeatureSupported(GLEXTframebufferblitlayers.FeatureInfo)) GLEXTframebufferblitlayers.Load();
        if (QuickGL.IsFeatureSupported(GLEXTframebuffermultisample.FeatureInfo)) GLEXTframebuffermultisample.Load();
        if (QuickGL.IsFeatureSupported(GLEXTframebuffermultisampleblitscaled.FeatureInfo)) GLEXTframebuffermultisampleblitscaled.Load();
        if (QuickGL.IsFeatureSupported(GLEXTframebufferobject.FeatureInfo)) GLEXTframebufferobject.Load();
        if (QuickGL.IsFeatureSupported(GLEXTframebuffersRGB.FeatureInfo)) GLEXTframebuffersRGB.Load();
        if (QuickGL.IsFeatureSupported(GLEXTgeometrypointsize.FeatureInfo)) GLEXTgeometrypointsize.Load();
        if (QuickGL.IsFeatureSupported(GLEXTgeometryshader.FeatureInfo)) GLEXTgeometryshader.Load();
        if (QuickGL.IsFeatureSupported(GLEXTgeometryshader4.FeatureInfo)) GLEXTgeometryshader4.Load();
        if (QuickGL.IsFeatureSupported(GLEXTgpuprogramparameters.FeatureInfo)) GLEXTgpuprogramparameters.Load();
        if (QuickGL.IsFeatureSupported(GLEXTgpushader4.FeatureInfo)) GLEXTgpushader4.Load();
        if (QuickGL.IsFeatureSupported(GLEXTgpushader5.FeatureInfo)) GLEXTgpushader5.Load();
        if (QuickGL.IsFeatureSupported(GLEXThistogram.FeatureInfo)) GLEXThistogram.Load();
        if (QuickGL.IsFeatureSupported(GLEXTindexarrayformats.FeatureInfo)) GLEXTindexarrayformats.Load();
        if (QuickGL.IsFeatureSupported(GLEXTindexfunc.FeatureInfo)) GLEXTindexfunc.Load();
        if (QuickGL.IsFeatureSupported(GLEXTindexmaterial.FeatureInfo)) GLEXTindexmaterial.Load();
        if (QuickGL.IsFeatureSupported(GLEXTindextexture.FeatureInfo)) GLEXTindextexture.Load();
        if (QuickGL.IsFeatureSupported(GLEXTinstancedarrays.FeatureInfo)) GLEXTinstancedarrays.Load();
        if (QuickGL.IsFeatureSupported(GLEXTlighttexture.FeatureInfo)) GLEXTlighttexture.Load();
        if (QuickGL.IsFeatureSupported(GLEXTmapbufferrange.FeatureInfo)) GLEXTmapbufferrange.Load();
        if (QuickGL.IsFeatureSupported(GLEXTmemoryobject.FeatureInfo)) GLEXTmemoryobject.Load();
        if (QuickGL.IsFeatureSupported(GLEXTmemoryobjectfd.FeatureInfo)) GLEXTmemoryobjectfd.Load();
        if (QuickGL.IsFeatureSupported(GLEXTmemoryobjectwin32.FeatureInfo)) GLEXTmemoryobjectwin32.Load();
        if (QuickGL.IsFeatureSupported(GLEXTmiscattribute.FeatureInfo)) GLEXTmiscattribute.Load();
        if (QuickGL.IsFeatureSupported(GLEXTmultidrawarrays.FeatureInfo)) GLEXTmultidrawarrays.Load();
        if (QuickGL.IsFeatureSupported(GLEXTmultidrawindirect.FeatureInfo)) GLEXTmultidrawindirect.Load();
        if (QuickGL.IsFeatureSupported(GLEXTmultisample.FeatureInfo)) GLEXTmultisample.Load();
        if (QuickGL.IsFeatureSupported(GLEXTmultisampledcompatibility.FeatureInfo)) GLEXTmultisampledcompatibility.Load();
        if (QuickGL.IsFeatureSupported(GLEXTmultisampledrendertotexture.FeatureInfo)) GLEXTmultisampledrendertotexture.Load();
        if (QuickGL.IsFeatureSupported(GLEXTmultisampledrendertotexture2.FeatureInfo)) GLEXTmultisampledrendertotexture2.Load();
        if (QuickGL.IsFeatureSupported(GLEXTmultiviewdrawbuffers.FeatureInfo)) GLEXTmultiviewdrawbuffers.Load();
        if (QuickGL.IsFeatureSupported(GLEXTmultiviewtessellationgeometryshader.FeatureInfo)) GLEXTmultiviewtessellationgeometryshader.Load();
        if (QuickGL.IsFeatureSupported(GLEXTmultiviewtexturemultisample.FeatureInfo)) GLEXTmultiviewtexturemultisample.Load();
        if (QuickGL.IsFeatureSupported(GLEXTmultiviewtimerquery.FeatureInfo)) GLEXTmultiviewtimerquery.Load();
        if (QuickGL.IsFeatureSupported(GLEXTocclusionqueryboolean.FeatureInfo)) GLEXTocclusionqueryboolean.Load();
        if (QuickGL.IsFeatureSupported(GLEXTpackeddepthstencil.FeatureInfo)) GLEXTpackeddepthstencil.Load();
        if (QuickGL.IsFeatureSupported(GLEXTpackedfloat.FeatureInfo)) GLEXTpackedfloat.Load();
        if (QuickGL.IsFeatureSupported(GLEXTpackedpixels.FeatureInfo)) GLEXTpackedpixels.Load();
        if (QuickGL.IsFeatureSupported(GLEXTpalettedtexture.FeatureInfo)) GLEXTpalettedtexture.Load();
        if (QuickGL.IsFeatureSupported(GLEXTpixelbufferobject.FeatureInfo)) GLEXTpixelbufferobject.Load();
        if (QuickGL.IsFeatureSupported(GLEXTpixeltransform.FeatureInfo)) GLEXTpixeltransform.Load();
        if (QuickGL.IsFeatureSupported(GLEXTpixeltransformcolortable.FeatureInfo)) GLEXTpixeltransformcolortable.Load();
        if (QuickGL.IsFeatureSupported(GLEXTpointparameters.FeatureInfo)) GLEXTpointparameters.Load();
        if (QuickGL.IsFeatureSupported(GLEXTpolygonoffset.FeatureInfo)) GLEXTpolygonoffset.Load();
        if (QuickGL.IsFeatureSupported(GLEXTpolygonoffsetclamp.FeatureInfo)) GLEXTpolygonoffsetclamp.Load();
        if (QuickGL.IsFeatureSupported(GLEXTpostdepthcoverage.FeatureInfo)) GLEXTpostdepthcoverage.Load();
        if (QuickGL.IsFeatureSupported(GLEXTprimitiveboundingbox.FeatureInfo)) GLEXTprimitiveboundingbox.Load();
        if (QuickGL.IsFeatureSupported(GLEXTprotectedtextures.FeatureInfo)) GLEXTprotectedtextures.Load();
        if (QuickGL.IsFeatureSupported(GLEXTprovokingvertex.FeatureInfo)) GLEXTprovokingvertex.Load();
        if (QuickGL.IsFeatureSupported(GLEXTpvrtcsRGB.FeatureInfo)) GLEXTpvrtcsRGB.Load();
        if (QuickGL.IsFeatureSupported(GLEXTrastermultisample.FeatureInfo)) GLEXTrastermultisample.Load();
        if (QuickGL.IsFeatureSupported(GLEXTreadformatbgra.FeatureInfo)) GLEXTreadformatbgra.Load();
        if (QuickGL.IsFeatureSupported(GLEXTrendersnorm.FeatureInfo)) GLEXTrendersnorm.Load();
        if (QuickGL.IsFeatureSupported(GLEXTrescalenormal.FeatureInfo)) GLEXTrescalenormal.Load();
        if (QuickGL.IsFeatureSupported(GLEXTrobustness.FeatureInfo)) GLEXTrobustness.Load();
        if (QuickGL.IsFeatureSupported(GLEXTsemaphore.FeatureInfo)) GLEXTsemaphore.Load();
        if (QuickGL.IsFeatureSupported(GLEXTsemaphorefd.FeatureInfo)) GLEXTsemaphorefd.Load();
        if (QuickGL.IsFeatureSupported(GLEXTsemaphorewin32.FeatureInfo)) GLEXTsemaphorewin32.Load();
        if (QuickGL.IsFeatureSupported(GLEXTsRGB.FeatureInfo)) GLEXTsRGB.Load();
        if (QuickGL.IsFeatureSupported(GLEXTsRGBwritecontrol.FeatureInfo)) GLEXTsRGBwritecontrol.Load();
        if (QuickGL.IsFeatureSupported(GLEXTsecondarycolor.FeatureInfo)) GLEXTsecondarycolor.Load();
        if (QuickGL.IsFeatureSupported(GLEXTseparatedepthstencil.FeatureInfo)) GLEXTseparatedepthstencil.Load();
        if (QuickGL.IsFeatureSupported(GLEXTseparateshaderobjects.FeatureInfo)) GLEXTseparateshaderobjects.Load();
        if (QuickGL.IsFeatureSupported(GLEXTseparatespecularcolor.FeatureInfo)) GLEXTseparatespecularcolor.Load();
        if (QuickGL.IsFeatureSupported(GLEXTshaderframebufferfetch.FeatureInfo)) GLEXTshaderframebufferfetch.Load();
        if (QuickGL.IsFeatureSupported(GLEXTshaderframebufferfetchnoncoherent.FeatureInfo)) GLEXTshaderframebufferfetchnoncoherent.Load();
        if (QuickGL.IsFeatureSupported(GLEXTshadergroupvote.FeatureInfo)) GLEXTshadergroupvote.Load();
        if (QuickGL.IsFeatureSupported(GLEXTshaderimageloadformatted.FeatureInfo)) GLEXTshaderimageloadformatted.Load();
        if (QuickGL.IsFeatureSupported(GLEXTshaderimageloadstore.FeatureInfo)) GLEXTshaderimageloadstore.Load();
        if (QuickGL.IsFeatureSupported(GLEXTshaderimplicitconversions.FeatureInfo)) GLEXTshaderimplicitconversions.Load();
        if (QuickGL.IsFeatureSupported(GLEXTshaderintegermix.FeatureInfo)) GLEXTshaderintegermix.Load();
        if (QuickGL.IsFeatureSupported(GLEXTshaderioblocks.FeatureInfo)) GLEXTshaderioblocks.Load();
        if (QuickGL.IsFeatureSupported(GLEXTshadernonconstantglobalinitializers.FeatureInfo)) GLEXTshadernonconstantglobalinitializers.Load();
        if (QuickGL.IsFeatureSupported(GLEXTshaderpixellocalstorage.FeatureInfo)) GLEXTshaderpixellocalstorage.Load();
        if (QuickGL.IsFeatureSupported(GLEXTshaderpixellocalstorage2.FeatureInfo)) GLEXTshaderpixellocalstorage2.Load();
        if (QuickGL.IsFeatureSupported(GLEXTshadersamplesidentical.FeatureInfo)) GLEXTshadersamplesidentical.Load();
        if (QuickGL.IsFeatureSupported(GLEXTshadertexturelod.FeatureInfo)) GLEXTshadertexturelod.Load();
        if (QuickGL.IsFeatureSupported(GLEXTshadowfuncs.FeatureInfo)) GLEXTshadowfuncs.Load();
        if (QuickGL.IsFeatureSupported(GLEXTshadowsamplers.FeatureInfo)) GLEXTshadowsamplers.Load();
        if (QuickGL.IsFeatureSupported(GLEXTsharedtexturepalette.FeatureInfo)) GLEXTsharedtexturepalette.Load();
        if (QuickGL.IsFeatureSupported(GLEXTsparsetexture.FeatureInfo)) GLEXTsparsetexture.Load();
        if (QuickGL.IsFeatureSupported(GLEXTsparsetexture2.FeatureInfo)) GLEXTsparsetexture2.Load();
        if (QuickGL.IsFeatureSupported(GLEXTstencilcleartag.FeatureInfo)) GLEXTstencilcleartag.Load();
        if (QuickGL.IsFeatureSupported(GLEXTstenciltwoside.FeatureInfo)) GLEXTstenciltwoside.Load();
        if (QuickGL.IsFeatureSupported(GLEXTstencilwrap.FeatureInfo)) GLEXTstencilwrap.Load();
        if (QuickGL.IsFeatureSupported(GLEXTsubtexture.FeatureInfo)) GLEXTsubtexture.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtessellationpointsize.FeatureInfo)) GLEXTtessellationpointsize.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtessellationshader.FeatureInfo)) GLEXTtessellationshader.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtexture.FeatureInfo)) GLEXTtexture.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtexture3D.FeatureInfo)) GLEXTtexture3D.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtexturearray.FeatureInfo)) GLEXTtexturearray.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtextureborderclamp.FeatureInfo)) GLEXTtextureborderclamp.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtexturebuffer.FeatureInfo)) GLEXTtexturebuffer.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtexturebufferobject.FeatureInfo)) GLEXTtexturebufferobject.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtexturecompressionastcdecodemode.FeatureInfo)) GLEXTtexturecompressionastcdecodemode.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtexturecompressionbptc.FeatureInfo)) GLEXTtexturecompressionbptc.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtexturecompressiondxt1.FeatureInfo)) GLEXTtexturecompressiondxt1.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtexturecompressionlatc.FeatureInfo)) GLEXTtexturecompressionlatc.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtexturecompressionrgtc.FeatureInfo)) GLEXTtexturecompressionrgtc.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtexturecompressions3tc.FeatureInfo)) GLEXTtexturecompressions3tc.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtexturecompressions3tcsrgb.FeatureInfo)) GLEXTtexturecompressions3tcsrgb.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtexturecubemap.FeatureInfo)) GLEXTtexturecubemap.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtexturecubemaparray.FeatureInfo)) GLEXTtexturecubemaparray.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtextureenvadd.FeatureInfo)) GLEXTtextureenvadd.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtextureenvcombine.FeatureInfo)) GLEXTtextureenvcombine.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtextureenvdot3.FeatureInfo)) GLEXTtextureenvdot3.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtexturefilteranisotropic.FeatureInfo)) GLEXTtexturefilteranisotropic.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtexturefilterminmax.FeatureInfo)) GLEXTtexturefilterminmax.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtextureformatBGRA8888.FeatureInfo)) GLEXTtextureformatBGRA8888.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtextureformatsRGBoverride.FeatureInfo)) GLEXTtextureformatsRGBoverride.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtextureinteger.FeatureInfo)) GLEXTtextureinteger.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtexturelodbias.FeatureInfo)) GLEXTtexturelodbias.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtexturemirrorclamp.FeatureInfo)) GLEXTtexturemirrorclamp.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtexturemirrorclamptoedge.FeatureInfo)) GLEXTtexturemirrorclamptoedge.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtexturenorm16.FeatureInfo)) GLEXTtexturenorm16.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtextureobject.FeatureInfo)) GLEXTtextureobject.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtextureperturbnormal.FeatureInfo)) GLEXTtextureperturbnormal.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtexturequerylod.FeatureInfo)) GLEXTtexturequerylod.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtexturerg.FeatureInfo)) GLEXTtexturerg.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtexturesRGB.FeatureInfo)) GLEXTtexturesRGB.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtexturesRGBR8.FeatureInfo)) GLEXTtexturesRGBR8.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtexturesRGBRG8.FeatureInfo)) GLEXTtexturesRGBRG8.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtexturesRGBdecode.FeatureInfo)) GLEXTtexturesRGBdecode.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtextureshadowlod.FeatureInfo)) GLEXTtextureshadowlod.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtexturesharedexponent.FeatureInfo)) GLEXTtexturesharedexponent.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtexturesnorm.FeatureInfo)) GLEXTtexturesnorm.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtexturestorage.FeatureInfo)) GLEXTtexturestorage.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtexturestoragecompression.FeatureInfo)) GLEXTtexturestoragecompression.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtextureswizzle.FeatureInfo)) GLEXTtextureswizzle.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtexturetype2101010REV.FeatureInfo)) GLEXTtexturetype2101010REV.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtextureview.FeatureInfo)) GLEXTtextureview.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtimerquery.FeatureInfo)) GLEXTtimerquery.Load();
        if (QuickGL.IsFeatureSupported(GLEXTtransformfeedback.FeatureInfo)) GLEXTtransformfeedback.Load();
        if (QuickGL.IsFeatureSupported(GLEXTunpacksubimage.FeatureInfo)) GLEXTunpacksubimage.Load();
        if (QuickGL.IsFeatureSupported(GLEXTvertexarray.FeatureInfo)) GLEXTvertexarray.Load();
        if (QuickGL.IsFeatureSupported(GLEXTvertexarraybgra.FeatureInfo)) GLEXTvertexarraybgra.Load();
        if (QuickGL.IsFeatureSupported(GLEXTvertexattrib64bit.FeatureInfo)) GLEXTvertexattrib64bit.Load();
        if (QuickGL.IsFeatureSupported(GLEXTvertexshader.FeatureInfo)) GLEXTvertexshader.Load();
        if (QuickGL.IsFeatureSupported(GLEXTvertexweighting.FeatureInfo)) GLEXTvertexweighting.Load();
        if (QuickGL.IsFeatureSupported(GLEXTwin32keyedmutex.FeatureInfo)) GLEXTwin32keyedmutex.Load();
        if (QuickGL.IsFeatureSupported(GLEXTwindowrectangles.FeatureInfo)) GLEXTwindowrectangles.Load();
        if (QuickGL.IsFeatureSupported(GLEXTx11syncobject.FeatureInfo)) GLEXTx11syncobject.Load();
    }

    internal static void Unload()
    {
        GL10.Unload();
        GL11.Unload();
        GL12.Unload();
        GL13.Unload();
        GL14.Unload();
        GL15.Unload();
        GL20.Unload();
        GL21.Unload();
        GL30.Unload();
        GL31.Unload();
        GL32.Unload();
        GL33.Unload();
        GL40.Unload();
        GL41.Unload();
        GL42.Unload();
        GL43.Unload();
        GL44.Unload();
        GL45.Unload();
        GL46.Unload();
        GLESCM10.Unload();
        GLES20.Unload();
        GLES30.Unload();
        GLES31.Unload();
        GLES32.Unload();
        GLSC20.Unload();
        GLARBES2compatibility.Unload();
        GLARBES31compatibility.Unload();
        GLARBES32compatibility.Unload();
        GLARBES3compatibility.Unload();
        GLARBarraysofarrays.Unload();
        GLARBbaseinstance.Unload();
        GLARBbindlesstexture.Unload();
        GLARBblendfuncextended.Unload();
        GLARBbufferstorage.Unload();
        GLARBclevent.Unload();
        GLARBclearbufferobject.Unload();
        GLARBcleartexture.Unload();
        GLARBclipcontrol.Unload();
        GLARBcolorbufferfloat.Unload();
        GLARBcompatibility.Unload();
        GLARBcompressedtexturepixelstorage.Unload();
        GLARBcomputeshader.Unload();
        GLARBcomputevariablegroupsize.Unload();
        GLARBconditionalrenderinverted.Unload();
        GLARBconservativedepth.Unload();
        GLARBcopybuffer.Unload();
        GLARBcopyimage.Unload();
        GLARBculldistance.Unload();
        GLARBdebugoutput.Unload();
        GLARBdepthbufferfloat.Unload();
        GLARBdepthclamp.Unload();
        GLARBdepthtexture.Unload();
        GLARBderivativecontrol.Unload();
        GLARBdirectstateaccess.Unload();
        GLARBdrawbuffers.Unload();
        GLARBdrawbuffersblend.Unload();
        GLARBdrawelementsbasevertex.Unload();
        GLARBdrawindirect.Unload();
        GLARBdrawinstanced.Unload();
        GLARBenhancedlayouts.Unload();
        GLARBexplicitattriblocation.Unload();
        GLARBexplicituniformlocation.Unload();
        GLARBfragmentcoordconventions.Unload();
        GLARBfragmentlayerviewport.Unload();
        GLARBfragmentprogram.Unload();
        GLARBfragmentprogramshadow.Unload();
        GLARBfragmentshader.Unload();
        GLARBfragmentshaderinterlock.Unload();
        GLARBframebuffernoattachments.Unload();
        GLARBframebufferobject.Unload();
        GLARBframebuffersRGB.Unload();
        GLARBgeometryshader4.Unload();
        GLARBgetprogrambinary.Unload();
        GLARBgettexturesubimage.Unload();
        GLARBglspirv.Unload();
        GLARBgpushader5.Unload();
        GLARBgpushaderfp64.Unload();
        GLARBgpushaderint64.Unload();
        GLARBhalffloatpixel.Unload();
        GLARBhalffloatvertex.Unload();
        GLARBimaging.Unload();
        GLARBindirectparameters.Unload();
        GLARBinstancedarrays.Unload();
        GLARBinternalformatquery.Unload();
        GLARBinternalformatquery2.Unload();
        GLARBinvalidatesubdata.Unload();
        GLARBmapbufferalignment.Unload();
        GLARBmapbufferrange.Unload();
        GLARBmatrixpalette.Unload();
        GLARBmultibind.Unload();
        GLARBmultidrawindirect.Unload();
        GLARBmultisample.Unload();
        GLARBmultitexture.Unload();
        GLARBocclusionquery.Unload();
        GLARBocclusionquery2.Unload();
        GLARBparallelshadercompile.Unload();
        GLARBpipelinestatisticsquery.Unload();
        GLARBpixelbufferobject.Unload();
        GLARBpointparameters.Unload();
        GLARBpointsprite.Unload();
        GLARBpolygonoffsetclamp.Unload();
        GLARBpostdepthcoverage.Unload();
        GLARBprograminterfacequery.Unload();
        GLARBprovokingvertex.Unload();
        GLARBquerybufferobject.Unload();
        GLARBrobustbufferaccessbehavior.Unload();
        GLARBrobustness.Unload();
        GLARBrobustnessisolation.Unload();
        GLARBsamplelocations.Unload();
        GLARBsampleshading.Unload();
        GLARBsamplerobjects.Unload();
        GLARBseamlesscubemap.Unload();
        GLARBseamlesscubemappertexture.Unload();
        GLARBseparateshaderobjects.Unload();
        GLARBshaderatomiccounterops.Unload();
        GLARBshaderatomiccounters.Unload();
        GLARBshaderballot.Unload();
        GLARBshaderbitencoding.Unload();
        GLARBshaderclock.Unload();
        GLARBshaderdrawparameters.Unload();
        GLARBshadergroupvote.Unload();
        GLARBshaderimageloadstore.Unload();
        GLARBshaderimagesize.Unload();
        GLARBshaderobjects.Unload();
        GLARBshaderprecision.Unload();
        GLARBshaderstencilexport.Unload();
        GLARBshaderstoragebufferobject.Unload();
        GLARBshadersubroutine.Unload();
        GLARBshadertextureimagesamples.Unload();
        GLARBshadertexturelod.Unload();
        GLARBshaderviewportlayerarray.Unload();
        GLARBshadinglanguage100.Unload();
        GLARBshadinglanguage420pack.Unload();
        GLARBshadinglanguageinclude.Unload();
        GLARBshadinglanguagepacking.Unload();
        GLARBshadow.Unload();
        GLARBshadowambient.Unload();
        GLARBsparsebuffer.Unload();
        GLARBsparsetexture.Unload();
        GLARBsparsetexture2.Unload();
        GLARBsparsetextureclamp.Unload();
        GLARBspirvextensions.Unload();
        GLARBstenciltexturing.Unload();
        GLARBsync.Unload();
        GLARBtessellationshader.Unload();
        GLARBtexturebarrier.Unload();
        GLARBtextureborderclamp.Unload();
        GLARBtexturebufferobject.Unload();
        GLARBtexturebufferobjectrgb32.Unload();
        GLARBtexturebufferrange.Unload();
        GLARBtexturecompression.Unload();
        GLARBtexturecompressionbptc.Unload();
        GLARBtexturecompressionrgtc.Unload();
        GLARBtexturecubemap.Unload();
        GLARBtexturecubemaparray.Unload();
        GLARBtextureenvadd.Unload();
        GLARBtextureenvcombine.Unload();
        GLARBtextureenvcrossbar.Unload();
        GLARBtextureenvdot3.Unload();
        GLARBtexturefilteranisotropic.Unload();
        GLARBtexturefilterminmax.Unload();
        GLARBtexturefloat.Unload();
        GLARBtexturegather.Unload();
        GLARBtexturemirrorclamptoedge.Unload();
        GLARBtexturemirroredrepeat.Unload();
        GLARBtexturemultisample.Unload();
        GLARBtexturenonpoweroftwo.Unload();
        GLARBtexturequerylevels.Unload();
        GLARBtexturequerylod.Unload();
        GLARBtexturerectangle.Unload();
        GLARBtexturerg.Unload();
        GLARBtexturergb10a2ui.Unload();
        GLARBtexturestencil8.Unload();
        GLARBtexturestorage.Unload();
        GLARBtexturestoragemultisample.Unload();
        GLARBtextureswizzle.Unload();
        GLARBtextureview.Unload();
        GLARBtimerquery.Unload();
        GLARBtransformfeedback2.Unload();
        GLARBtransformfeedback3.Unload();
        GLARBtransformfeedbackinstanced.Unload();
        GLARBtransformfeedbackoverflowquery.Unload();
        GLARBtransposematrix.Unload();
        GLARBuniformbufferobject.Unload();
        GLARBvertexarraybgra.Unload();
        GLARBvertexarrayobject.Unload();
        GLARBvertexattrib64bit.Unload();
        GLARBvertexattribbinding.Unload();
        GLARBvertexblend.Unload();
        GLARBvertexbufferobject.Unload();
        GLARBvertexprogram.Unload();
        GLARBvertexshader.Unload();
        GLARBvertextype10f11f11frev.Unload();
        GLARBvertextype2101010rev.Unload();
        GLARBviewportarray.Unload();
        GLARBwindowpos.Unload();
        GLEXT422pixels.Unload();
        GLEXTEGLimagearray.Unload();
        GLEXTEGLimagestorage.Unload();
        GLEXTEGLimagestoragecompression.Unload();
        GLEXTEGLsync.Unload();
        GLEXTYUVtarget.Unload();
        GLEXTabgr.Unload();
        GLEXTbaseinstance.Unload();
        GLEXTbgra.Unload();
        GLEXTbindableuniform.Unload();
        GLEXTblendcolor.Unload();
        GLEXTblendequationseparate.Unload();
        GLEXTblendfuncextended.Unload();
        GLEXTblendfuncseparate.Unload();
        GLEXTblendlogicop.Unload();
        GLEXTblendminmax.Unload();
        GLEXTblendsubtract.Unload();
        GLEXTbufferstorage.Unload();
        GLEXTcleartexture.Unload();
        GLEXTclipcontrol.Unload();
        GLEXTclipculldistance.Unload();
        GLEXTclipvolumehint.Unload();
        GLEXTcmyka.Unload();
        GLEXTcolorbufferfloat.Unload();
        GLEXTcolorbufferhalffloat.Unload();
        GLEXTcolorsubtable.Unload();
        GLEXTcompiledvertexarray.Unload();
        GLEXTconservativedepth.Unload();
        GLEXTconvolution.Unload();
        GLEXTcoordinateframe.Unload();
        GLEXTcopyimage.Unload();
        GLEXTcopytexture.Unload();
        GLEXTcullvertex.Unload();
        GLEXTdebuglabel.Unload();
        GLEXTdebugmarker.Unload();
        GLEXTdepthboundstest.Unload();
        GLEXTdepthclamp.Unload();
        GLEXTdirectstateaccess.Unload();
        GLEXTdiscardframebuffer.Unload();
        GLEXTdisjointtimerquery.Unload();
        GLEXTdrawbuffers.Unload();
        GLEXTdrawbuffers2.Unload();
        GLEXTdrawbuffersindexed.Unload();
        GLEXTdrawelementsbasevertex.Unload();
        GLEXTdrawinstanced.Unload();
        GLEXTdrawrangeelements.Unload();
        GLEXTdrawtransformfeedback.Unload();
        GLEXTexternalbuffer.Unload();
        GLEXTfloatblend.Unload();
        GLEXTfogcoord.Unload();
        GLEXTfragmentshadingrate.Unload();
        GLEXTframebufferblit.Unload();
        GLEXTframebufferblitlayers.Unload();
        GLEXTframebuffermultisample.Unload();
        GLEXTframebuffermultisampleblitscaled.Unload();
        GLEXTframebufferobject.Unload();
        GLEXTframebuffersRGB.Unload();
        GLEXTgeometrypointsize.Unload();
        GLEXTgeometryshader.Unload();
        GLEXTgeometryshader4.Unload();
        GLEXTgpuprogramparameters.Unload();
        GLEXTgpushader4.Unload();
        GLEXTgpushader5.Unload();
        GLEXThistogram.Unload();
        GLEXTindexarrayformats.Unload();
        GLEXTindexfunc.Unload();
        GLEXTindexmaterial.Unload();
        GLEXTindextexture.Unload();
        GLEXTinstancedarrays.Unload();
        GLEXTlighttexture.Unload();
        GLEXTmapbufferrange.Unload();
        GLEXTmemoryobject.Unload();
        GLEXTmemoryobjectfd.Unload();
        GLEXTmemoryobjectwin32.Unload();
        GLEXTmiscattribute.Unload();
        GLEXTmultidrawarrays.Unload();
        GLEXTmultidrawindirect.Unload();
        GLEXTmultisample.Unload();
        GLEXTmultisampledcompatibility.Unload();
        GLEXTmultisampledrendertotexture.Unload();
        GLEXTmultisampledrendertotexture2.Unload();
        GLEXTmultiviewdrawbuffers.Unload();
        GLEXTmultiviewtessellationgeometryshader.Unload();
        GLEXTmultiviewtexturemultisample.Unload();
        GLEXTmultiviewtimerquery.Unload();
        GLEXTocclusionqueryboolean.Unload();
        GLEXTpackeddepthstencil.Unload();
        GLEXTpackedfloat.Unload();
        GLEXTpackedpixels.Unload();
        GLEXTpalettedtexture.Unload();
        GLEXTpixelbufferobject.Unload();
        GLEXTpixeltransform.Unload();
        GLEXTpixeltransformcolortable.Unload();
        GLEXTpointparameters.Unload();
        GLEXTpolygonoffset.Unload();
        GLEXTpolygonoffsetclamp.Unload();
        GLEXTpostdepthcoverage.Unload();
        GLEXTprimitiveboundingbox.Unload();
        GLEXTprotectedtextures.Unload();
        GLEXTprovokingvertex.Unload();
        GLEXTpvrtcsRGB.Unload();
        GLEXTrastermultisample.Unload();
        GLEXTreadformatbgra.Unload();
        GLEXTrendersnorm.Unload();
        GLEXTrescalenormal.Unload();
        GLEXTrobustness.Unload();
        GLEXTsemaphore.Unload();
        GLEXTsemaphorefd.Unload();
        GLEXTsemaphorewin32.Unload();
        GLEXTsRGB.Unload();
        GLEXTsRGBwritecontrol.Unload();
        GLEXTsecondarycolor.Unload();
        GLEXTseparatedepthstencil.Unload();
        GLEXTseparateshaderobjects.Unload();
        GLEXTseparatespecularcolor.Unload();
        GLEXTshaderframebufferfetch.Unload();
        GLEXTshaderframebufferfetchnoncoherent.Unload();
        GLEXTshadergroupvote.Unload();
        GLEXTshaderimageloadformatted.Unload();
        GLEXTshaderimageloadstore.Unload();
        GLEXTshaderimplicitconversions.Unload();
        GLEXTshaderintegermix.Unload();
        GLEXTshaderioblocks.Unload();
        GLEXTshadernonconstantglobalinitializers.Unload();
        GLEXTshaderpixellocalstorage.Unload();
        GLEXTshaderpixellocalstorage2.Unload();
        GLEXTshadersamplesidentical.Unload();
        GLEXTshadertexturelod.Unload();
        GLEXTshadowfuncs.Unload();
        GLEXTshadowsamplers.Unload();
        GLEXTsharedtexturepalette.Unload();
        GLEXTsparsetexture.Unload();
        GLEXTsparsetexture2.Unload();
        GLEXTstencilcleartag.Unload();
        GLEXTstenciltwoside.Unload();
        GLEXTstencilwrap.Unload();
        GLEXTsubtexture.Unload();
        GLEXTtessellationpointsize.Unload();
        GLEXTtessellationshader.Unload();
        GLEXTtexture.Unload();
        GLEXTtexture3D.Unload();
        GLEXTtexturearray.Unload();
        GLEXTtextureborderclamp.Unload();
        GLEXTtexturebuffer.Unload();
        GLEXTtexturebufferobject.Unload();
        GLEXTtexturecompressionastcdecodemode.Unload();
        GLEXTtexturecompressionbptc.Unload();
        GLEXTtexturecompressiondxt1.Unload();
        GLEXTtexturecompressionlatc.Unload();
        GLEXTtexturecompressionrgtc.Unload();
        GLEXTtexturecompressions3tc.Unload();
        GLEXTtexturecompressions3tcsrgb.Unload();
        GLEXTtexturecubemap.Unload();
        GLEXTtexturecubemaparray.Unload();
        GLEXTtextureenvadd.Unload();
        GLEXTtextureenvcombine.Unload();
        GLEXTtextureenvdot3.Unload();
        GLEXTtexturefilteranisotropic.Unload();
        GLEXTtexturefilterminmax.Unload();
        GLEXTtextureformatBGRA8888.Unload();
        GLEXTtextureformatsRGBoverride.Unload();
        GLEXTtextureinteger.Unload();
        GLEXTtexturelodbias.Unload();
        GLEXTtexturemirrorclamp.Unload();
        GLEXTtexturemirrorclamptoedge.Unload();
        GLEXTtexturenorm16.Unload();
        GLEXTtextureobject.Unload();
        GLEXTtextureperturbnormal.Unload();
        GLEXTtexturequerylod.Unload();
        GLEXTtexturerg.Unload();
        GLEXTtexturesRGB.Unload();
        GLEXTtexturesRGBR8.Unload();
        GLEXTtexturesRGBRG8.Unload();
        GLEXTtexturesRGBdecode.Unload();
        GLEXTtextureshadowlod.Unload();
        GLEXTtexturesharedexponent.Unload();
        GLEXTtexturesnorm.Unload();
        GLEXTtexturestorage.Unload();
        GLEXTtexturestoragecompression.Unload();
        GLEXTtextureswizzle.Unload();
        GLEXTtexturetype2101010REV.Unload();
        GLEXTtextureview.Unload();
        GLEXTtimerquery.Unload();
        GLEXTtransformfeedback.Unload();
        GLEXTunpacksubimage.Unload();
        GLEXTvertexarray.Unload();
        GLEXTvertexarraybgra.Unload();
        GLEXTvertexattrib64bit.Unload();
        GLEXTvertexshader.Unload();
        GLEXTvertexweighting.Unload();
        GLEXTwin32keyedmutex.Unload();
        GLEXTwindowrectangles.Unload();
        GLEXTx11syncobject.Unload();
    }
}
