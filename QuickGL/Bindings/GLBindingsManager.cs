// MIT License
// 
// Copyright (c) 2025 vlOd
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

using QuickGLNS.Bindings.Extensions;

// Bindings generated at 2025-09-20 18:58:20.151762
namespace QuickGLNS.Bindings;

internal static unsafe class GLBindingsManager
{
    public static void Load()
    {
        if (QuickGL.IsFeatureSupported(GL10.FeatureInfo)) GL10.Load();
        if (QuickGL.IsFeatureSupported(GL11.FeatureInfo)) GL11.Load();
        if (QuickGL.IsFeatureSupported(GL12.FeatureInfo)) GL12.Load();
        if (QuickGL.IsFeatureSupported(GL13.FeatureInfo)) GL13.Load();
        if (QuickGL.IsFeatureSupported(GL14.FeatureInfo)) GL14.Load();
        if (QuickGL.IsFeatureSupported(GL15.FeatureInfo)) GL15.Load();
        if (QuickGL.IsFeatureSupported(GL20.FeatureInfo)) GL20.Load();
        if (QuickGL.IsFeatureSupported(GL21.FeatureInfo)) GL21.Load();
        if (QuickGL.IsFeatureSupported(GL30.FeatureInfo)) GL30.Load();
        if (QuickGL.IsFeatureSupported(GL31.FeatureInfo)) GL31.Load();
        if (QuickGL.IsFeatureSupported(GL32.FeatureInfo)) GL32.Load();
        if (QuickGL.IsFeatureSupported(GL33.FeatureInfo)) GL33.Load();
        if (QuickGL.IsFeatureSupported(GL40.FeatureInfo)) GL40.Load();
        if (QuickGL.IsFeatureSupported(GL41.FeatureInfo)) GL41.Load();
        if (QuickGL.IsFeatureSupported(GL42.FeatureInfo)) GL42.Load();
        if (QuickGL.IsFeatureSupported(GLESCM10.FeatureInfo)) GLESCM10.Load();
        if (QuickGL.IsFeatureSupported(GLES20.FeatureInfo)) GLES20.Load();
        if (QuickGL.IsFeatureSupported(GLES30.FeatureInfo)) GLES30.Load();
        if (QuickGL.IsFeatureSupported(GLES31.FeatureInfo)) GLES31.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBES2compatibility.FeatureInfo)) GLEXT_ARBES2compatibility.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBES31compatibility.FeatureInfo)) GLEXT_ARBES31compatibility.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBES32compatibility.FeatureInfo)) GLEXT_ARBES32compatibility.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBES3compatibility.FeatureInfo)) GLEXT_ARBES3compatibility.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBarraysofarrays.FeatureInfo)) GLEXT_ARBarraysofarrays.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBbaseinstance.FeatureInfo)) GLEXT_ARBbaseinstance.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBbindlesstexture.FeatureInfo)) GLEXT_ARBbindlesstexture.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBblendfuncextended.FeatureInfo)) GLEXT_ARBblendfuncextended.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBbufferstorage.FeatureInfo)) GLEXT_ARBbufferstorage.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBclevent.FeatureInfo)) GLEXT_ARBclevent.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBclearbufferobject.FeatureInfo)) GLEXT_ARBclearbufferobject.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBcleartexture.FeatureInfo)) GLEXT_ARBcleartexture.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBclipcontrol.FeatureInfo)) GLEXT_ARBclipcontrol.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBcolorbufferfloat.FeatureInfo)) GLEXT_ARBcolorbufferfloat.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBcompatibility.FeatureInfo)) GLEXT_ARBcompatibility.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBcompressedtexturepixelstorage.FeatureInfo)) GLEXT_ARBcompressedtexturepixelstorage.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBcomputeshader.FeatureInfo)) GLEXT_ARBcomputeshader.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBcomputevariablegroupsize.FeatureInfo)) GLEXT_ARBcomputevariablegroupsize.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBconditionalrenderinverted.FeatureInfo)) GLEXT_ARBconditionalrenderinverted.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBconservativedepth.FeatureInfo)) GLEXT_ARBconservativedepth.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBcopybuffer.FeatureInfo)) GLEXT_ARBcopybuffer.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBcopyimage.FeatureInfo)) GLEXT_ARBcopyimage.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBculldistance.FeatureInfo)) GLEXT_ARBculldistance.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBdebugoutput.FeatureInfo)) GLEXT_ARBdebugoutput.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBdepthbufferfloat.FeatureInfo)) GLEXT_ARBdepthbufferfloat.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBdepthclamp.FeatureInfo)) GLEXT_ARBdepthclamp.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBdepthtexture.FeatureInfo)) GLEXT_ARBdepthtexture.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBderivativecontrol.FeatureInfo)) GLEXT_ARBderivativecontrol.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBdirectstateaccess.FeatureInfo)) GLEXT_ARBdirectstateaccess.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBdrawbuffers.FeatureInfo)) GLEXT_ARBdrawbuffers.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBdrawbuffersblend.FeatureInfo)) GLEXT_ARBdrawbuffersblend.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBdrawelementsbasevertex.FeatureInfo)) GLEXT_ARBdrawelementsbasevertex.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBdrawindirect.FeatureInfo)) GLEXT_ARBdrawindirect.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBdrawinstanced.FeatureInfo)) GLEXT_ARBdrawinstanced.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBenhancedlayouts.FeatureInfo)) GLEXT_ARBenhancedlayouts.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBexplicitattriblocation.FeatureInfo)) GLEXT_ARBexplicitattriblocation.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBexplicituniformlocation.FeatureInfo)) GLEXT_ARBexplicituniformlocation.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBfragmentcoordconventions.FeatureInfo)) GLEXT_ARBfragmentcoordconventions.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBfragmentlayerviewport.FeatureInfo)) GLEXT_ARBfragmentlayerviewport.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBfragmentprogram.FeatureInfo)) GLEXT_ARBfragmentprogram.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBfragmentprogramshadow.FeatureInfo)) GLEXT_ARBfragmentprogramshadow.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBfragmentshader.FeatureInfo)) GLEXT_ARBfragmentshader.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBfragmentshaderinterlock.FeatureInfo)) GLEXT_ARBfragmentshaderinterlock.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBframebuffernoattachments.FeatureInfo)) GLEXT_ARBframebuffernoattachments.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBframebufferobject.FeatureInfo)) GLEXT_ARBframebufferobject.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBframebuffersRGB.FeatureInfo)) GLEXT_ARBframebuffersRGB.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBgeometryshader4.FeatureInfo)) GLEXT_ARBgeometryshader4.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBgetprogrambinary.FeatureInfo)) GLEXT_ARBgetprogrambinary.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBgettexturesubimage.FeatureInfo)) GLEXT_ARBgettexturesubimage.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBglspirv.FeatureInfo)) GLEXT_ARBglspirv.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBgpushader5.FeatureInfo)) GLEXT_ARBgpushader5.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBgpushaderfp64.FeatureInfo)) GLEXT_ARBgpushaderfp64.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBgpushaderint64.FeatureInfo)) GLEXT_ARBgpushaderint64.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBhalffloatpixel.FeatureInfo)) GLEXT_ARBhalffloatpixel.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBhalffloatvertex.FeatureInfo)) GLEXT_ARBhalffloatvertex.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBimaging.FeatureInfo)) GLEXT_ARBimaging.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBindirectparameters.FeatureInfo)) GLEXT_ARBindirectparameters.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBinstancedarrays.FeatureInfo)) GLEXT_ARBinstancedarrays.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBinternalformatquery.FeatureInfo)) GLEXT_ARBinternalformatquery.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBinternalformatquery2.FeatureInfo)) GLEXT_ARBinternalformatquery2.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBinvalidatesubdata.FeatureInfo)) GLEXT_ARBinvalidatesubdata.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBmapbufferalignment.FeatureInfo)) GLEXT_ARBmapbufferalignment.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBmapbufferrange.FeatureInfo)) GLEXT_ARBmapbufferrange.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBmatrixpalette.FeatureInfo)) GLEXT_ARBmatrixpalette.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBmultibind.FeatureInfo)) GLEXT_ARBmultibind.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBmultidrawindirect.FeatureInfo)) GLEXT_ARBmultidrawindirect.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBmultisample.FeatureInfo)) GLEXT_ARBmultisample.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBmultitexture.FeatureInfo)) GLEXT_ARBmultitexture.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBocclusionquery.FeatureInfo)) GLEXT_ARBocclusionquery.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBocclusionquery2.FeatureInfo)) GLEXT_ARBocclusionquery2.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBparallelshadercompile.FeatureInfo)) GLEXT_ARBparallelshadercompile.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBpipelinestatisticsquery.FeatureInfo)) GLEXT_ARBpipelinestatisticsquery.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBpixelbufferobject.FeatureInfo)) GLEXT_ARBpixelbufferobject.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBpointparameters.FeatureInfo)) GLEXT_ARBpointparameters.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBpointsprite.FeatureInfo)) GLEXT_ARBpointsprite.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBpolygonoffsetclamp.FeatureInfo)) GLEXT_ARBpolygonoffsetclamp.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBpostdepthcoverage.FeatureInfo)) GLEXT_ARBpostdepthcoverage.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBprograminterfacequery.FeatureInfo)) GLEXT_ARBprograminterfacequery.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBprovokingvertex.FeatureInfo)) GLEXT_ARBprovokingvertex.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBquerybufferobject.FeatureInfo)) GLEXT_ARBquerybufferobject.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBrobustbufferaccessbehavior.FeatureInfo)) GLEXT_ARBrobustbufferaccessbehavior.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBrobustness.FeatureInfo)) GLEXT_ARBrobustness.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBrobustnessisolation.FeatureInfo)) GLEXT_ARBrobustnessisolation.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBsamplelocations.FeatureInfo)) GLEXT_ARBsamplelocations.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBsampleshading.FeatureInfo)) GLEXT_ARBsampleshading.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBsamplerobjects.FeatureInfo)) GLEXT_ARBsamplerobjects.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBseamlesscubemap.FeatureInfo)) GLEXT_ARBseamlesscubemap.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBseamlesscubemappertexture.FeatureInfo)) GLEXT_ARBseamlesscubemappertexture.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBseparateshaderobjects.FeatureInfo)) GLEXT_ARBseparateshaderobjects.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBshaderatomiccounterops.FeatureInfo)) GLEXT_ARBshaderatomiccounterops.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBshaderatomiccounters.FeatureInfo)) GLEXT_ARBshaderatomiccounters.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBshaderballot.FeatureInfo)) GLEXT_ARBshaderballot.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBshaderbitencoding.FeatureInfo)) GLEXT_ARBshaderbitencoding.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBshaderclock.FeatureInfo)) GLEXT_ARBshaderclock.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBshaderdrawparameters.FeatureInfo)) GLEXT_ARBshaderdrawparameters.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBshadergroupvote.FeatureInfo)) GLEXT_ARBshadergroupvote.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBshaderimageloadstore.FeatureInfo)) GLEXT_ARBshaderimageloadstore.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBshaderimagesize.FeatureInfo)) GLEXT_ARBshaderimagesize.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBshaderobjects.FeatureInfo)) GLEXT_ARBshaderobjects.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBshaderprecision.FeatureInfo)) GLEXT_ARBshaderprecision.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBshaderstencilexport.FeatureInfo)) GLEXT_ARBshaderstencilexport.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBshaderstoragebufferobject.FeatureInfo)) GLEXT_ARBshaderstoragebufferobject.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBshadersubroutine.FeatureInfo)) GLEXT_ARBshadersubroutine.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBshadertextureimagesamples.FeatureInfo)) GLEXT_ARBshadertextureimagesamples.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBshadertexturelod.FeatureInfo)) GLEXT_ARBshadertexturelod.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBshaderviewportlayerarray.FeatureInfo)) GLEXT_ARBshaderviewportlayerarray.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBshadinglanguage100.FeatureInfo)) GLEXT_ARBshadinglanguage100.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBshadinglanguage420pack.FeatureInfo)) GLEXT_ARBshadinglanguage420pack.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBshadinglanguageinclude.FeatureInfo)) GLEXT_ARBshadinglanguageinclude.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBshadinglanguagepacking.FeatureInfo)) GLEXT_ARBshadinglanguagepacking.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBshadow.FeatureInfo)) GLEXT_ARBshadow.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBshadowambient.FeatureInfo)) GLEXT_ARBshadowambient.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBsparsebuffer.FeatureInfo)) GLEXT_ARBsparsebuffer.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBsparsetexture.FeatureInfo)) GLEXT_ARBsparsetexture.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBsparsetexture2.FeatureInfo)) GLEXT_ARBsparsetexture2.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBsparsetextureclamp.FeatureInfo)) GLEXT_ARBsparsetextureclamp.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBspirvextensions.FeatureInfo)) GLEXT_ARBspirvextensions.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBstenciltexturing.FeatureInfo)) GLEXT_ARBstenciltexturing.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBsync.FeatureInfo)) GLEXT_ARBsync.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtessellationshader.FeatureInfo)) GLEXT_ARBtessellationshader.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtexturebarrier.FeatureInfo)) GLEXT_ARBtexturebarrier.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtextureborderclamp.FeatureInfo)) GLEXT_ARBtextureborderclamp.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtexturebufferobject.FeatureInfo)) GLEXT_ARBtexturebufferobject.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtexturebufferobjectrgb32.FeatureInfo)) GLEXT_ARBtexturebufferobjectrgb32.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtexturebufferrange.FeatureInfo)) GLEXT_ARBtexturebufferrange.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtexturecompression.FeatureInfo)) GLEXT_ARBtexturecompression.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtexturecompressionbptc.FeatureInfo)) GLEXT_ARBtexturecompressionbptc.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtexturecompressionrgtc.FeatureInfo)) GLEXT_ARBtexturecompressionrgtc.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtexturecubemap.FeatureInfo)) GLEXT_ARBtexturecubemap.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtexturecubemaparray.FeatureInfo)) GLEXT_ARBtexturecubemaparray.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtextureenvadd.FeatureInfo)) GLEXT_ARBtextureenvadd.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtextureenvcombine.FeatureInfo)) GLEXT_ARBtextureenvcombine.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtextureenvcrossbar.FeatureInfo)) GLEXT_ARBtextureenvcrossbar.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtextureenvdot3.FeatureInfo)) GLEXT_ARBtextureenvdot3.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtexturefilteranisotropic.FeatureInfo)) GLEXT_ARBtexturefilteranisotropic.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtexturefilterminmax.FeatureInfo)) GLEXT_ARBtexturefilterminmax.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtexturefloat.FeatureInfo)) GLEXT_ARBtexturefloat.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtexturegather.FeatureInfo)) GLEXT_ARBtexturegather.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtexturemirrorclamptoedge.FeatureInfo)) GLEXT_ARBtexturemirrorclamptoedge.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtexturemirroredrepeat.FeatureInfo)) GLEXT_ARBtexturemirroredrepeat.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtexturemultisample.FeatureInfo)) GLEXT_ARBtexturemultisample.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtexturenonpoweroftwo.FeatureInfo)) GLEXT_ARBtexturenonpoweroftwo.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtexturequerylevels.FeatureInfo)) GLEXT_ARBtexturequerylevels.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtexturequerylod.FeatureInfo)) GLEXT_ARBtexturequerylod.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtexturerectangle.FeatureInfo)) GLEXT_ARBtexturerectangle.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtexturerg.FeatureInfo)) GLEXT_ARBtexturerg.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtexturergb10a2ui.FeatureInfo)) GLEXT_ARBtexturergb10a2ui.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtexturestencil8.FeatureInfo)) GLEXT_ARBtexturestencil8.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtexturestorage.FeatureInfo)) GLEXT_ARBtexturestorage.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtexturestoragemultisample.FeatureInfo)) GLEXT_ARBtexturestoragemultisample.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtextureswizzle.FeatureInfo)) GLEXT_ARBtextureswizzle.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtextureview.FeatureInfo)) GLEXT_ARBtextureview.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtimerquery.FeatureInfo)) GLEXT_ARBtimerquery.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtransformfeedback2.FeatureInfo)) GLEXT_ARBtransformfeedback2.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtransformfeedback3.FeatureInfo)) GLEXT_ARBtransformfeedback3.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtransformfeedbackinstanced.FeatureInfo)) GLEXT_ARBtransformfeedbackinstanced.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtransformfeedbackoverflowquery.FeatureInfo)) GLEXT_ARBtransformfeedbackoverflowquery.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBtransposematrix.FeatureInfo)) GLEXT_ARBtransposematrix.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBuniformbufferobject.FeatureInfo)) GLEXT_ARBuniformbufferobject.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBvertexarraybgra.FeatureInfo)) GLEXT_ARBvertexarraybgra.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBvertexarrayobject.FeatureInfo)) GLEXT_ARBvertexarrayobject.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBvertexattrib64bit.FeatureInfo)) GLEXT_ARBvertexattrib64bit.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBvertexattribbinding.FeatureInfo)) GLEXT_ARBvertexattribbinding.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBvertexblend.FeatureInfo)) GLEXT_ARBvertexblend.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBvertexbufferobject.FeatureInfo)) GLEXT_ARBvertexbufferobject.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBvertexprogram.FeatureInfo)) GLEXT_ARBvertexprogram.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBvertexshader.FeatureInfo)) GLEXT_ARBvertexshader.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBvertextype10f11f11frev.FeatureInfo)) GLEXT_ARBvertextype10f11f11frev.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBvertextype2101010rev.FeatureInfo)) GLEXT_ARBvertextype2101010rev.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBviewportarray.FeatureInfo)) GLEXT_ARBviewportarray.Load();
        if (QuickGL.IsFeatureSupported(GLEXT_ARBwindowpos.FeatureInfo)) GLEXT_ARBwindowpos.Load();
    }
    
    public static void Unload()
    {
        GL10.Unload();
        GL11.Unload();
        GL12.Unload();
        GL13.Unload();
        GL14.Unload();
        GL15.Unload();
        GL20.Unload();
        GL21.Unload();
        GL30.Unload();
        GL31.Unload();
        GL32.Unload();
        GL33.Unload();
        GL40.Unload();
        GL41.Unload();
        GL42.Unload();
        GLESCM10.Unload();
        GLES20.Unload();
        GLES30.Unload();
        GLES31.Unload();
        GLEXT_ARBES2compatibility.Unload();
        GLEXT_ARBES31compatibility.Unload();
        GLEXT_ARBES32compatibility.Unload();
        GLEXT_ARBES3compatibility.Unload();
        GLEXT_ARBarraysofarrays.Unload();
        GLEXT_ARBbaseinstance.Unload();
        GLEXT_ARBbindlesstexture.Unload();
        GLEXT_ARBblendfuncextended.Unload();
        GLEXT_ARBbufferstorage.Unload();
        GLEXT_ARBclevent.Unload();
        GLEXT_ARBclearbufferobject.Unload();
        GLEXT_ARBcleartexture.Unload();
        GLEXT_ARBclipcontrol.Unload();
        GLEXT_ARBcolorbufferfloat.Unload();
        GLEXT_ARBcompatibility.Unload();
        GLEXT_ARBcompressedtexturepixelstorage.Unload();
        GLEXT_ARBcomputeshader.Unload();
        GLEXT_ARBcomputevariablegroupsize.Unload();
        GLEXT_ARBconditionalrenderinverted.Unload();
        GLEXT_ARBconservativedepth.Unload();
        GLEXT_ARBcopybuffer.Unload();
        GLEXT_ARBcopyimage.Unload();
        GLEXT_ARBculldistance.Unload();
        GLEXT_ARBdebugoutput.Unload();
        GLEXT_ARBdepthbufferfloat.Unload();
        GLEXT_ARBdepthclamp.Unload();
        GLEXT_ARBdepthtexture.Unload();
        GLEXT_ARBderivativecontrol.Unload();
        GLEXT_ARBdirectstateaccess.Unload();
        GLEXT_ARBdrawbuffers.Unload();
        GLEXT_ARBdrawbuffersblend.Unload();
        GLEXT_ARBdrawelementsbasevertex.Unload();
        GLEXT_ARBdrawindirect.Unload();
        GLEXT_ARBdrawinstanced.Unload();
        GLEXT_ARBenhancedlayouts.Unload();
        GLEXT_ARBexplicitattriblocation.Unload();
        GLEXT_ARBexplicituniformlocation.Unload();
        GLEXT_ARBfragmentcoordconventions.Unload();
        GLEXT_ARBfragmentlayerviewport.Unload();
        GLEXT_ARBfragmentprogram.Unload();
        GLEXT_ARBfragmentprogramshadow.Unload();
        GLEXT_ARBfragmentshader.Unload();
        GLEXT_ARBfragmentshaderinterlock.Unload();
        GLEXT_ARBframebuffernoattachments.Unload();
        GLEXT_ARBframebufferobject.Unload();
        GLEXT_ARBframebuffersRGB.Unload();
        GLEXT_ARBgeometryshader4.Unload();
        GLEXT_ARBgetprogrambinary.Unload();
        GLEXT_ARBgettexturesubimage.Unload();
        GLEXT_ARBglspirv.Unload();
        GLEXT_ARBgpushader5.Unload();
        GLEXT_ARBgpushaderfp64.Unload();
        GLEXT_ARBgpushaderint64.Unload();
        GLEXT_ARBhalffloatpixel.Unload();
        GLEXT_ARBhalffloatvertex.Unload();
        GLEXT_ARBimaging.Unload();
        GLEXT_ARBindirectparameters.Unload();
        GLEXT_ARBinstancedarrays.Unload();
        GLEXT_ARBinternalformatquery.Unload();
        GLEXT_ARBinternalformatquery2.Unload();
        GLEXT_ARBinvalidatesubdata.Unload();
        GLEXT_ARBmapbufferalignment.Unload();
        GLEXT_ARBmapbufferrange.Unload();
        GLEXT_ARBmatrixpalette.Unload();
        GLEXT_ARBmultibind.Unload();
        GLEXT_ARBmultidrawindirect.Unload();
        GLEXT_ARBmultisample.Unload();
        GLEXT_ARBmultitexture.Unload();
        GLEXT_ARBocclusionquery.Unload();
        GLEXT_ARBocclusionquery2.Unload();
        GLEXT_ARBparallelshadercompile.Unload();
        GLEXT_ARBpipelinestatisticsquery.Unload();
        GLEXT_ARBpixelbufferobject.Unload();
        GLEXT_ARBpointparameters.Unload();
        GLEXT_ARBpointsprite.Unload();
        GLEXT_ARBpolygonoffsetclamp.Unload();
        GLEXT_ARBpostdepthcoverage.Unload();
        GLEXT_ARBprograminterfacequery.Unload();
        GLEXT_ARBprovokingvertex.Unload();
        GLEXT_ARBquerybufferobject.Unload();
        GLEXT_ARBrobustbufferaccessbehavior.Unload();
        GLEXT_ARBrobustness.Unload();
        GLEXT_ARBrobustnessisolation.Unload();
        GLEXT_ARBsamplelocations.Unload();
        GLEXT_ARBsampleshading.Unload();
        GLEXT_ARBsamplerobjects.Unload();
        GLEXT_ARBseamlesscubemap.Unload();
        GLEXT_ARBseamlesscubemappertexture.Unload();
        GLEXT_ARBseparateshaderobjects.Unload();
        GLEXT_ARBshaderatomiccounterops.Unload();
        GLEXT_ARBshaderatomiccounters.Unload();
        GLEXT_ARBshaderballot.Unload();
        GLEXT_ARBshaderbitencoding.Unload();
        GLEXT_ARBshaderclock.Unload();
        GLEXT_ARBshaderdrawparameters.Unload();
        GLEXT_ARBshadergroupvote.Unload();
        GLEXT_ARBshaderimageloadstore.Unload();
        GLEXT_ARBshaderimagesize.Unload();
        GLEXT_ARBshaderobjects.Unload();
        GLEXT_ARBshaderprecision.Unload();
        GLEXT_ARBshaderstencilexport.Unload();
        GLEXT_ARBshaderstoragebufferobject.Unload();
        GLEXT_ARBshadersubroutine.Unload();
        GLEXT_ARBshadertextureimagesamples.Unload();
        GLEXT_ARBshadertexturelod.Unload();
        GLEXT_ARBshaderviewportlayerarray.Unload();
        GLEXT_ARBshadinglanguage100.Unload();
        GLEXT_ARBshadinglanguage420pack.Unload();
        GLEXT_ARBshadinglanguageinclude.Unload();
        GLEXT_ARBshadinglanguagepacking.Unload();
        GLEXT_ARBshadow.Unload();
        GLEXT_ARBshadowambient.Unload();
        GLEXT_ARBsparsebuffer.Unload();
        GLEXT_ARBsparsetexture.Unload();
        GLEXT_ARBsparsetexture2.Unload();
        GLEXT_ARBsparsetextureclamp.Unload();
        GLEXT_ARBspirvextensions.Unload();
        GLEXT_ARBstenciltexturing.Unload();
        GLEXT_ARBsync.Unload();
        GLEXT_ARBtessellationshader.Unload();
        GLEXT_ARBtexturebarrier.Unload();
        GLEXT_ARBtextureborderclamp.Unload();
        GLEXT_ARBtexturebufferobject.Unload();
        GLEXT_ARBtexturebufferobjectrgb32.Unload();
        GLEXT_ARBtexturebufferrange.Unload();
        GLEXT_ARBtexturecompression.Unload();
        GLEXT_ARBtexturecompressionbptc.Unload();
        GLEXT_ARBtexturecompressionrgtc.Unload();
        GLEXT_ARBtexturecubemap.Unload();
        GLEXT_ARBtexturecubemaparray.Unload();
        GLEXT_ARBtextureenvadd.Unload();
        GLEXT_ARBtextureenvcombine.Unload();
        GLEXT_ARBtextureenvcrossbar.Unload();
        GLEXT_ARBtextureenvdot3.Unload();
        GLEXT_ARBtexturefilteranisotropic.Unload();
        GLEXT_ARBtexturefilterminmax.Unload();
        GLEXT_ARBtexturefloat.Unload();
        GLEXT_ARBtexturegather.Unload();
        GLEXT_ARBtexturemirrorclamptoedge.Unload();
        GLEXT_ARBtexturemirroredrepeat.Unload();
        GLEXT_ARBtexturemultisample.Unload();
        GLEXT_ARBtexturenonpoweroftwo.Unload();
        GLEXT_ARBtexturequerylevels.Unload();
        GLEXT_ARBtexturequerylod.Unload();
        GLEXT_ARBtexturerectangle.Unload();
        GLEXT_ARBtexturerg.Unload();
        GLEXT_ARBtexturergb10a2ui.Unload();
        GLEXT_ARBtexturestencil8.Unload();
        GLEXT_ARBtexturestorage.Unload();
        GLEXT_ARBtexturestoragemultisample.Unload();
        GLEXT_ARBtextureswizzle.Unload();
        GLEXT_ARBtextureview.Unload();
        GLEXT_ARBtimerquery.Unload();
        GLEXT_ARBtransformfeedback2.Unload();
        GLEXT_ARBtransformfeedback3.Unload();
        GLEXT_ARBtransformfeedbackinstanced.Unload();
        GLEXT_ARBtransformfeedbackoverflowquery.Unload();
        GLEXT_ARBtransposematrix.Unload();
        GLEXT_ARBuniformbufferobject.Unload();
        GLEXT_ARBvertexarraybgra.Unload();
        GLEXT_ARBvertexarrayobject.Unload();
        GLEXT_ARBvertexattrib64bit.Unload();
        GLEXT_ARBvertexattribbinding.Unload();
        GLEXT_ARBvertexblend.Unload();
        GLEXT_ARBvertexbufferobject.Unload();
        GLEXT_ARBvertexprogram.Unload();
        GLEXT_ARBvertexshader.Unload();
        GLEXT_ARBvertextype10f11f11frev.Unload();
        GLEXT_ARBvertextype2101010rev.Unload();
        GLEXT_ARBviewportarray.Unload();
        GLEXT_ARBwindowpos.Unload();
    }
}
