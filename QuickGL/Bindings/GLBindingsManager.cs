// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T18:55:43.1883890Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings;

public static unsafe class GLBindingsManager
{
    internal static void Load()
    {
        if (QuickGL.IsFeatureSupported(GL12.FeatureInfo)) GL12.Load();
        if (QuickGL.IsFeatureSupported(GL11.FeatureInfo)) GL11.Load();
        if (QuickGL.IsFeatureSupported(GL13.FeatureInfo)) GL13.Load();
        if (QuickGL.IsFeatureSupported(GL10.FeatureInfo)) GL10.Load();
        if (QuickGL.IsFeatureSupported(GL14.FeatureInfo)) GL14.Load();
        if (QuickGL.IsFeatureSupported(GL20.FeatureInfo)) GL20.Load();
        if (QuickGL.IsFeatureSupported(GL21.FeatureInfo)) GL21.Load();
        if (QuickGL.IsFeatureSupported(GL15.FeatureInfo)) GL15.Load();
        if (QuickGL.IsFeatureSupported(GL30.FeatureInfo)) GL30.Load();
        if (QuickGL.IsFeatureSupported(GL31.FeatureInfo)) GL31.Load();
        if (QuickGL.IsFeatureSupported(GL32.FeatureInfo)) GL32.Load();
        if (QuickGL.IsFeatureSupported(GL33.FeatureInfo)) GL33.Load();
        if (QuickGL.IsFeatureSupported(GL41.FeatureInfo)) GL41.Load();
        if (QuickGL.IsFeatureSupported(GL40.FeatureInfo)) GL40.Load();
        if (QuickGL.IsFeatureSupported(GL42.FeatureInfo)) GL42.Load();
        if (QuickGL.IsFeatureSupported(GL44.FeatureInfo)) GL44.Load();
        if (QuickGL.IsFeatureSupported(GL45.FeatureInfo)) GL45.Load();
        if (QuickGL.IsFeatureSupported(GLESCM10.FeatureInfo)) GLESCM10.Load();
        if (QuickGL.IsFeatureSupported(GL46.FeatureInfo)) GL46.Load();
        if (QuickGL.IsFeatureSupported(GLES20.FeatureInfo)) GLES20.Load();
        if (QuickGL.IsFeatureSupported(GL43.FeatureInfo)) GL43.Load();
        if (QuickGL.IsFeatureSupported(GLES30.FeatureInfo)) GLES30.Load();
        if (QuickGL.IsFeatureSupported(GLES31.FeatureInfo)) GLES31.Load();
        if (QuickGL.IsFeatureSupported(GLSC20.FeatureInfo)) GLSC20.Load();
        if (QuickGL.IsFeatureSupported(GLES32.FeatureInfo)) GLES32.Load();
    }

    internal static void Unload()
    {
        GL12.Unload();
        GL11.Unload();
        GL13.Unload();
        GL10.Unload();
        GL14.Unload();
        GL20.Unload();
        GL21.Unload();
        GL15.Unload();
        GL30.Unload();
        GL31.Unload();
        GL32.Unload();
        GL33.Unload();
        GL41.Unload();
        GL40.Unload();
        GL42.Unload();
        GL44.Unload();
        GL45.Unload();
        GLESCM10.Unload();
        GL46.Unload();
        GLES20.Unload();
        GL43.Unload();
        GLES30.Unload();
        GLES31.Unload();
        GLSC20.Unload();
        GLES32.Unload();
    }
}
