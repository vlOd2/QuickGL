// This file has been automatically generated
// Generated by: QGLBindingsGen (https://github.com/vlOd2/QGLBindingsGen)
// Generated at: 2025-09-27T19:43:43.7301597Z
using System.Runtime.InteropServices;
using QuickGLNS.Internal;

namespace QuickGLNS.Bindings;

public static unsafe class GL44
{
    #region Constants
    public const int GL_MAX_VERTEX_ATTRIB_STRIDE = 0x000082E5;
    public const int GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED = 0x00008221;
    public const int GL_TEXTURE_BUFFER_BINDING = 0x00008C2A;
    public const int GL_MAP_READ_BIT = 0x00000001;
    public const int GL_MAP_WRITE_BIT = 0x00000002;
    public const int GL_MAP_PERSISTENT_BIT = 0x00000040;
    public const int GL_MAP_COHERENT_BIT = 0x00000080;
    public const int GL_DYNAMIC_STORAGE_BIT = 0x00000100;
    public const int GL_CLIENT_STORAGE_BIT = 0x00000200;
    public const int GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT = 0x00004000;
    public const int GL_BUFFER_IMMUTABLE_STORAGE = 0x0000821F;
    public const int GL_BUFFER_STORAGE_FLAGS = 0x00008220;
    public const int GL_CLEAR_TEXTURE = 0x00009365;
    public const int GL_LOCATION_COMPONENT = 0x0000934A;
    public const int GL_TRANSFORM_FEEDBACK_BUFFER = 0x00008C8E;
    public const int GL_TRANSFORM_FEEDBACK_BUFFER_INDEX = 0x0000934B;
    public const int GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE = 0x0000934C;
    public const int GL_QUERY_BUFFER = 0x00009192;
    public const int GL_QUERY_BUFFER_BARRIER_BIT = 0x00008000;
    public const int GL_QUERY_BUFFER_BINDING = 0x00009193;
    public const int GL_QUERY_RESULT_NO_WAIT = 0x00009194;
    public const int GL_MIRROR_CLAMP_TO_EDGE = 0x00008743;
    public const int GL_STENCIL_INDEX = 0x00001901;
    public const int GL_STENCIL_INDEX8 = 0x00008D48;
    public const int GL_UNSIGNED_INT_10F_11F_11F_REV = 0x00008C3B;
    #endregion

    #region Function pointers
    internal static delegate* unmanaged<uint, nint, void*, uint, void> _glBufferStorage = null;
    internal static delegate* unmanaged<uint, int, uint, uint, void*, void> _glClearTexImage = null;
    internal static delegate* unmanaged<uint, int, int, int, int, int, int, int, uint, uint, void*, void> _glClearTexSubImage = null;
    internal static delegate* unmanaged<uint, uint, int, uint*, void> _glBindBuffersBase = null;
    internal static delegate* unmanaged<uint, uint, int, uint*, nint*, nint*, void> _glBindBuffersRange = null;
    internal static delegate* unmanaged<uint, int, uint*, void> _glBindTextures = null;
    internal static delegate* unmanaged<uint, int, uint*, void> _glBindSamplers = null;
    internal static delegate* unmanaged<uint, int, uint*, void> _glBindImageTextures = null;
    internal static delegate* unmanaged<uint, int, uint*, nint*, int*, void> _glBindVertexBuffers = null;

    internal static void Load()
    {
        _glBufferStorage = (delegate* unmanaged<uint, nint, void*, uint, void>)QuickGL.GetGLProcAddress("glBufferStorage");
        _glClearTexImage = (delegate* unmanaged<uint, int, uint, uint, void*, void>)QuickGL.GetGLProcAddress("glClearTexImage");
        _glClearTexSubImage = (delegate* unmanaged<uint, int, int, int, int, int, int, int, uint, uint, void*, void>)QuickGL.GetGLProcAddress("glClearTexSubImage");
        _glBindBuffersBase = (delegate* unmanaged<uint, uint, int, uint*, void>)QuickGL.GetGLProcAddress("glBindBuffersBase");
        _glBindBuffersRange = (delegate* unmanaged<uint, uint, int, uint*, nint*, nint*, void>)QuickGL.GetGLProcAddress("glBindBuffersRange");
        _glBindTextures = (delegate* unmanaged<uint, int, uint*, void>)QuickGL.GetGLProcAddress("glBindTextures");
        _glBindSamplers = (delegate* unmanaged<uint, int, uint*, void>)QuickGL.GetGLProcAddress("glBindSamplers");
        _glBindImageTextures = (delegate* unmanaged<uint, int, uint*, void>)QuickGL.GetGLProcAddress("glBindImageTextures");
        _glBindVertexBuffers = (delegate* unmanaged<uint, int, uint*, nint*, int*, void>)QuickGL.GetGLProcAddress("glBindVertexBuffers");
    }

    internal static void Unload()
    {
        _glBufferStorage = null;
        _glClearTexImage = null;
        _glClearTexSubImage = null;
        _glBindBuffersBase = null;
        _glBindBuffersRange = null;
        _glBindTextures = null;
        _glBindSamplers = null;
        _glBindImageTextures = null;
        _glBindVertexBuffers = null;
    }
    #endregion

    #region Function wrappers
    public static void glBufferStorage(uint target, nint size, void* data, uint flags) { QGLFeature.VerifyFunc((nint)_glBufferStorage); _glBufferStorage(target, size, data, flags); }
    public static void glClearTexImage(uint texture, int level, uint format, uint type, void* data) { QGLFeature.VerifyFunc((nint)_glClearTexImage); _glClearTexImage(texture, level, format, type, data); }
    public static void glClearTexSubImage(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, uint format, uint type, void* data) { QGLFeature.VerifyFunc((nint)_glClearTexSubImage); _glClearTexSubImage(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, data); }
    public static void glBindBuffersBase(uint target, uint first, int count, uint* buffers) { QGLFeature.VerifyFunc((nint)_glBindBuffersBase); _glBindBuffersBase(target, first, count, buffers); }
    public static void glBindBuffersRange(uint target, uint first, int count, uint* buffers, nint* offsets, nint* sizes) { QGLFeature.VerifyFunc((nint)_glBindBuffersRange); _glBindBuffersRange(target, first, count, buffers, offsets, sizes); }
    public static void glBindTextures(uint first, int count, uint* textures) { QGLFeature.VerifyFunc((nint)_glBindTextures); _glBindTextures(first, count, textures); }
    public static void glBindSamplers(uint first, int count, uint* samplers) { QGLFeature.VerifyFunc((nint)_glBindSamplers); _glBindSamplers(first, count, samplers); }
    public static void glBindImageTextures(uint first, int count, uint* textures) { QGLFeature.VerifyFunc((nint)_glBindImageTextures); _glBindImageTextures(first, count, textures); }
    public static void glBindVertexBuffers(uint first, int count, uint* buffers, nint* offsets, int* strides) { QGLFeature.VerifyFunc((nint)_glBindVertexBuffers); _glBindVertexBuffers(first, count, buffers, offsets, strides); }
    #endregion

    internal static QGLFeature FeatureInfo => new("GL_VERSION_4_4", false, false);
}
